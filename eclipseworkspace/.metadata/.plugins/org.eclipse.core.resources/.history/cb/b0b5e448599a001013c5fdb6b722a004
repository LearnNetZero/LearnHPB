/* 
 * Kuda includes a library and editor for authoring interactive 3D content for the web.
 * Copyright (C) 2011 SRI International.
 *
 * This program is free software; you can redistribute it and/or modify it under the terms
 * of the GNU General Public License as published by the Free Software Foundation; either 
 * version 2 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program; 
 * if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, 
 * Boston, MA 02110-1301 USA.
 */

/**
 * This is a simple hello world, showing how to set up a simple world, 
 *		load a model, and set the camera to a viewpoint once the model
 *		has loaded.
 */
	
	o3djs.require('hemi.core');
	o3djs.require('o3djs.util');


	var unit11 = unit11 || {};
	var unitTest11 = unitTest11 || {};

	
	unit11.start = function(onUnitCompleteCallback) {
		unit11.onUnitCompleteCallback = onUnitCompleteCallback;
		unitTest11.callBack = unit11.step_2;
		
		var desc = 'Tests the ability to load a model, then rotate it 90 degrees';
		jqUnit.module('UNIT 10', desc); 

		jqUnit.test("Load model", unitTest11.init);
		jqUnit.stop();
	};
	
	unit11.step_2 = function() {
		jqUnit.start();
		unitTest11.callBack = unit11.end;
		jqUnit.test("Clone Model", unitTest11.start);
		jqUnit.stop();
	};
	
	unit11.end = function() {
		jqUnit.start();
		//hemi.view.removeRenderListener(unitTest11);
		unit11.onUnitCompleteCallback.call();
	};
	
	unit11.cleanup = function() {
		unitTest11.model.cleanup();
	};
	

	unitTest11.init = function()   {
		jqUnit.expect(1);
		
		unitTest11.model = new hemi.model.Model();				// Create a new Model
		jqMock.assertThat(unitTest11.model , is.instanceOf(hemi.model.Model));
		
		unitTest11.model.setFileName('9FootEnvelope/scene.json'); // Set the model file
		
		var subscription = unitTest11.model.subscribe (
			hemi.msg.load,
			function() {
				unitTest11.model.unsubscribe(subscription, hemi.msg.load);
				unitTest11.callBack.call();
			}
		);
		
		hemi.world.ready();   // Indicate that we are ready to start our script
	};
	
	unitTest11.cloneComplete = function(){
		
		//unitTest11.model2 = theModel;
		//unitTest11.model.transform.translate(500,0,0);
		
		unitTest11.model.root.translate(50,0,0);
		
		unitTest11.callBack.call();
	};
	
	unitTest11.start = function() {
		
		unitTest11.model2 = new hemi.model.Model();
		
		var subscription = unitTest11.model2.subscribe (
			hemi.msg.load,
			function() {
				unitTest11.model2.unsubscribe(subscription, hemi.msg.load);
				unitTest11.cloneComplete();
			}
		);		

		unitTest11.model.clone(unitTest11.model2);
		

		hemi.world.camera.enableControl();	// Enable camera mouse control


		var vp = new hemi.view.Viewpoint();		// Create a new Viewpoint
		vp.eye = [50,0,50];					// Set viewpoint eye
		vp.target = [50,0,0];					// Set viewpoint target
		
		hemi.world.camera.moveToView(vp,30);
		
	};
	






	
	

