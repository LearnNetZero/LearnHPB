
o3djs.require('lgb.view.AdminPanel');


var lgb = (function(lgb) {

	lgb.view = lgb.view || {};

	/**
	 * @class MVC view for displaying the building envelope
	 * @extends lgb.view.ViewBase
	 */
	lgb.view.EnvelopeView = function(){
		
		
		lgb.view.ViewBase.call(this);
				
		this.buildingFloors = [];
		this.dataModel = null;
		this.floorsCreated = 0;
		this.parentTransform = null;
		

		this.meshList = [];
		this.currentFloorMesh = null;
		
		
	};
	
	lgb.view.EnvelopeView.prototype = {
	
	
		init : function(dataModel) {
			
			this.dataModel = dataModel;
			
			
			this.listen('ENVELOPE_DATA_MODEL_CHANGED', this.onDataModelChanged);
			this.listen('ALL_MESHES_LOADED', this.onMeshesLoaded);
			
/*
			var delegate = jQuery.proxy( this.onDataModelChanged, this );
			$('body').bind('ENVELOPE_DATA_MODEL_CHANGED', delegate);

			var delegate2 = jQuery.proxy( this.onMeshesLoaded, this );
			$('body').bind('ALL_MESHES_LOADED', delegate2);
*/
		},
		
		show : function() {
			
			if (this.buildingFloors.length > 0) {
				this.cleanup();
			}
			
			this.createFloors();

		},
		cleanup : function() {
			var len = this.buildingFloors.length;
			
			for (var i=1; i<len; i++) {
				this.buildingFloors[i].cleanup();
			}
			
		},		
			
		createFloors : function() {
			
			var idx = this.dataModel.floorHeight.toString();
			this.currentFloorMesh = this.meshList [idx];
	

			var delegate = jQuery.proxy( this.onFloorCloned, this );
			

			this.floorsCreated = 0;
			for (var i=0; i < this.dataModel.totalFloors; i++) {
				this.buildingFloors[i] = this.currentFloorMesh.clone(delegate);
			}
			
		},
		
		onFloorCloned : function(event) {
			
			this.floorsCreated++;
			
			if (this.floorsCreated > this.dataModel.totalFloors-1 ) {
				//all floors are now cloned
				this.stackFloors();
			}
		},
		
		stackFloors : function() {
			
			var len = this.buildingFloors.length;
			var bb = this.buildingFloors[0].root.boundingBox;
			
			var floorHeightGL = bb.maxExtent[2] - bb.minExtent[2];
			
			//this.parentTransform = this.pack.createObject('Transform');
			
			for (var i=1; i<len; i++) {
				var floorMesh = this.buildingFloors[i];
				
				var delta = floorHeightGL * (i);
				floorMesh.root.translate(0,0,delta);
				//floorMesh.parent = this.parentTransform;
			}
			
			this.postion();
		},
		
		postion : function() {
			
		var core = hemi.core,
			view = hemi.view;
		
		var pack = core.mainPack,
			checkerMaterial = core.material.createCheckerMaterial(pack,view.viewInfo, [0, 0, 0.5, 1], [1, 1, 1, 1], false, 50),
			shape = core.primitives.createPlane(pack, checkerMaterial, 20000, 20000, 1, 1),
			transform = pack.createObject('Transform');
			
		//checkerMaterial.getParam('lightWorldPos').bind(camera.light.position);
		
		transform.parent = core.client.root;
		
		var shapes = this.buildingFloors[0].getShapes();
		
		//transform.addShape(shapes[0]);
		//this.buildingFloors[0].parent = transform;
		
		//transform.shapes = transform.shapes.concat(shapes);
		transform.recalculateBoundingBox();
		
		
		//transform.adddChild(this.buildingFloors[0]);
		transform.translate([0, -20, 0]);
		//this.buildingFloors[0].root.translate([0, -20, 0]);
		
		
		//this.parentTransform.translate(50,0,500);
		
		
		},
		
		onMeshesLoaded : function(event) {
		
			this.pack = hemi.core.client.createPack();
		
			this.meshList['9']= lgb.loader.modelList['9FootEnvelope'];
			this.meshList['11']= lgb.loader.modelList['11FootEnvelope'];
			this.meshList['13']= lgb.loader.modelList['13FootEnvelope'];

			this.meshList['9'].setTransformVisible(this.meshList['9'].root, false);
			this.meshList['11'].setTransformVisible(this.meshList['11'].root, false);
			this.meshList['13'].setTransformVisible(this.meshList['13'].root, false);
			
			this.show();
		},
		
		onDataModelChanged : function(event) {
			this.show();
		},

		getMeshList: function() {
			
			var modelAry = [
				{file: '9FootEnvelope.json', mode: 'ENVELOPE', name: '9FootEnvelope'},
				{file: '11FootEnvelope.json', mode: 'ENVELOPE', name: '11FootEnvelope'},
				{file: '13FootEnvelope.json', mode: 'ENVELOPE', name: '13FootEnvelope'}
			];
			
			return modelAry;
		}
		
	};

	lgb.view.EnvelopeView.inheritsFrom(lgb.view.ViewBase);
	
	return lgb;
	
})(lgb || {});











