/*
Three.js is used by permission.  The following classes were modified 
by Raj Dye before being compiled into this project:

THREE.Mesh - added 3 functions 
THREE.BinaryLoader - modified 1 function
THREE.Geometry - added 2 functions 
THREE.Object3D - added 1 function

The following classes were created based on THREE.js classes:

THREE.SceneLoaderEx - based on THREE.SceneLoader
THREE.TrackballControlsEx - based on THREE.TrackballControls


The MIT License

Copyright (c) 2010-2011 three.js Authors. All rights reserved.

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
*/// three.min.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"51"};void 0===self.console&&(self.console={info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}});void 0===self.Int32Array&&(self.Int32Array=Array,self.Float32Array=Array);void 0===String.prototype.startsWith&&(String.prototype.startsWith=function(a){return this.slice(0,a.length)===a});
void 0===String.prototype.endsWith&&(String.prototype.endsWith=function(a){var a=String(a),b=this.lastIndexOf(a);return b>=0&&b===this.length-a.length});void 0===!String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")});
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c){window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"];window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"]}if(window.requestAnimationFrame===void 0)window.requestAnimationFrame=function(b){var c=Date.now(),e=Math.max(0,16-(c-a)),g=window.setTimeout(function(){b(c+e)},e);a=c+e;return g};if(window.cancelAnimationFrame===void 0)window.cancelAnimationFrame=
function(a){clearTimeout(a)}})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=a!==void 0?a:true;this.elapsedTime=this.oldTime=this.startTime=0;this.running=false};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=true};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=false};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime=this.elapsedTime+this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime=this.elapsedTime+a}return a};
THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,f,e;if(c===0)this.r=this.g=this.b=0;else{d=Math.floor(a*6);f=a*6-d;a=c*(1-b);e=c*(1-b*f);b=c*(1-b*(1-f));if(d===0){this.r=c;this.g=b;this.b=a}else if(d===1){this.r=e;this.g=c;this.b=a}else if(d===2){this.r=a;this.g=c;this.b=b}else if(d===3){this.r=a;this.g=e;this.b=c}else if(d===4){this.r=b;this.g=a;this.b=c}else if(d===5){this.r=c;this.g=a;this.b=e}}return this},setHex:function(a){a=
Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r=this.r+(a.r-this.r)*b;this.g=this.g+(a.g-this.g)*b;this.b=this.b+(a.b-this.b)*b;return this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getContextStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x=this.x+a.x;this.y=this.y+a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x=this.x-a.x;this.y=this.y-a.y;return this},multiplyScalar:function(a){this.x=this.x*a;this.y=this.y*a;return this},divideScalar:function(a){if(a){this.x=
this.x/a;this.y=this.y/a}else this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
lerpSelf:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return this.lengthSq()<1E-4},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x=this.x+a.x;this.y=this.y+a.y;this.z=this.z+a.z;return this},addScalar:function(a){this.x=this.x+a;this.y=this.y+
a;this.z=this.z+a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x=this.x-a.x;this.y=this.y-a.y;this.z=this.z-a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x=this.x*a.x;this.y=this.y*a.y;this.z=this.z*a.z;return this},multiplyScalar:function(a){this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;return this},divideSelf:function(a){this.x=this.x/a.x;this.y=
this.y/a.y;this.z=this.z/a.z;return this},divideScalar:function(a){if(a){this.x=this.x/a;this.y=this.y/a;this.z=this.z/a}else this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},
setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;this.z=this.z+(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,
a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,f=d[0],e=d[4],g=d[8],h=d[1],i=d[5],k=d[9],j=d[2],n=d[6],d=d[10];if(b===void 0||b==="XYZ"){this.y=Math.asin(c(g));if(Math.abs(g)<0.99999){this.x=Math.atan2(-k,d);this.z=Math.atan2(-e,f)}else{this.x=Math.atan2(n,i);this.z=0}}else if(b==="YXZ"){this.x=Math.asin(-c(k));if(Math.abs(k)<
0.99999){this.y=Math.atan2(g,d);this.z=Math.atan2(h,i)}else{this.y=Math.atan2(-j,f);this.z=0}}else if(b==="ZXY"){this.x=Math.asin(c(n));if(Math.abs(n)<0.99999){this.y=Math.atan2(-j,d);this.z=Math.atan2(-e,i)}else{this.y=0;this.z=Math.atan2(h,f)}}else if(b==="ZYX"){this.y=Math.asin(-c(j));if(Math.abs(j)<0.99999){this.x=Math.atan2(n,d);this.z=Math.atan2(h,f)}else{this.x=0;this.z=Math.atan2(-e,i)}}else if(b==="YZX"){this.z=Math.asin(c(h));if(Math.abs(h)<0.99999){this.x=Math.atan2(-k,i);this.y=Math.atan2(-j,
f)}else{this.x=0;this.y=Math.atan2(g,d)}}else if(b==="XZY"){this.z=Math.asin(-c(e));if(Math.abs(e)<0.99999){this.x=Math.atan2(n,i);this.y=Math.atan2(g,f)}else{this.x=Math.atan2(-k,d);this.y=0}}return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,f=a.y*a.y,e=a.z*a.z,g=a.w*a.w;if(b===void 0||b==="XYZ"){this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-f+e);this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w)));this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-f-e)}else if(b===
"YXZ"){this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z)));this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-f+e);this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g-d+f-e)}else if(b==="ZXY"){this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z)));this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-f+e);this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+f-e)}else if(b==="ZYX"){this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-f+e);this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z)));this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-f-e)}else if(b==="YZX"){this.x=Math.atan2(2*(a.x*a.w-a.z*
a.y),g-d+f-e);this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-f-e);this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))}else if(b==="XZY"){this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),g-d+f-e);this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-f-e);this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y)))}return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=
b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return this.lengthSq()<1E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x=this.x+a.x;this.y=this.y+a.y;this.z=this.z+a.z;this.w=this.w+a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x=
this.x-a.x;this.y=this.y-a.y;this.z=this.z-a.z;this.w=this.w-a.w;return this},multiplyScalar:function(a){this.x=this.x*a;this.y=this.y*a;this.z=this.z*a;this.w=this.w*a;return this},divideScalar:function(a){if(a){this.x=this.x/a;this.y=this.y/a;this.z=this.z/a;this.w=this.w/a}else{this.z=this.y=this.x=0;this.w=1}return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x=this.x+(a.x-this.x)*b;this.y=this.y+(a.y-this.y)*b;this.z=this.z+(a.z-this.z)*b;this.w=this.w+(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*
Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);if(b<1E-4){this.x=1;this.z=this.y=0}else{this.x=a.x/b;this.y=a.y/b;this.z=a.z/b}return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,f=a[0];d=a[4];var e=a[8],g=a[1],h=a[5],i=a[9];c=a[2];b=a[6];var k=a[10];if(Math.abs(d-g)<0.01&&Math.abs(e-c)<0.01&&Math.abs(i-b)<0.01){if(Math.abs(d+g)<0.1&&Math.abs(e+c)<0.1&&Math.abs(i+b)<0.1&&Math.abs(f+h+k-3)<0.1){this.set(1,0,0,0);return this}a=Math.PI;f=(f+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;e=
(e+c)/4;i=(i+b)/4;if(f>h&&f>k)if(f<0.01){b=0;d=c=0.707106781}else{b=Math.sqrt(f);c=d/b;d=e/b}else if(h>k)if(h<0.01){b=0.707106781;c=0;d=0.707106781}else{c=Math.sqrt(h);b=d/c;d=i/c}else if(k<0.01){c=b=0.707106781;d=0}else{d=Math.sqrt(k);b=e/d;c=i/d}this.set(b,c,d,a);return this}a=Math.sqrt((b-i)*(b-i)+(e-c)*(e-c)+(g-d)*(g-d));Math.abs(a)<0.001&&(a=1);this.x=(b-i)/a;this.y=(e-c)/a;this.z=(g-d)/a;this.w=Math.acos((f+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,a=b[10]*b[5]-b[6]*b[9],c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],f=-b[10]*b[4]+b[6]*b[8],e=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],i=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*f+b[2]*h;b===0&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,j=this.elements;j[0]=b*a;j[1]=b*c;j[2]=b*d;j[3]=b*f;j[4]=b*e;j[5]=b*g;j[6]=b*h;j[7]=b*i;j[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,f,e,g,h,i,k,j,n,m,q,o,r){this.elements=new Float32Array(16);this.set(a!==void 0?a:1,b||0,c||0,d||0,f||0,e!==void 0?e:1,g||0,h||0,i||0,k||0,j!==void 0?j:1,n||0,m||0,q||0,o||0,r!==void 0?r:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,f,e,g,h,i,k,j,n,m,q,o,r){var p=this.elements;p[0]=a;p[4]=b;p[8]=c;p[12]=d;p[1]=f;p[5]=e;p[9]=g;p[13]=h;p[2]=i;p[6]=k;p[10]=j;p[14]=n;p[3]=m;p[7]=q;p[11]=o;p[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(g.length()===0)g.z=1;f.cross(c,g).normalize();if(f.length()===0){g.x=g.x+1E-4;f.cross(c,g).normalize()}e.cross(g,f);d[0]=f.x;d[4]=e.x;d[8]=g.x;d[1]=f.y;d[5]=e.y;d[9]=g.y;d[2]=f.z;d[6]=e.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,f=this.elements,e=c[0],g=c[4],h=c[8],i=c[12],k=c[1],j=c[5],n=c[9],m=c[13],q=c[2],o=c[6],r=c[10],p=c[14],t=c[3],u=c[7],w=c[11],c=c[15],s=d[0],B=d[4],
v=d[8],x=d[12],E=d[1],z=d[5],M=d[9],D=d[13],I=d[2],J=d[6],P=d[10],K=d[14],L=d[3],C=d[7],F=d[11],d=d[15];f[0]=e*s+g*E+h*I+i*L;f[4]=e*B+g*z+h*J+i*C;f[8]=e*v+g*M+h*P+i*F;f[12]=e*x+g*D+h*K+i*d;f[1]=k*s+j*E+n*I+m*L;f[5]=k*B+j*z+n*J+m*C;f[9]=k*v+j*M+n*P+m*F;f[13]=k*x+j*D+n*K+m*d;f[2]=q*s+o*E+r*I+p*L;f[6]=q*B+o*z+r*J+p*C;f[10]=q*v+o*M+r*P+p*F;f[14]=q*x+o*D+r*K+p*d;f[3]=t*s+u*E+w*I+c*L;f[7]=t*B+u*z+w*J+c*C;f[11]=t*v+u*M+w*P+c*F;f[15]=t*x+u*D+w*K+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]=b[0]*a;b[4]=b[4]*a;b[8]=b[8]*a;b[12]=b[12]*a;b[1]=b[1]*a;b[5]=b[5]*a;b[9]=b[9]*a;b[13]=b[13]*a;b[2]=b[2]*a;b[6]=b[6]*a;b[10]=b[10]*a;b[14]=b[14]*a;b[3]=b[3]*a;b[7]=b[7]*a;b[11]=b[11]*a;b[15]=
b[15]*a;return this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=1/(b[3]*c+b[7]*d+b[11]*f+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*f+b[12])*e;a.y=(b[1]*c+b[5]*d+b[9]*f+b[13])*e;a.z=(b[2]*c+b[6]*d+b[10]*f+b[14])*e;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w;a.x=b[0]*c+b[4]*d+b[8]*f+b[12]*e;a.y=b[1]*c+b[5]*d+b[9]*f+b[13]*e;a.z=b[2]*c+b[6]*d+b[10]*f+b[14]*e;a.w=b[3]*c+b[7]*d+b[11]*f+b[15]*e;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,
c=0,d=a.length;c<d;c=c+3){b.x=a[c];b.y=a[c+1];b.z=a[c+2];this.multiplyVector3(b);a[c]=b.x;a[c+1]=b.y;a[c+2]=b.z}return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z;a.x=c*b[0]+d*b[4]+f*b[8];a.y=c*b[1]+d*b[5]+f*b[9];a.z=c*b[2]+d*b[6]+f*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*
a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],f=a[12],e=a[1],g=a[5],h=a[9],i=a[13],k=a[2],j=a[6],n=a[10],m=a[14],q=a[3],o=a[7],r=a[11],a=a[15];return f*h*j*q-d*i*j*q-f*g*n*q+c*i*n*q+d*g*m*q-c*h*m*q-f*h*k*o+d*i*k*o+f*e*n*o-b*i*n*o-d*e*m*o+b*h*m*o+f*g*k*r-c*i*k*r-f*e*j*r+b*i*j*r+c*e*m*r-b*g*m*r-d*g*k*a+c*h*k*a+d*e*j*a-b*h*j*a-c*e*n*a+b*g*n*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;
b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=
c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],
a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],f=c[4],e=c[8],g=c[12],h=c[1],i=c[5],k=c[9],j=c[13],n=c[2],m=c[6],q=c[10],o=c[14],r=c[3],p=c[7],t=c[11],c=c[15];b[0]=k*o*p-j*q*p+j*m*t-i*o*t-k*m*c+i*q*c;b[4]=g*q*p-e*o*p-g*m*t+f*o*t+e*m*c-f*q*c;b[8]=e*j*p-g*k*p+g*i*t-f*j*t-e*i*c+f*k*c;b[12]=g*k*m-e*j*m-g*i*q+f*j*q+e*i*o-f*k*o;b[1]=j*q*r-k*o*r-j*n*t+h*o*t+k*n*c-h*q*c;b[5]=e*o*r-g*q*r+g*n*t-d*o*t-e*n*c+d*q*c;b[9]=g*k*r-e*j*r-g*h*t+d*j*t+e*h*c-d*k*c;b[13]=e*j*n-g*k*n+g*h*q-d*
j*q-e*h*o+d*k*o;b[2]=i*o*r-j*m*r+j*n*p-h*o*p-i*n*c+h*m*c;b[6]=g*m*r-f*o*r-g*n*p+d*o*p+f*n*c-d*m*c;b[10]=f*j*r-g*i*r+g*h*p-d*j*p-f*h*c+d*i*c;b[14]=g*i*n-f*j*n-g*h*m+d*j*m+f*h*o-d*i*o;b[3]=k*m*r-i*q*r-k*n*p+h*q*p+i*n*t-h*m*t;b[7]=f*q*r-e*m*r+e*n*p-d*q*p-f*n*t+d*m*t;b[11]=e*i*r-f*k*r-e*h*p+d*k*p+f*h*t-d*i*t;b[15]=f*k*n-e*i*n+e*h*m-d*k*m-f*h*q+d*i*q;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,f=a.y,e=a.z,g=Math.cos(d),d=Math.sin(d),
h=Math.cos(f),f=Math.sin(f),i=Math.cos(e),e=Math.sin(e);if(b===void 0||b==="XYZ"){var k=g*i,j=g*e,n=d*i,m=d*e;c[0]=h*i;c[4]=-h*e;c[8]=f;c[1]=j+n*f;c[5]=k-m*f;c[9]=-d*h;c[2]=m-k*f;c[6]=n+j*f;c[10]=g*h}else if(b==="YXZ"){k=h*i;j=h*e;n=f*i;m=f*e;c[0]=k+m*d;c[4]=n*d-j;c[8]=g*f;c[1]=g*e;c[5]=g*i;c[9]=-d;c[2]=j*d-n;c[6]=m+k*d;c[10]=g*h}else if(b==="ZXY"){k=h*i;j=h*e;n=f*i;m=f*e;c[0]=k-m*d;c[4]=-g*e;c[8]=n+j*d;c[1]=j+n*d;c[5]=g*i;c[9]=m-k*d;c[2]=-g*f;c[6]=d;c[10]=g*h}else if(b==="ZYX"){k=g*i;j=g*e;n=d*i;
m=d*e;c[0]=h*i;c[4]=n*f-j;c[8]=k*f+m;c[1]=h*e;c[5]=m*f+k;c[9]=j*f-n;c[2]=-f;c[6]=d*h;c[10]=g*h}else if(b==="YZX"){k=g*h;j=g*f;n=d*h;m=d*f;c[0]=h*i;c[4]=m-k*e;c[8]=n*e+j;c[1]=e;c[5]=g*i;c[9]=-d*i;c[2]=-f*i;c[6]=j*e+n;c[10]=k-m*e}else if(b==="XZY"){k=g*h;j=g*f;n=d*h;m=d*f;c[0]=h*i;c[4]=-e;c[8]=f*i;c[1]=k*e+m;c[5]=g*i;c[9]=j*e-n;c[2]=n*e-j;c[6]=d*i;c[10]=m*e+k}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,f=a.z,e=a.w,g=c+c,h=d+d,i=f+f,a=c*g,k=c*h,c=c*i,j=d*h,d=d*
i,f=f*i,g=e*g,h=e*h,e=e*i;b[0]=1-(j+f);b[4]=k-e;b[8]=c+h;b[1]=k+e;b[5]=1-(a+f);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+j);return this},compose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__m1,e=THREE.Matrix4.__m2;f.identity();f.setRotationFromQuaternion(b);e.makeScale(c.x,c.y,c.z);this.multiply(f,e);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,f=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;f.set(d[0],d[1],d[2]);e.set(d[4],d[5],d[6]);
g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=f.length();c.y=e.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]=d.elements[0]/c.x;d.elements[1]=d.elements[1]/c.x;d.elements[2]=d.elements[2]/c.x;d.elements[4]=d.elements[4]/c.y;d.elements[5]=d.elements[5]/c.y;d.elements[6]=d.elements[6]/c.y;d.elements[8]=d.elements[8]/
c.z;d.elements[9]=d.elements[9]/c.z;d.elements[10]=d.elements[10]/c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),f=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*f;b[5]=a[5]*f;b[6]=a[6]*f;b[8]=a[8]*c;b[9]=a[9]*
c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],f=b[6],e=b[7],g=b[8],h=b[9],i=b[10],k=b[11],j=Math.cos(a),a=Math.sin(a);b[4]=j*c+a*g;b[5]=j*d+a*h;b[6]=j*f+a*i;b[7]=j*e+a*k;b[8]=j*g-a*c;b[9]=j*h-a*d;b[10]=j*i-a*f;b[11]=j*k-a*e;return this},rotateY:function(a){var b=
this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[8],h=b[9],i=b[10],k=b[11],j=Math.cos(a),a=Math.sin(a);b[0]=j*c-a*g;b[1]=j*d-a*h;b[2]=j*f-a*i;b[3]=j*e-a*k;b[8]=j*g+a*c;b[9]=j*h+a*d;b[10]=j*i+a*f;b[11]=j*k+a*e;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],f=b[2],e=b[3],g=b[4],h=b[5],i=b[6],k=b[7],j=Math.cos(a),a=Math.sin(a);b[0]=j*c+a*g;b[1]=j*d+a*h;b[2]=j*f+a*i;b[3]=j*e+a*k;b[4]=j*g-a*c;b[5]=j*h-a*d;b[6]=j*i-a*f;b[7]=j*k-a*e;return this},rotateByAxis:function(a,b){var c=this.elements;
if(a.x===1&&a.y===0&&a.z===0)return this.rotateX(b);if(a.x===0&&a.y===1&&a.z===0)return this.rotateY(b);if(a.x===0&&a.y===0&&a.z===1)return this.rotateZ(b);var d=a.x,f=a.y,e=a.z,g=Math.sqrt(d*d+f*f+e*e),d=d/g,f=f/g,e=e/g,g=d*d,h=f*f,i=e*e,k=Math.cos(b),j=Math.sin(b),n=1-k,m=d*f*n,q=d*e*n,n=f*e*n,d=d*j,o=f*j,j=e*j,e=g+(1-g)*k,g=m+j,f=q-o,m=m-j,h=h+(1-h)*k,j=n+d,q=q+o,n=n-d,i=i+(1-i)*k,k=c[0],d=c[1],o=c[2],r=c[3],p=c[4],t=c[5],u=c[6],w=c[7],s=c[8],B=c[9],v=c[10],x=c[11];c[0]=e*k+g*p+f*s;c[1]=e*d+g*
t+f*B;c[2]=e*o+g*u+f*v;c[3]=e*r+g*w+f*x;c[4]=m*k+h*p+j*s;c[5]=m*d+h*t+j*B;c[6]=m*o+h*u+j*v;c[7]=m*r+h*w+j*x;c[8]=q*k+n*p+i*s;c[9]=q*d+n*t+i*B;c[10]=q*o+n*u+i*v;c[11]=q*r+n*w+i*x;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]=b[0]*c;b[4]=b[4]*d;b[8]=b[8]*a;b[1]=b[1]*c;b[5]=b[5]*d;b[9]=b[9]*a;b[2]=b[2]*c;b[6]=b[6]*d;b[10]=b[10]*a;b[3]=b[3]*c;b[7]=b[7]*d;b[11]=b[11]*a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+
a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);
return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),f=1-c,e=a.x,g=a.y,h=a.z,i=f*e,k=f*g;this.set(i*e+c,i*g-d*h,i*h+d*g,0,i*g+d*h,k*g+c,k*h-d*e,0,i*h-d*g,k*h+d*e,f*h*h+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,f,e){var g=this.elements;g[0]=2*f/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*f/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(e+f)/(e-f);g[14]=-2*e*f/(e-f);g[3]=
0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(a*Math.PI/360),f=-a;return this.makeFrustum(f*b,a*b,f,a,c,d)},makeOrthographic:function(a,b,c,d,f,e){var g=this.elements,h=b-a,i=c-d,k=e-f;g[0]=2/h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/i;g[9]=0;g[13]=-((c+d)/i);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((e+f)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],
a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){a[b]===void 0&&(a[b]=[]);a[b].indexOf(c)===-1&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);d!==-1&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],f=c[2],e=c[3],g=c[4],h=c[5],i=c[6],k=c[7],j=c[8],n=c[9],m=c[10],q=c[11],o=c[12],r=c[13],p=c[14],c=c[15];b[0].set(e-a,k-g,q-j,c-o);b[1].set(e+a,k+g,q+j,c+o);b[2].set(e+d,k+h,q+n,c+r);b[3].set(e-d,k-h,q-n,c-r);b[4].set(e-f,k-i,q-m,c-p);b[5].set(e+f,k+i,q+m,c+p);for(d=0;d<6;d++){a=b[d];a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))}};
THREE.Frustum.prototype.contains=function(a){for(var b=0,c=this.planes,b=a.matrixWorld,d=b.elements,a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),f=0;f<6;f++){b=c[f].x*d[12]+c[f].y*d[13]+c[f].z*d[14]+c[f].w;if(b<=a)return false}return true};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,f){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=f||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,f=new a.Vector3,e=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,i=function(a,b){return a.distance-b.distance},k=new a.Vector3,j=new a.Vector3,n=new a.Vector3,m=function(a,b,c){k.sub(c,a);var d=k.dot(b),a=j.add(a,n.copy(b).multiplyScalar(d));return c.distanceTo(a)},q=function(a,b,c,d){k.sub(d,b);j.sub(c,b);n.sub(a,
b);var a=k.dot(k),b=k.dot(j),c=k.dot(n),f=j.dot(j),d=j.dot(n),e=1/(a*f-b*b),f=(f*c-b*d)*e,a=(a*d-b*c)*e;return f>=0&&a>=0&&f+a<1},o=function(i,j,k){var n,o;if(i instanceof a.Particle){n=m(j.origin,j.direction,i.matrixWorld.getPosition());if(n>i.scale.x)return k;o={distance:n,point:i.position,face:null,object:i};k.push(o)}else if(i instanceof a.Mesh){var r=i.geometry.boundingSphere.radius*i.matrixWorld.getMaxScaleOnAxis();n=m(j.origin,j.direction,i.matrixWorld.getPosition());if(n>r)return k;var v,
x,E=i.geometry,z=E.vertices,M,D,I;M=i.geometry.materials;D=i.material instanceof a.MeshFaceMaterial;var J,P=j.precision;i.matrixRotationWorld.extractRotation(i.matrixWorld);b.copy(j.origin);h.getInverse(i.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(j.direction);h.rotateAxis(d).normalize();r=0;for(v=E.faces.length;r<v;r++){o=E.faces[r];n=D===true?M[o.materialIndex]:i.material;if(n!==void 0){I=n.side;f.sub(o.centroid,c);e=o.normal;n=d.dot(e);if(!(Math.abs(n)<P)){x=e.dot(f)/n;if(!(x<0)&&(I===
a.DoubleSide||(I===a.FrontSide?n<0:n>0))){g.add(c,d.multiplyScalar(x));if(o instanceof a.Face3){n=z[o.a];x=z[o.b];I=z[o.c];if(q(g,n,x,I)){x=i.matrixWorld.multiplyVector3(g.clone());n=b.distanceTo(x);if(!(n<j.near||n>j.far)){o={distance:n,point:x,face:o,faceIndex:r,object:i};k.push(o)}}}else if(o instanceof a.Face4){n=z[o.a];x=z[o.b];I=z[o.c];J=z[o.d];if(q(g,n,x,J)||q(g,x,I,J)){x=i.matrixWorld.multiplyVector3(g.clone());n=b.distanceTo(x);if(!(n<j.near||n>j.far)){o={distance:n,point:x,face:o,faceIndex:r,
object:i};k.push(o)}}}}}}}}},r=function(a,b,c){for(var a=a.getDescendants(),d=0,f=a.length;d<f;d++)o(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];b===true&&r(a,this,c);o(a,this,c);c.sort(i);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,f=a.length;d<f;d++){o(a[d],this,c);b===true&&r(a[d],this,c)}c.sort(i);return c}})(THREE);
THREE.Rectangle=function(){function a(){e=d-b;g=f-c}var b=0,c=0,d=0,f=0,e=0,g=0,h=true;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return e};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return f};this.set=function(e,g,j,n){h=false;b=e;c=g;d=j;f=n;a()};this.addPoint=function(e,g){if(h===true){h=false;b=e;c=g;d=e;f=g}else{b=b<e?b:e;c=c<g?c:
g;d=d>e?d:e;f=f>g?f:g}a()};this.add3Points=function(e,g,j,n,m,q){if(h===true){h=false;b=e<j?e<m?e:m:j<m?j:m;c=g<n?g<q?g:q:n<q?n:q;d=e>j?e>m?e:m:j>m?j:m;f=g>n?g>q?g:q:n>q?n:q}else{b=e<j?e<m?e<b?e:b:m<b?m:b:j<m?j<b?j:b:m<b?m:b;c=g<n?g<q?g<c?g:c:q<c?q:c:n<q?n<c?n:c:q<c?q:c;d=e>j?e>m?e>d?e:d:m>d?m:d:j>m?j>d?j:d:m>d?m:d;f=g>n?g>q?g>f?g:f:q>f?q:f:n>q?n>f?n:f:q>f?q:f}a()};this.addRectangle=function(e){if(h===true){h=false;b=e.getLeft();c=e.getTop();d=e.getRight();f=e.getBottom()}else{b=b<e.getLeft()?b:e.getLeft();
c=c<e.getTop()?c:e.getTop();d=d>e.getRight()?d:e.getRight();f=f>e.getBottom()?f:e.getBottom()}a()};this.inflate=function(e){b=b-e;c=c-e;d=d+e;f=f+e;a()};this.minSelf=function(e){b=b>e.getLeft()?b:e.getLeft();c=c>e.getTop()?c:e.getTop();d=d<e.getRight()?d:e.getRight();f=f<e.getBottom()?f:e.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||f<a.getTop()||c>a.getBottom()?false:true};this.empty=function(){h=true;f=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,f){return d+(a-b)*(f-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return a<0?-1:a>0?1:0}};
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=true;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=true;this.quaternion=
new THREE.Quaternion;this.useQuaternion=false;this.boundRadius=0;this.boundRadiusScale=1;this.visible=true;this.receiveShadow=this.castShadow=false;this.frustumCulled=true;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,f;c=0;for(d=this.children.length;c<d;c++){f=this.children[c];
if(f.name===a)return f;if(b){f=f.getChildByName(a,b);if(f!==void 0)return f}}},getDescendants:function(a){a===void 0&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion===false?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(this.scale.x!==1||this.scale.y!==
1||this.scale.z!==1){this.matrix.scale(this.scale);this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z))}this.matrixWorldNeedsUpdate=true},updateMatrixWorld:function(a){this.matrixAutoUpdate===true&&this.updateMatrix();if(this.matrixWorldNeedsUpdate===true||a===true){this.parent===void 0?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix);this.matrixWorldNeedsUpdate=false;a=true}for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},
clone:function(){}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3DCount=0;
THREE.Projector=function(){function a(){if(e===h){var a=new THREE.RenderableObject;g.push(a);h++;e++;return a}return g[e++]}function b(){if(k===n){var a=new THREE.RenderableVertex;j.push(a);n++;k++;return a}return j[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,f=a.z+a.w,e=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(f>=0&&e>=0&&g>=0&&h>=0)return true;if(f<0&&e<0||g<0&&h<0)return false;f<0?c=Math.max(c,f/(f-e)):e<0&&(d=Math.min(d,f/(f-e)));g<0?c=Math.max(c,g/(g-h)):h<0&&(d=Math.min(d,g/(g-h)));
if(d<c)return false;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return true}var f,e,g=[],h=0,i,k,j=[],n=0,m,q,o=[],r=0,p,t=[],u=0,w,s,B=[],v=0,x,E,z=[],M=0,D={objects:[],sprites:[],lights:[],elements:[]},I=new THREE.Vector3,J=new THREE.Vector4,P=new THREE.Matrix4,K=new THREE.Matrix4,L=new THREE.Frustum,C=new THREE.Vector4,F=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);P.multiply(b.projectionMatrix,b.matrixWorldInverse);P.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);P.multiply(b.matrixWorld,b.projectionMatrixInverse);P.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};this.projectScene=function(g,h,n,N){var ba=h.near,Q=h.far,qa=false,xa,da,Y,S,R,ia,na,sa,oa,Ga,va,Qa,ja,Xa,Ba,Ha;E=s=p=q=0;D.elements.length=0;g.updateMatrixWorld();h.parent===
void 0&&h.updateMatrixWorld();h.matrixWorldInverse.getInverse(h.matrixWorld);P.multiply(h.projectionMatrix,h.matrixWorldInverse);L.setFromMatrix(P);e=0;D.objects.length=0;D.sprites.length=0;D.lights.length=0;var kb=function(b){for(var c=0,d=b.children.length;c<d;c++){var e=b.children[c];if(e.visible!==false){if(e instanceof THREE.Light)D.lights.push(e);else if(e instanceof THREE.Mesh||e instanceof THREE.Line){if(e.frustumCulled===false||L.contains(e)===true){f=a();f.object=e;if(e.renderDepth!==null)f.z=
e.renderDepth;else{I.copy(e.matrixWorld.getPosition());P.multiplyVector3(I);f.z=I.z}D.objects.push(f)}}else if(e instanceof THREE.Sprite||e instanceof THREE.Particle){f=a();f.object=e;if(e.renderDepth!==null)f.z=e.renderDepth;else{I.copy(e.matrixWorld.getPosition());P.multiplyVector3(I);f.z=I.z}D.sprites.push(f)}else{f=a();f.object=e;if(e.renderDepth!==null)f.z=e.renderDepth;else{I.copy(e.matrixWorld.getPosition());P.multiplyVector3(I);f.z=I.z}D.objects.push(f)}kb(e)}}};kb(g);n===true&&D.objects.sort(c);
g=0;for(n=D.objects.length;g<n;g++){sa=D.objects[g].object;oa=sa.matrixWorld;k=0;if(sa instanceof THREE.Mesh){Ga=sa.geometry;va=sa.geometry.materials;Y=Ga.vertices;Qa=Ga.faces;Xa=Ga.faceVertexUvs;Ga=sa.matrixRotationWorld.extractRotation(oa);Ha=sa.material instanceof THREE.MeshFaceMaterial;xa=0;for(da=Y.length;xa<da;xa++){i=b();i.positionWorld.copy(Y[xa]);oa.multiplyVector3(i.positionWorld);i.positionScreen.copy(i.positionWorld);P.multiplyVector4(i.positionScreen);i.positionScreen.x=i.positionScreen.x/
i.positionScreen.w;i.positionScreen.y=i.positionScreen.y/i.positionScreen.w;i.visible=i.positionScreen.z>ba&&i.positionScreen.z<Q}Y=0;for(xa=Qa.length;Y<xa;Y++){na=Qa[Y];da=Ha===true?va[na.materialIndex]:sa.material;if(da!==void 0){ia=da.side;if(na instanceof THREE.Face3){S=j[na.a];R=j[na.b];ja=j[na.c];if(S.visible===true&&R.visible===true&&ja.visible===true){qa=(ja.positionScreen.x-S.positionScreen.x)*(R.positionScreen.y-S.positionScreen.y)-(ja.positionScreen.y-S.positionScreen.y)*(R.positionScreen.x-
S.positionScreen.x)<0;if(ia===THREE.DoubleSide||qa===(ia===THREE.FrontSide)){if(q===r){Ba=new THREE.RenderableFace3;o.push(Ba);r++;q++;m=Ba}else m=o[q++];m.v1.copy(S);m.v2.copy(R);m.v3.copy(ja)}else continue}else continue}else if(na instanceof THREE.Face4){S=j[na.a];R=j[na.b];ja=j[na.c];Ba=j[na.d];if(S.visible===true&&R.visible===true&&ja.visible===true&&Ba.visible===true){qa=(Ba.positionScreen.x-S.positionScreen.x)*(R.positionScreen.y-S.positionScreen.y)-(Ba.positionScreen.y-S.positionScreen.y)*
(R.positionScreen.x-S.positionScreen.x)<0||(R.positionScreen.x-ja.positionScreen.x)*(Ba.positionScreen.y-ja.positionScreen.y)-(R.positionScreen.y-ja.positionScreen.y)*(Ba.positionScreen.x-ja.positionScreen.x)<0;if(ia===THREE.DoubleSide||qa===(ia===THREE.FrontSide)){if(p===u){var fb=new THREE.RenderableFace4;t.push(fb);u++;p++;m=fb}else m=t[p++];m.v1.copy(S);m.v2.copy(R);m.v3.copy(ja);m.v4.copy(Ba)}else continue}else continue}m.normalWorld.copy(na.normal);qa===false&&(ia===THREE.BackSide||ia===THREE.DoubleSide)&&
m.normalWorld.negate();Ga.multiplyVector3(m.normalWorld);m.centroidWorld.copy(na.centroid);oa.multiplyVector3(m.centroidWorld);m.centroidScreen.copy(m.centroidWorld);P.multiplyVector3(m.centroidScreen);na=na.vertexNormals;S=0;for(R=na.length;S<R;S++){ja=m.vertexNormalsWorld[S];ja.copy(na[S]);qa===false&&(ia===THREE.BackSide||ia===THREE.DoubleSide)&&ja.negate();Ga.multiplyVector3(ja)}m.vertexNormalsLength=na.length;S=0;for(R=Xa.length;S<R;S++){ja=Xa[S][Y];if(ja!==void 0){ia=0;for(na=ja.length;ia<na;ia++)m.uvs[S][ia]=
ja[ia]}}m.material=da;m.z=m.centroidScreen.z;D.elements.push(m)}}}else if(sa instanceof THREE.Line){K.multiply(P,oa);Y=sa.geometry.vertices;S=b();S.positionScreen.copy(Y[0]);K.multiplyVector4(S.positionScreen);oa=sa.type===THREE.LinePieces?2:1;xa=1;for(da=Y.length;xa<da;xa++){S=b();S.positionScreen.copy(Y[xa]);K.multiplyVector4(S.positionScreen);if(!((xa+1)%oa>0)){R=j[k-2];C.copy(S.positionScreen);F.copy(R.positionScreen);if(d(C,F)===true){C.multiplyScalar(1/C.w);F.multiplyScalar(1/F.w);if(s===v){va=
new THREE.RenderableLine;B.push(va);v++;s++;w=va}else w=B[s++];w.v1.positionScreen.copy(C);w.v2.positionScreen.copy(F);w.z=Math.max(C.z,F.z);w.material=sa.material;D.elements.push(w)}}}}}g=0;for(n=D.sprites.length;g<n;g++){sa=D.sprites[g].object;oa=sa.matrixWorld;if(sa instanceof THREE.Particle){J.set(oa.elements[12],oa.elements[13],oa.elements[14],1);P.multiplyVector4(J);J.z=J.z/J.w;if(J.z>0&&J.z<1){if(E===M){ba=new THREE.RenderableParticle;z.push(ba);M++;E++;x=ba}else x=z[E++];x.object=sa;x.x=J.x/
J.w;x.y=J.y/J.w;x.z=J.z;x.rotation=sa.rotation.z;x.scale.x=sa.scale.x*Math.abs(x.x-(J.x+h.projectionMatrix.elements[0])/(J.w+h.projectionMatrix.elements[12]));x.scale.y=sa.scale.y*Math.abs(x.y-(J.y+h.projectionMatrix.elements[5])/(J.w+h.projectionMatrix.elements[13]));x.material=sa.material;D.elements.push(x)}}}N===true&&D.elements.sort(c);return D}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),f=Math.cos(a.z/2),e=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);if(b===void 0||b==="XYZ"){this.x=e*d*f+c*g*h;this.y=c*g*f-e*d*h;this.z=c*d*h+e*g*f;this.w=c*d*f-e*g*h}else if(b==="YXZ"){this.x=e*d*f+c*g*h;this.y=c*g*f-e*d*h;this.z=
c*d*h-e*g*f;this.w=c*d*f+e*g*h}else if(b==="ZXY"){this.x=e*d*f-c*g*h;this.y=c*g*f+e*d*h;this.z=c*d*h+e*g*f;this.w=c*d*f-e*g*h}else if(b==="ZYX"){this.x=e*d*f-c*g*h;this.y=c*g*f+e*d*h;this.z=c*d*h-e*g*f;this.w=c*d*f+e*g*h}else if(b==="YZX"){this.x=e*d*f+c*g*h;this.y=c*g*f+e*d*h;this.z=c*d*h-e*g*f;this.w=c*d*f-e*g*h}else if(b==="XZY"){this.x=e*d*f-c*g*h;this.y=c*g*f-e*d*h;this.z=c*d*h+e*g*f;this.w=c*d*f+e*g*h}return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*
d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],f=b[1],e=b[5],g=b[9],h=b[2],i=b[6],b=b[10],k=c+e+b;if(k>0){c=0.5/Math.sqrt(k+1);this.w=0.25/c;this.x=(i-g)*c;this.y=(d-h)*c;this.z=(f-a)*c}else if(c>e&&c>b){c=2*Math.sqrt(1+c-e-b);this.w=(i-g)/c;this.x=0.25*c;this.y=(a+f)/c;this.z=(d+h)/c}else if(e>b){c=2*Math.sqrt(1+e-c-b);this.w=(d-h)/c;this.x=(a+f)/c;this.y=0.25*c;this.z=(g+i)/c}else{c=2*Math.sqrt(1+b-c-e);this.w=(f-a)/c;this.x=
(d+h)/c;this.y=(g+i)/c;this.z=0.25*c}return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x=this.x*-1;this.y=this.y*-1;this.z=this.z*-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);if(a===0)this.w=this.z=this.y=this.x=0;else{a=1/a;this.x=this.x*a;this.y=
this.y*a;this.z=this.z*a;this.w=this.w*a}return this},multiply:function(a,b){var c=a.x,d=a.y,f=a.z,e=a.w,g=b.x,h=b.y,i=b.z,k=b.w;this.x=c*k+d*i-f*h+e*g;this.y=-c*i+d*k+f*g+e*h;this.z=c*h-d*g+f*k+e*i;this.w=-c*g-d*h-f*i+e*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,f=this.w,e=a.x,g=a.y,h=a.z,a=a.w;this.x=b*a+f*e+c*h-d*g;this.y=c*a+f*g+d*e-b*h;this.z=d*a+f*h+b*g-c*e;this.w=f*a-b*e-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,f=a.z,e=this.x,g=
this.y,h=this.z,i=this.w,k=i*c+g*f-h*d,j=i*d+h*c-e*f,n=i*f+e*d-g*c,c=-e*c-g*d-h*f;b.x=k*i+c*-e+j*-h-n*-g;b.y=j*i+c*-g+n*-e-k*-h;b.z=n*i+c*-h+k*-g-j*-e;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,f=this.z,e=this.w,g=e*a.w+c*a.x+d*a.y+f*a.z;if(g<0){this.w=-a.w;this.x=-a.x;this.y=-a.y;this.z=-a.z;g=-g}else this.copy(a);if(g>=1){this.w=e;this.x=c;this.y=d;this.z=f;return this}var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<0.001){this.w=0.5*(e+this.w);this.x=0.5*(c+this.x);this.y=0.5*
(d+this.y);this.z=0.5*(f+this.z);return this}g=Math.sin((1-b)*h)/i;h=Math.sin(b*h)/i;this.w=e*g+this.w*h;this.x=c*g+this.x*h;this.y=d*g+this.y*h;this.z=f*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var f=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;if(f<0){c.w=-b.w;c.x=-b.x;c.y=-b.y;c.z=-b.z;f=-f}else c.copy(b);if(Math.abs(f)>=1){c.w=a.w;c.x=a.x;c.y=a.y;c.z=a.z;return c}var b=Math.acos(f),e=Math.sqrt(1-f*f);if(Math.abs(e)<0.001){c.w=0.5*(a.w+c.w);c.x=0.5*(a.x+c.x);c.y=0.5*(a.y+c.y);c.z=0.5*(a.z+c.z);return c}f=Math.sin((1-d)*b)/e;d=Math.sin(d*b)/e;c.w=a.w*f+c.w*d;c.x=a.x*f+c.x*d;c.y=a.y*f+c.y*d;c.z=a.z*f+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,f,e){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=e;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,f,e,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u=this.u+(a.u-this.u)*b;this.v=this.v+(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=false;this.dynamic=true};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var f=this.faces[c];b.multiplyVector3(f.normal);for(var e=0,g=f.vertexNormals.length;e<g;e++)b.multiplyVector3(f.vertexNormals[e]);a.multiplyVector3(f.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];c.centroid.set(0,
0,0);if(c instanceof THREE.Face3){c.centroid.addSelf(this.vertices[c.a]);c.centroid.addSelf(this.vertices[c.b]);c.centroid.addSelf(this.vertices[c.c]);c.centroid.divideScalar(3)}else if(c instanceof THREE.Face4){c.centroid.addSelf(this.vertices[c.a]);c.centroid.addSelf(this.vertices[c.b]);c.centroid.addSelf(this.vertices[c.c]);c.centroid.addSelf(this.vertices[c.d]);c.centroid.divideScalar(4)}}},computeFaceNormals:function(){var a,b,c,d,f,e,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++){c=this.faces[a];d=this.vertices[c.a];f=this.vertices[c.b];e=this.vertices[c.c];g.sub(e,f);h.sub(d,f);g.crossSelf(h);g.isZero()||g.normalize();c.normal.copy(g)}},computeVertexNormals:function(){var a,b,c,d;if(this.__tmpVertices===void 0){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];
else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3){d[c.a].addSelf(c.normal);d[c.b].addSelf(c.normal);d[c.c].addSelf(c.normal)}else if(c instanceof THREE.Face4){d[c.a].addSelf(c.normal);d[c.b].addSelf(c.normal);d[c.c].addSelf(c.normal);d[c.d].addSelf(c.normal)}}a=0;
for(b=this.vertices.length;a<b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++){c=this.faces[a];if(c instanceof THREE.Face3){c.vertexNormals[0].copy(d[c.a]);c.vertexNormals[1].copy(d[c.b]);c.vertexNormals[2].copy(d[c.c])}else if(c instanceof THREE.Face4){c.vertexNormals[0].copy(d[c.a]);c.vertexNormals[1].copy(d[c.b]);c.vertexNormals[2].copy(d[c.c]);c.vertexNormals[3].copy(d[c.d])}}},computeMorphNormals:function(){var a,b,c,d,f;c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];f.__originalFaceNormal?
f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone();if(!f.__originalVertexNormals)f.__originalVertexNormals=[];a=0;for(b=f.vertexNormals.length;a<b;a++)f.__originalVertexNormals[a]?f.__originalVertexNormals[a].copy(f.vertexNormals[a]):f.__originalVertexNormals[a]=f.vertexNormals[a].clone()}var e=new THREE.Geometry;e.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=
[];var g=this.morphNormals[a].faceNormals,h=this.morphNormals[a].vertexNormals,i,k;c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];i=new THREE.Vector3;k=f instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3};g.push(i);h.push(k)}}g=this.morphNormals[a];e.vertices=this.morphTargets[a].vertices;e.computeFaceNormals();e.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];
i=g.faceNormals[c];k=g.vertexNormals[c];i.copy(f.normal);if(f instanceof THREE.Face3){k.a.copy(f.vertexNormals[0]);k.b.copy(f.vertexNormals[1]);k.c.copy(f.vertexNormals[2])}else{k.a.copy(f.vertexNormals[0]);k.b.copy(f.vertexNormals[1]);k.c.copy(f.vertexNormals[2]);k.d.copy(f.vertexNormals[3])}}}c=0;for(d=this.faces.length;c<d;c++){f=this.faces[c];f.normal=f.__originalFaceNormal;f.vertexNormals=f.__originalVertexNormals}},computeTangents:function(){function a(a,b,c,d,f,e,E){h=a.vertices[b];i=a.vertices[c];
k=a.vertices[d];j=g[f];n=g[e];m=g[E];q=i.x-h.x;o=k.x-h.x;r=i.y-h.y;p=k.y-h.y;t=i.z-h.z;u=k.z-h.z;w=n.u-j.u;s=m.u-j.u;B=n.v-j.v;v=m.v-j.v;x=1/(w*v-s*B);D.set((v*q-B*o)*x,(v*r-B*p)*x,(v*t-B*u)*x);I.set((w*o-s*q)*x,(w*p-s*r)*x,(w*u-s*t)*x);z[b].addSelf(D);z[c].addSelf(D);z[d].addSelf(D);M[b].addSelf(I);M[c].addSelf(I);M[d].addSelf(I)}var b,c,d,f,e,g,h,i,k,j,n,m,q,o,r,p,t,u,w,s,B,v,x,E,z=[],M=[],D=new THREE.Vector3,I=new THREE.Vector3,J=new THREE.Vector3,P=new THREE.Vector3,K=new THREE.Vector3;b=0;for(c=
this.vertices.length;b<c;b++){z[b]=new THREE.Vector3;M[b]=new THREE.Vector3}b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];g=this.faceVertexUvs[0][b];if(e instanceof THREE.Face3)a(this,e.a,e.b,e.c,0,1,2);else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.d,0,1,3);a(this,e.b,e.c,e.d,1,2,3)}}var L=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){e=this.faces[b];for(d=0;d<e.vertexNormals.length;d++){K.copy(e.vertexNormals[d]);f=e[L[d]];E=z[f];J.copy(E);J.subSelf(K.multiplyScalar(K.dot(E))).normalize();
P.cross(e.vertexNormals[d],E);f=P.dot(M[f]);f=f<0?-1:1;e.vertexTangents[d]=new THREE.Vector4(J.x,J.y,J.z,f)}}this.hasTangents=true},computeBoundingBox:function(){if(!this.boundingBox)this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3};if(this.vertices.length>0){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,f=this.vertices.length;d<f;d++){a=this.vertices[d];if(a.x<b.x)b.x=a.x;else if(a.x>c.x)c.x=
a.x;if(a.y<b.y)b.y=a.y;else if(a.y>c.y)c.y=a.y;if(a.z<b.z)b.z=a.z;else if(a.z>c.z)c.z=a.z}}else{this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){var a=0;if(this.boundingSphere===null)this.boundingSphere={radius:0};for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,f=Math.pow(10,4),e,g,h,i;e=0;for(g=this.vertices.length;e<g;e++){d=
this.vertices[e];d=[Math.round(d.x*f),Math.round(d.y*f),Math.round(d.z*f)].join("_");if(a[d]===void 0){a[d]=e;b.push(this.vertices[e]);c[e]=b.length-1}else c[e]=c[a[d]]}e=0;for(g=this.faces.length;e<g;e++){a=this.faces[e];if(a instanceof THREE.Face3){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c]}else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(f=3;f>0;f--)if(d.indexOf(a["abcd"[f]])!==f){d.splice(f,1);this.faces[e]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,
a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(i=this.faceVertexUvs[d][e])&&i.splice(f,1);this.faces[e].vertexColors=a.vertexColors;break}}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){}};THREE.GeometryCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.attributes={};this.dynamic=false;this.boundingSphere=this.boundingBox=null;this.hasTangents=false;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;if(this.attributes.position)b=this.attributes.position.array;if(this.attributes.normal)c=this.attributes.normal.array;if(b!==void 0){a.multiplyVector3Array(b);this.verticesNeedUpdate=true}if(c!==void 0){b=new THREE.Matrix4;b.extractRotation(a);b.multiplyVector3Array(c);this.normalsNeedUpdate=true}},computeBoundingBox:function(){if(!this.boundingBox)this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,
Infinity),max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,f,e=0,g=a.length;e<g;e=e+3){c=a[e];d=a[e+1];f=a[e+2];if(c<b.min.x)b.min.x=c;else if(c>b.max.x)b.max.x=c;if(d<b.min.y)b.min.y=d;else if(d>b.max.y)b.max.y=d;if(f<b.min.z)b.min.z=f;else if(f>b.max.z)b.max.z=f}if(a===void 0||a.length===0){this.boundingBox.min.set(0,0,0);this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){if(!this.boundingSphere)this.boundingSphere=
{radius:0};var a=this.attributes.position.array;if(a){for(var b,c=0,d,f,e=0,g=a.length;e<g;e=e+3){b=a[e];d=a[e+1];f=a[e+2];b=b*b+d*d+f*f;b>c&&(c=b)}this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(this.attributes.normal===void 0)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var f=this.offsets,e=this.attributes.index.array,g=this.attributes.position.array,h=this.attributes.normal.array,i,k,j,n,m,q,o=new THREE.Vector3,r=new THREE.Vector3,p=new THREE.Vector3,t=new THREE.Vector3,u=new THREE.Vector3;c=0;for(d=f.length;c<d;++c){b=f[c].start;i=f[c].count;var w=f[c].index;a=b;for(b=b+i;a<b;a=a+3){i=w+e[a];k=w+e[a+1];j=w+e[a+2];n=g[i*3];m=g[i*3+1];q=g[i*3+2];o.set(n,m,q);n=g[k*3];m=g[k*3+1];q=g[k*3+2];r.set(n,m,q);n=g[j*3];m=g[j*3+1];q=g[j*3+2];p.set(n,m,q);t.sub(p,r);u.sub(o,
r);t.crossSelf(u);h[i*3]=h[i*3]+t.x;h[i*3+1]=h[i*3+1]+t.y;h[i*3+2]=h[i*3+2]+t.z;h[k*3]=h[k*3]+t.x;h[k*3+1]=h[k*3+1]+t.y;h[k*3+2]=h[k*3+2]+t.z;h[j*3]=h[j*3]+t.x;h[j*3+1]=h[j*3+1]+t.y;h[j*3+2]=h[j*3+2]+t.z}}a=0;for(b=h.length;a<b;a=a+3){n=h[a];m=h[a+1];q=h[a+2];c=1/Math.sqrt(n*n+m*m+q*q);h[a]=h[a]*c;h[a+1]=h[a+1]*c;h[a+2]=h[a+2]*c}this.normalsNeedUpdate=true}},computeTangents:function(){function a(a){ea.x=d[a*3];ea.y=d[a*3+1];ea.z=d[a*3+2];ha.copy(ea);ba=i[a];F.copy(ba);F.subSelf(ea.multiplyScalar(ea.dot(ba))).normalize();
O.cross(ha,ba);Q=O.dot(k[a]);N=Q<0?-1:1;h[a*4]=F.x;h[a*4+1]=F.y;h[a*4+2]=F.z;h[a*4+3]=N}if(this.attributes.index===void 0||this.attributes.position===void 0||this.attributes.normal===void 0||this.attributes.uv===void 0)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,f=this.attributes.uv.array,e=c.length/3;if(this.attributes.tangent===
void 0){var g=4*e;this.attributes.tangent={itemSize:4,array:new Float32Array(g),numItems:g}}for(var h=this.attributes.tangent.array,i=[],k=[],g=0;g<e;g++){i[g]=new THREE.Vector3;k[g]=new THREE.Vector3}var j,n,m,q,o,r,p,t,u,w,s,B,v,x,E,e=new THREE.Vector3,g=new THREE.Vector3,z,M,D,I,J,P,K,L=this.offsets;D=0;for(I=L.length;D<I;++D){M=L[D].start;J=L[D].count;var C=L[D].index;z=M;for(M=M+J;z<M;z=z+3){J=C+b[z];P=C+b[z+1];K=C+b[z+2];j=c[J*3];n=c[J*3+1];m=c[J*3+2];q=c[P*3];o=c[P*3+1];r=c[P*3+2];p=c[K*3];
t=c[K*3+1];u=c[K*3+2];w=f[J*2];s=f[J*2+1];B=f[P*2];v=f[P*2+1];x=f[K*2];E=f[K*2+1];q=q-j;j=p-j;o=o-n;n=t-n;r=r-m;m=u-m;B=B-w;w=x-w;v=v-s;s=E-s;E=1/(B*s-w*v);e.set((s*q-v*j)*E,(s*o-v*n)*E,(s*r-v*m)*E);g.set((B*j-w*q)*E,(B*n-w*o)*E,(B*m-w*r)*E);i[J].addSelf(e);i[P].addSelf(e);i[K].addSelf(e);k[J].addSelf(g);k[P].addSelf(g);k[K].addSelf(g)}}var F=new THREE.Vector3,O=new THREE.Vector3,ea=new THREE.Vector3,ha=new THREE.Vector3,N,ba,Q;D=0;for(I=L.length;D<I;++D){M=L[D].start;J=L[D].count;C=L[D].index;z=
M;for(M=M+J;z<M;z=z+3){J=C+b[z];P=C+b[z+1];K=C+b[z+2];a(J);a(P);a(K)}}this.tangentsNeedUpdate=this.hasTangents=true}}};
THREE.Spline=function(a){function b(a,b,c,d,f,e,g){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b}this.points=a;var c=[],d={x:0,y:0,z:0},f,e,g,h,i,k,j,n,m;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){f=(this.points.length-1)*a;e=Math.floor(f);g=f-e;c[0]=e===0?e:e-1;c[1]=e;c[2]=e>this.points.length-2?this.points.length-1:e+1;c[3]=e>this.points.length-3?this.points.length-1:
e+2;k=this.points[c[0]];j=this.points[c[1]];n=this.points[c[2]];m=this.points[c[3]];h=g*g;i=g*h;d.x=b(k.x,j.x,n.x,m.x,g,h,i);d.y=b(k.y,j.y,n.y,m.y,g,h,i);d.z=b(k.z,j.z,n.z,m.z,g,h,i);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++){b=this.points[a];d[a]=[b.x,b.y,b.z]}return d};this.getLength=function(a){var b,c,d,f=b=b=0,e=new THREE.Vector3,g=new THREE.Vector3,h=[],i=0;h[0]=0;a||(a=100);c=this.points.length*a;e.copy(this.points[0]);for(a=1;a<c;a++){b=
a/c;d=this.getPoint(b);g.copy(d);i=i+g.distanceTo(e);e.copy(d);b=(this.points.length-1)*b;b=Math.floor(b);if(b!=f){h[b]=i;f=b}}h[h.length]=i;return{chunks:h,total:i}};this.reparametrizeByArcLength=function(a){var b,c,d,f,e,g,h=[],i=new THREE.Vector3,j=this.getLength();h.push(i.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1];g=Math.ceil(a*c/j.total);f=(b-1)/(this.points.length-1);e=b/(this.points.length-1);for(c=1;c<g-1;c++){d=f+c*(1/g)*(e-f);d=this.getPoint(d);
h.push(i.copy(d).clone())}h.push(i.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate===true&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,f,e){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=f!==void 0?f:0.1;this.far=e!==void 0?e:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=d!==void 0?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){b===void 0&&(b=24);this.fov=2*Math.atan(b/(a*2))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,f,e){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=f;this.height=e;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.onlyShadow=this.castShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;
this.shadowCascade=false;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=c!==void 0?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,f){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.angle=d!==void 0?d:Math.PI/2;this.exponent=f!==void 0?f:10;this.onlyShadow=this.castShadow=false;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=false;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=
this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(a.length<1?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++){b=a.materials[c];if(b instanceof THREE.ShaderMaterial)return true}return false},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function f(a,f,e,h,i,k,p){var t=e.toLowerCase().endsWith(".dds"),u=b+"/"+e;if(t){var w=THREE.ImageUtils.loadCompressedTexture(u);a[f]=w}else{w=document.createElement("canvas");a[f]=new THREE.Texture(w)}a[f].sourceFile=e;if(h){a[f].repeat.set(h[0],h[1]);if(h[0]!==1)a[f].wrapS=THREE.RepeatWrapping;if(h[1]!==1)a[f].wrapT=THREE.RepeatWrapping}i&&a[f].offset.set(i[0],i[1]);if(k){e={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping};if(e[k[0]]!==void 0)a[f].wrapS=e[k[0]];if(e[k[1]]!==void 0)a[f].wrapT=e[k[1]]}if(p)a[f].anisotropy=p;if(!t){var s=a[f],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);s.image.width=a;s.image.height=b;s.image.getContext("2d").drawImage(this,0,0,a,b)}else s.image=this;s.needsUpdate=true};a.crossOrigin=g.crossOrigin;a.src=u}}function e(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var g=this,h="MeshLambertMaterial",
i={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(a.shading){var k=a.shading.toLowerCase();k==="phong"?h="MeshPhongMaterial":k==="basic"&&(h="MeshBasicMaterial")}if(a.blending!==void 0&&THREE[a.blending]!==void 0)i.blending=THREE[a.blending];if(a.transparent!==void 0||a.opacity<1)i.transparent=a.transparent;if(a.depthTest!==void 0)i.depthTest=a.depthTest;if(a.depthWrite!==void 0)i.depthWrite=a.depthWrite;if(a.visible!==void 0)i.visible=a.visible;if(a.flipSided!==
void 0)i.side=THREE.BackSide;if(a.doubleSided!==void 0)i.side=THREE.DoubleSide;if(a.wireframe!==void 0)i.wireframe=a.wireframe;if(a.vertexColors!==void 0)if(a.vertexColors==="face")i.vertexColors=THREE.FaceColors;else if(a.vertexColors)i.vertexColors=THREE.VertexColors;if(a.colorDiffuse)i.color=e(a.colorDiffuse);else if(a.DbgColor)i.color=a.DbgColor;if(a.colorSpecular)i.specular=e(a.colorSpecular);if(a.colorAmbient)i.ambient=e(a.colorAmbient);if(a.transparency)i.opacity=a.transparency;if(a.specularCoef)i.shininess=
a.specularCoef;a.mapDiffuse&&b&&f(i,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(i,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(i,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(i,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(i,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);if(a.mapBumpScale)i.bumpScale=a.mapBumpScale;if(a.mapNormal){h=THREE.ShaderUtils.lib.normal;k=THREE.UniformsUtils.clone(h.uniforms);k.tNormal.value=i.normalMap;a.mapNormalFactor&&k.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor);if(i.map){k.tDiffuse.value=i.map;k.enableDiffuse.value=true}if(i.specularMap){k.tSpecular.value=i.specularMap;k.enableSpecular.value=true}if(i.lightMap){k.tAO.value=
i.lightMap;k.enableAO.value=true}k.uDiffuseColor.value.setHex(i.color);k.uSpecularColor.value.setHex(i.specular);k.uAmbientColor.value.setHex(i.ambient);k.uShininess.value=i.shininess;if(i.opacity!==void 0)k.uOpacity.value=i.opacity;i=new THREE.ShaderMaterial({fragmentShader:h.fragmentShader,vertexShader:h.vertexShader,uniforms:k,lights:true,fog:true})}else i=new THREE[h](i);if(a.DbgName!==void 0)i.name=a.DbgName;return i}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};
THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);THREE.BinaryLoader.prototype.load=function(a,b,c,d){var c=c?c:this.extractUrlBase(a),d=d?d:this.extractUrlBase(a),f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,f)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,f,e){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(g.readyState==4)if(g.status==200||g.status==0){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,f,d,e)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,true);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,f){var e=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;e.onreadystatechange=function(){if(e.readyState==4)if(e.status==200||e.status==0){var c=e.response;if(c===void 0)c=(new Uint8Array(e.responseBody)).buffer;THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+e.status+"]");else if(e.readyState==3){if(f){h==0&&(h=e.getResponseHeader("Content-Length"));f({total:h,loaded:e.responseText.length})}}else e.readyState==
2&&(h=e.getResponseHeader("Content-Length"))};e.open("GET",g,true);e.responseType="arraybuffer";e.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var f=function(b){var c,f,i,k,j,n,m,q,o,r,p,t,u,w,s;function B(a){return a%4?4-a%4:0}function v(a,b){return(new Uint8Array(a,b,1))[0]}function x(a,b){return(new Uint32Array(a,b,1))[0]}function E(b,c){var d,f,e,g,h,i,j,m,k=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){f=k[d*3];e=k[d*3+1];g=k[d*3+2];h=C[f*2];f=C[f*2+1];i=C[e*2];j=C[e*2+1];e=C[g*2];m=C[g*2+1];g=P.faceVertexUvs[0];var n=[];n.push(new THREE.UV(h,f));n.push(new THREE.UV(i,j));n.push(new THREE.UV(e,
m));g.push(n)}}function z(b,c){var d,f,e,g,h,i,j,m,k,n,o=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){f=o[d*4];e=o[d*4+1];g=o[d*4+2];h=o[d*4+3];i=C[f*2];f=C[f*2+1];j=C[e*2];k=C[e*2+1];m=C[g*2];n=C[g*2+1];g=C[h*2];e=C[h*2+1];h=P.faceVertexUvs[0];var r=[];r.push(new THREE.UV(i,f));r.push(new THREE.UV(j,k));r.push(new THREE.UV(m,n));r.push(new THREE.UV(g,e));h.push(r)}}function M(b,c,d){for(var f,e,g,h,c=new Uint32Array(a,c,3*b),i=new Uint16Array(a,d,b),d=0;d<b;d++){f=c[d*3];e=c[d*3+1];g=c[d*3+2];h=i[d];
P.faces.push(new THREE.Face3(f,e,g,null,null,h))}}function D(b,c,d){for(var f,e,g,h,i,c=new Uint32Array(a,c,4*b),j=new Uint16Array(a,d,b),d=0;d<b;d++){f=c[d*4];e=c[d*4+1];g=c[d*4+2];h=c[d*4+3];i=j[d];P.faces.push(new THREE.Face4(f,e,g,h,null,null,i))}}function I(b,c,d,f){for(var e,g,h,i,j,m,k,c=new Uint32Array(a,c,3*b),d=new Uint32Array(a,d,3*b),n=new Uint16Array(a,f,b),f=0;f<b;f++){e=c[f*3];g=c[f*3+1];h=c[f*3+2];j=d[f*3];m=d[f*3+1];k=d[f*3+2];i=n[f];var o=L[m*3],r=L[m*3+1];m=L[m*3+2];var q=L[k*3],
p=L[k*3+1];k=L[k*3+2];P.faces.push(new THREE.Face3(e,g,h,[new THREE.Vector3(L[j*3],L[j*3+1],L[j*3+2]),new THREE.Vector3(o,r,m),new THREE.Vector3(q,p,k)],null,i))}}function J(b,c,d,f){for(var e,g,h,i,j,m,k,n,o,c=new Uint32Array(a,c,4*b),d=new Uint32Array(a,d,4*b),r=new Uint16Array(a,f,b),f=0;f<b;f++){e=c[f*4];g=c[f*4+1];h=c[f*4+2];i=c[f*4+3];m=d[f*4];k=d[f*4+1];n=d[f*4+2];o=d[f*4+3];j=r[f];var q=L[k*3],p=L[k*3+1];k=L[k*3+2];var s=L[n*3],t=L[n*3+1];n=L[n*3+2];var w=L[o*3],v=L[o*3+1];o=L[o*3+2];P.faces.push(new THREE.Face4(e,
g,h,i,[new THREE.Vector3(L[m*3],L[m*3+1],L[m*3+2]),new THREE.Vector3(q,p,k),new THREE.Vector3(s,t,n),new THREE.Vector3(w,v,o)],null,j))}}var P=this,K=0,L=[],C=[],F,O,ea;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(P,d,b);s=a;O=K;b=new Uint8Array(s,O,12);r="";for(u=0;u<12;u++)r=r+String.fromCharCode(b[O+u]);c=v(s,O+12);v(s,O+13);v(s,O+14);v(s,O+15);f=v(s,O+16);i=v(s,O+17);k=v(s,O+18);j=v(s,O+19);n=x(s,O+20);m=x(s,O+20+4);q=x(s,O+20+8);o=x(s,O+20+12);r=x(s,O+20+16);p=x(s,O+20+20);
t=x(s,O+20+24);u=x(s,O+20+28);b=x(s,O+20+32);w=x(s,O+20+36);s=x(s,O+20+40);K=K+c;O=f*3+j;ea=f*4+j;F=o*O;c=r*(O+i*3);f=p*(O+k*3);j=t*(O+i*3+k*3);O=u*ea;i=b*(ea+i*4);k=w*(ea+k*4);ea=K;var K=new Float32Array(a,K,n*3),ha,N,ba,Q;for(ha=0;ha<n;ha++){N=K[ha*3];ba=K[ha*3+1];Q=K[ha*3+2];P.vertices.push(new THREE.Vector3(N,ba,Q))}n=K=ea+n*3*Float32Array.BYTES_PER_ELEMENT;if(m){K=new Int8Array(a,K,m*3);for(ea=0;ea<m;ea++){ha=K[ea*3];N=K[ea*3+1];ba=K[ea*3+2];L.push(ha/127,N/127,ba/127)}}K=n+m*3*Int8Array.BYTES_PER_ELEMENT;
m=K=K+B(m*3);if(q){K=new Float32Array(a,K,q*2);for(n=0;n<q;n++){ea=K[n*2];ha=K[n*2+1];C.push(ea,ha)}}q=K=m+q*2*Float32Array.BYTES_PER_ELEMENT;F=q+F+B(o*2);m=F+c+B(r*2);c=m+f+B(p*2);f=c+j+B(t*2);O=f+O+B(u*2);j=O+i+B(b*2);i=j+k+B(w*2);if(p){k=m+p*Uint32Array.BYTES_PER_ELEMENT*3;M(p,m,k+p*Uint32Array.BYTES_PER_ELEMENT*3);E(p,k)}if(t){p=c+t*Uint32Array.BYTES_PER_ELEMENT*3;k=p+t*Uint32Array.BYTES_PER_ELEMENT*3;I(t,c,p,k+t*Uint32Array.BYTES_PER_ELEMENT*3);E(t,k)}if(w){t=j+w*Uint32Array.BYTES_PER_ELEMENT*
4;D(w,j,t+w*Uint32Array.BYTES_PER_ELEMENT*4);z(w,t)}if(s){w=i+s*Uint32Array.BYTES_PER_ELEMENT*4;t=w+s*Uint32Array.BYTES_PER_ELEMENT*4;J(s,i,w,t+s*Uint32Array.BYTES_PER_ELEMENT*4);z(s,t)}o&&M(o,q,q+o*Uint32Array.BYTES_PER_ELEMENT*3);if(r){o=F+r*Uint32Array.BYTES_PER_ELEMENT*3;I(r,F,o,o+r*Uint32Array.BYTES_PER_ELEMENT*3)}u&&D(u,f,f+u*Uint32Array.BYTES_PER_ELEMENT*4);if(b){r=O+b*Uint32Array.BYTES_PER_ELEMENT*4;J(b,O,r,r+b*Uint32Array.BYTES_PER_ELEMENT*4)}this.computeCentroids();this.computeFaceNormals();
THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};f.prototype=Object.create(THREE.Geometry.prototype);b(new f(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;b===void 0&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},false);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(c.crossOrigin)b.crossOrigin=c.crossOrigin;b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,f){var e=new XMLHttpRequest,g=0;e.onreadystatechange=function(){if(e.readyState===e.DONE)if(e.status===200||e.status===0){if(e.responseText){var h=JSON.parse(e.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+e.status+"]");else if(e.readyState===e.LOADING){if(f){g===0&&(g=e.getResponseHeader("Content-Length"));
f({total:g,loaded:e.responseText.length})}}else e.readyState===e.HEADERS_RECEIVED&&(g=e.getResponseHeader("Content-Length"))};e.open("GET",b,true);e.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,f=a.scale!==void 0?1/a.scale:1;this.initMaterials(d,a.materials,c);var e,g,h,i,k,j,n,m,q,o,r,p,t,u,w=a.faces;q=a.vertices;var s=a.normals,B=a.colors,v=0;for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&v++;for(e=0;e<v;e++){d.faceUvs[e]=[];d.faceVertexUvs[e]=[]}c=0;for(i=q.length;c<i;){k=new THREE.Vector3;k.x=q[c++]*f;k.y=q[c++]*f;k.z=q[c++]*f;d.vertices.push(k)}c=0;for(i=w.length;c<i;){q=w[c++];k=q&1;h=q&2;e=q&4;g=q&8;n=q&
16;j=q&32;o=q&64;q=q&128;if(k){r=new THREE.Face4;r.a=w[c++];r.b=w[c++];r.c=w[c++];r.d=w[c++];k=4}else{r=new THREE.Face3;r.a=w[c++];r.b=w[c++];r.c=w[c++];k=3}if(h){h=w[c++];r.materialIndex=h}h=d.faces.length;if(e)for(e=0;e<v;e++){p=a.uvs[e];m=w[c++];u=p[m*2];m=p[m*2+1];d.faceUvs[e][h]=new THREE.UV(u,m)}if(g)for(e=0;e<v;e++){p=a.uvs[e];t=[];for(g=0;g<k;g++){m=w[c++];u=p[m*2];m=p[m*2+1];t[g]=new THREE.UV(u,m)}d.faceVertexUvs[e][h]=t}if(n){n=w[c++]*3;g=new THREE.Vector3;g.x=s[n++];g.y=s[n++];g.z=s[n];
r.normal=g}if(j)for(e=0;e<k;e++){n=w[c++]*3;g=new THREE.Vector3;g.x=s[n++];g.y=s[n++];g.z=s[n];r.vertexNormals.push(g)}if(o){j=w[c++];j=new THREE.Color(B[j]);r.color=j}if(q)for(e=0;e<k;e++){j=w[c++];j=new THREE.Color(B[j]);r.vertexColors.push(j)}d.faces.push(r)}if(a.skinWeights){c=0;for(i=a.skinWeights.length;c<i;c=c+2){w=a.skinWeights[c];s=a.skinWeights[c+1];d.skinWeights.push(new THREE.Vector4(w,s,0,0))}}if(a.skinIndices){c=0;for(i=a.skinIndices.length;c<i;c=c+2){w=a.skinIndices[c];s=a.skinIndices[c+
1];d.skinIndices.push(new THREE.Vector4(w,s,0,0))}}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets!==void 0){c=0;for(i=a.morphTargets.length;c<i;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];B=d.morphTargets[c].vertices;v=a.morphTargets[c].vertices;w=0;for(s=v.length;w<s;w=w+3){q=new THREE.Vector3;q.x=v[w]*f;q.y=v[w+1]*f;q.z=v[w+2]*f;B.push(q)}}}if(a.morphColors!==void 0){c=0;for(i=a.morphColors.length;c<i;c++){d.morphColors[c]={};
d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=[];s=d.morphColors[c].colors;B=a.morphColors[c].colors;f=0;for(w=B.length;f<w;f=f+3){v=new THREE.Color(16755200);v.setRGB(B[f],B[f+1],B[f+2]);s.push(v)}}}d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};
THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,false)}};THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(b.path===null){var d=a.split("/");d.pop();b.path=d.length<1?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),f):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},false);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);d.open("GET",
a,true);d.send(null);var f=new THREE.LoadingMonitor;f.addEventListener("load",function(){b.dispatchEvent({type:"load",content:c})});f.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,f=a.scale!==void 0?1/a.scale:1;if(a.materials){d.materials=[];for(var e=0;e<a.materials.length;++e){var g=a.materials[e],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},i=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,f,e,g,j){a[d]=new THREE.Texture;a[d].sourceFile=
f;if(e){a[d].repeat.set(e[0],e[1]);if(e[0]!==1)a[d].wrapS=THREE.RepeatWrapping;if(e[1]!==1)a[d].wrapT=THREE.RepeatWrapping}g&&a[d].offset.set(g[0],g[1]);if(j){e={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(e[j[0]]!==void 0)a[d].wrapS=e[j[0]];if(e[j[1]]!==void 0)a[d].wrapT=e[j[1]]}var k=a[d],a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=i(a.width),c=i(a.height);k.image=document.createElement("canvas");k.image.width=
b;k.image.height=c;k.image.getContext("2d").drawImage(a,0,0,b,c)}else k.image=a;k.needsUpdate=true});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+f);b&&b.add(a)},j=function(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255},n="MeshLambertMaterial",m={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:false};if(g.shading){var q=g.shading.toLowerCase();q==="phong"?n="MeshPhongMaterial":q==="basic"&&(n="MeshBasicMaterial")}if(g.blending!==void 0&&THREE[g.blending]!==
void 0)m.blending=THREE[g.blending];if(g.transparent!==void 0||g.opacity<1)m.transparent=g.transparent;if(g.depthTest!==void 0)m.depthTest=g.depthTest;if(g.depthWrite!==void 0)m.depthWrite=g.depthWrite;if(g.vertexColors!==void 0)if(g.vertexColors=="face")m.vertexColors=THREE.FaceColors;else if(g.vertexColors)m.vertexColors=THREE.VertexColors;if(g.colorDiffuse)m.color=j(g.colorDiffuse);else if(g.DbgColor)m.color=g.DbgColor;if(g.colorSpecular)m.specular=j(g.colorSpecular);if(g.colorAmbient)m.ambient=
j(g.colorAmbient);if(g.transparency)m.opacity=g.transparency;if(g.specularCoef)m.shininess=g.specularCoef;if(g.visible!==void 0)m.visible=g.visible;if(g.flipSided!==void 0)m.side=THREE.BackSide;if(g.doubleSided!==void 0)m.side=THREE.DoubleSide;if(g.wireframe!==void 0)m.wireframe=g.wireframe;g.mapDiffuse&&k(m,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(m,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(m,"bumpMap",g.mapBump,
g.mapBumpRepeat,g.mapBumpOffset,g.mapBumpWrap);g.mapNormal&&k(m,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(m,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);if(g.mapNormal){k=THREE.ShaderUtils.lib.normal;j=THREE.UniformsUtils.clone(k.uniforms);j.tNormal.value=m.normalMap;g.mapNormalFactor&&j.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor);if(m.map){j.tDiffuse.value=m.map;j.enableDiffuse.value=true}if(m.specularMap){j.tSpecular.value=
m.specularMap;j.enableSpecular.value=true}if(m.lightMap){j.tAO.value=m.lightMap;j.enableAO.value=true}j.uDiffuseColor.value.setHex(m.color);j.uSpecularColor.value.setHex(m.specular);j.uAmbientColor.value.setHex(m.ambient);j.uShininess.value=m.shininess;if(m.opacity!==void 0)j.uOpacity.value=m.opacity;m=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:j,lights:true,fog:true})}else m=new THREE[n](m);if(g.DbgName!==void 0)m.name=g.DbgName;d.materials[e]=
m}}var g=a.faces,o=a.vertices,m=a.normals,k=a.colors,j=0;if(a.uvs)for(e=0;e<a.uvs.length;e++)a.uvs[e].length&&j++;for(e=0;e<j;e++){d.faceUvs[e]=[];d.faceVertexUvs[e]=[]}n=0;for(q=o.length;n<q;){var r=new THREE.Vector3;r.x=o[n++]*f;r.y=o[n++]*f;r.z=o[n++]*f;d.vertices.push(r)}n=0;for(q=g.length;n<q;){var p=g[n++],t=p&2,e=p&4,u=p&8,w=p&16,o=p&32,s=p&64,r=p&128;if(p&1){p=new THREE.Face4;p.a=g[n++];p.b=g[n++];p.c=g[n++];p.d=g[n++];var B=4}else{p=new THREE.Face3;p.a=g[n++];p.b=g[n++];p.c=g[n++];B=3}if(t){t=
g[n++];p.materialIndex=t}var v=d.faces.length;if(e)for(e=0;e<j;e++){var x=a.uvs[e],t=g[n++],E=x[t*2],t=x[t*2+1];d.faceUvs[e][v]=new THREE.UV(E,t)}if(u)for(e=0;e<j;e++){for(var x=a.uvs[e],u=[],z=0;z<B;z++){t=g[n++];E=x[t*2];t=x[t*2+1];u[z]=new THREE.UV(E,t)}d.faceVertexUvs[e][v]=u}if(w){w=g[n++]*3;t=new THREE.Vector3;t.x=m[w++];t.y=m[w++];t.z=m[w];p.normal=t}if(o)for(e=0;e<B;e++){w=g[n++]*3;t=new THREE.Vector3;t.x=m[w++];t.y=m[w++];t.z=m[w];p.vertexNormals.push(t)}if(s){o=g[n++];p.color=new THREE.Color(k[o])}if(r)for(e=
0;e<B;e++){o=g[n++];p.vertexColors.push(new THREE.Color(k[o]))}d.faces.push(p)}if(a.skinWeights){e=0;for(g=a.skinWeights.length;e<g;e=e+2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[e],a.skinWeights[e+1],0,0))}if(a.skinIndices){e=0;for(g=a.skinIndices.length;e<g;e=e+2){m=0;d.skinIndices.push(new THREE.Vector4(a.skinIndices[e],a.skinIndices[e+1],m,0))}}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){e=0;for(g=a.morphTargets.length;e<g;e++){d.morphTargets[e]={};d.morphTargets[e].name=
a.morphTargets[e].name;d.morphTargets[e].vertices=[];m=d.morphTargets[e].vertices;k=a.morphTargets[e].vertices;t=0;for(j=k.length;t<j;t=t+3){r=new THREE.Vector3;r.x=k[t]*f;r.y=k[t+1]*f;r.z=k[t+2]*f;m.push(r)}}}if(a.morphColors){e=0;for(g=a.morphColors.length;e<g;e++){d.morphColors[e]={};d.morphColors[e].name=a.morphColors[e].name;d.morphColors[e].colors=[];f=d.morphColors[e].colors;k=a.morphColors[e].colors;m=0;for(j=k.length;m<j;m=m+3){n=new THREE.Color(16755200);n.setRGB(k[m],k[m+1],k[m+2]);f.push(n)}}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState===4)if(d.status===200||d.status===0){var f=JSON.parse(d.responseText);c.parse(f,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,true);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return b=="relativeToHTML"?a:k+"/"+a}function f(a,b){for(var c in b)if(C.objects[c]===void 0){var d=b[c],e=null;if(d.geometry!==void 0){if(E=C.geometries[d.geometry]){e=false;z=C.materials[d.materials[0]];(e=z instanceof THREE.ShaderMaterial)&&E.computeTangents();u=d.position;w=d.rotation;s=d.quaternion;B=d.scale;p=d.matrix;s=0;d.materials.length===0&&(z=new THREE.MeshFaceMaterial);d.materials.length>1&&(z=new THREE.MeshFaceMaterial);
if(d.morph){e=new THREE.MorphAnimMesh(E,z);if(d.duration!==void 0)e.duration=d.duration;if(d.time!==void 0)e.time=d.time;if(d.mirroredLoop!==void 0)e.mirroredLoop=d.mirroredLoop;z.morphNormals&&E.computeMorphNormals()}else e=new THREE.Mesh(E,z);e.name=c;if(p){e.matrixAutoUpdate=false;e.matrix.set(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],p[8],p[9],p[10],p[11],p[12],p[13],p[14],p[15])}else{e.position.set(u[0],u[1],u[2]);if(s){e.quaternion.set(s[0],s[1],s[2],s[3]);e.useQuaternion=true}else e.rotation.set(w[0],
w[1],w[2]);e.scale.set(B[0],B[1],B[2])}e.visible=d.visible;e.castShadow=d.castShadow;e.receiveShadow=d.receiveShadow;a.add(e);C.objects[c]=e}}else{u=d.position;w=d.rotation;s=d.quaternion;B=d.scale;s=0;e=new THREE.Object3D;e.name=c;e.position.set(u[0],u[1],u[2]);if(s){e.quaternion.set(s[0],s[1],s[2],s[3]);e.useQuaternion=true}else e.rotation.set(w[0],w[1],w[2]);e.scale.set(B[0],B[1],B[2]);e.visible=d.visible!==void 0?d.visible:false;a.add(e);C.objects[c]=e;C.empties[c]=e}if(e){if(d.properties!==void 0)for(var g in d.properties)e.properties[g]=
d.properties[g];d.children!==void 0&&f(e,d.children)}}}function e(a){return function(b){C.geometries[a]=b;f(C.scene,F.objects);J=J-1;i.onLoadComplete();h()}}function g(a){return function(b){C.geometries[a]=b}}function h(){i.callbackProgress({totalModels:K,totalTextures:L,loadedModels:K-J,loadedTextures:L-P},C);i.onLoadProgress();J===0&&P===0&&b(C)}var i=this,k=THREE.Loader.prototype.extractUrlBase(c),j,n,m,q,o,r,p,t,u,w,s,B,v,x,E,z,M,D,I,J,P,K,L,C,F=a;for(v in this.geometryHandlerMap)this.geometryHandlerMap[v].loaderObject=
new this.geometryHandlerMap[v].loaderClass;P=J=0;C={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(F.transform){a=F.transform.position;c=F.transform.rotation;v=F.transform.scale;a&&C.scene.position.set(a[0],a[1],a[2]);c&&C.scene.rotation.set(c[0],c[1],c[2]);v&&C.scene.scale.set(v[0],v[1],v[2]);if(a||c||v){C.scene.updateMatrix();C.scene.updateMatrixWorld()}}a=function(a){return function(){P=P-a;h();i.onLoadComplete()}};for(q in F.cameras){v=
F.cameras[q];v.type==="perspective"?M=new THREE.PerspectiveCamera(v.fov,v.aspect,v.near,v.far):v.type==="ortho"&&(M=new THREE.OrthographicCamera(v.left,v.right,v.top,v.bottom,v.near,v.far));u=v.position;c=v.target;v=v.up;M.position.set(u[0],u[1],u[2]);M.target=new THREE.Vector3(c[0],c[1],c[2]);v&&M.up.set(v[0],v[1],v[2]);C.cameras[q]=M}for(m in F.lights){c=F.lights[m];q=c.color!==void 0?c.color:16777215;M=c.intensity!==void 0?c.intensity:1;if(c.type==="directional"){u=c.direction;t=new THREE.DirectionalLight(q,
M);t.position.set(u[0],u[1],u[2]);t.position.normalize()}else if(c.type==="point"){u=c.position;t=c.distance;t=new THREE.PointLight(q,M,t);t.position.set(u[0],u[1],u[2])}else c.type==="ambient"&&(t=new THREE.AmbientLight(q));C.scene.add(t);C.lights[m]=t}for(o in F.fogs){m=F.fogs[o];m.type==="linear"?D=new THREE.Fog(0,m.near,m.far):m.type==="exp2"&&(D=new THREE.FogExp2(0,m.density));v=m.color;D.color.setRGB(v[0],v[1],v[2]);C.fogs[o]=D}if(C.cameras&&F.defaults.camera)C.currentCamera=C.cameras[F.defaults.camera];
if(C.fogs&&F.defaults.fog)C.scene.fog=C.fogs[F.defaults.fog];v=F.defaults.bgcolor;C.bgColor=new THREE.Color;C.bgColor.setRGB(v[0],v[1],v[2]);C.bgColorAlpha=F.defaults.bgalpha;for(j in F.geometries){o=F.geometries[j];if(o.type in this.geometryHandlerMap){J=J+1;i.onLoadStart()}}K=J;for(j in F.geometries){o=F.geometries[j];if(o.type==="cube"){E=new THREE.CubeGeometry(o.width,o.height,o.depth,o.segmentsWidth,o.segmentsHeight,o.segmentsDepth,null,o.flipped,o.sides);C.geometries[j]=E}else if(o.type==="plane"){E=
new THREE.PlaneGeometry(o.width,o.height,o.segmentsWidth,o.segmentsHeight);C.geometries[j]=E}else if(o.type==="sphere"){E=new THREE.SphereGeometry(o.radius,o.segmentsWidth,o.segmentsHeight);C.geometries[j]=E}else if(o.type==="cylinder"){E=new THREE.CylinderGeometry(o.topRad,o.botRad,o.height,o.radSegs,o.heightSegs);C.geometries[j]=E}else if(o.type==="torus"){E=new THREE.TorusGeometry(o.radius,o.tube,o.segmentsR,o.segmentsT);C.geometries[j]=E}else if(o.type==="icosahedron"){E=new THREE.IcosahedronGeometry(o.radius,
o.subdivisions);C.geometries[j]=E}else if(o.type in this.geometryHandlerMap){D={};for(I in o)I!=="type"&&I!=="url"&&(D[I]=o[I]);this.geometryHandlerMap[o.type].loaderObject.load(d(o.url,F.urlBaseType),e(j),D)}else if(o.type==="embedded"){o=F.embeds[o.id];o.metadata=F.metadata;o&&this.geometryHandlerMap.ascii.loaderObject.createModel(o,g(j),"")}}for(r in F.textures){j=F.textures[r];if(j.url instanceof Array){P=P+j.url.length;for(I=0;I<j.url.length;I++)i.onLoadStart()}else{P=P+1;i.onLoadStart()}}L=
P;for(r in F.textures){j=F.textures[r];if(j.mapping!==void 0&&THREE[j.mapping]!==void 0)j.mapping=new THREE[j.mapping];if(j.url instanceof Array){o=j.url.length;D=[];for(I=0;I<o;I++)D[I]=d(j.url[I],F.urlBaseType);I=(I=D[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(D,j.mapping,a(o)):THREE.ImageUtils.loadTextureCube(D,j.mapping,a(o))}else{I=j.url.toLowerCase().endsWith(".dds");o=d(j.url,F.urlBaseType);D=a(1);I=I?THREE.ImageUtils.loadCompressedTexture(o,j.mapping,D):THREE.ImageUtils.loadTexture(o,
j.mapping,D);if(THREE[j.minFilter]!==void 0)I.minFilter=THREE[j.minFilter];if(THREE[j.magFilter]!==void 0)I.magFilter=THREE[j.magFilter];if(j.anisotropy)I.anisotropy=j.anisotropy;if(j.repeat){I.repeat.set(j.repeat[0],j.repeat[1]);if(j.repeat[0]!==1)I.wrapS=THREE.RepeatWrapping;if(j.repeat[1]!==1)I.wrapT=THREE.RepeatWrapping}j.offset&&I.offset.set(j.offset[0],j.offset[1]);if(j.wrap){o={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(o[j.wrap[0]]!==void 0)I.wrapS=o[j.wrap[0]];if(o[j.wrap[1]]!==
void 0)I.wrapT=o[j.wrap[1]]}}C.textures[r]=I}for(n in F.materials){p=F.materials[n];for(x in p.parameters)if(x==="envMap"||x==="map"||x==="lightMap"||x==="bumpMap")p.parameters[x]=C.textures[p.parameters[x]];else if(x==="shading")p.parameters[x]=p.parameters[x]==="flat"?THREE.FlatShading:THREE.SmoothShading;else if(x==="side")p.parameters[x]=p.parameters[x]=="double"?THREE.DoubleSide:p.parameters[x]=="back"?THREE.BackSide:THREE.FrontSide;else if(x==="blending")p.parameters[x]=p.parameters[x]in THREE?
THREE[p.parameters[x]]:THREE.NormalBlending;else if(x==="combine")p.parameters[x]=p.parameters[x]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;else if(x==="vertexColors")if(p.parameters[x]=="face")p.parameters[x]=THREE.FaceColors;else{if(p.parameters[x])p.parameters[x]=THREE.VertexColors}else if(x==="wrapRGB"){r=p.parameters[x];p.parameters[x]=new THREE.Vector3(r[0],r[1],r[2])}if(p.parameters.opacity!==void 0&&p.parameters.opacity<1)p.parameters.transparent=true;if(p.parameters.normalMap){r=
THREE.ShaderUtils.lib.normal;a=THREE.UniformsUtils.clone(r.uniforms);j=p.parameters.color;I=p.parameters.specular;o=p.parameters.ambient;D=p.parameters.shininess;a.tNormal.value=C.textures[p.parameters.normalMap];p.parameters.normalScale&&a.uNormalScale.value.set(p.parameters.normalScale[0],p.parameters.normalScale[1]);if(p.parameters.map){a.tDiffuse.value=p.parameters.map;a.enableDiffuse.value=true}if(p.parameters.envMap){a.tCube.value=p.parameters.envMap;a.enableReflection.value=true;a.uReflectivity.value=
p.parameters.reflectivity}if(p.parameters.lightMap){a.tAO.value=p.parameters.lightMap;a.enableAO.value=true}if(p.parameters.specularMap){a.tSpecular.value=C.textures[p.parameters.specularMap];a.enableSpecular.value=true}if(p.parameters.displacementMap){a.tDisplacement.value=C.textures[p.parameters.displacementMap];a.enableDisplacement.value=true;a.uDisplacementBias.value=p.parameters.displacementBias;a.uDisplacementScale.value=p.parameters.displacementScale}a.uDiffuseColor.value.setHex(j);a.uSpecularColor.value.setHex(I);
a.uAmbientColor.value.setHex(o);a.uShininess.value=D;if(p.parameters.opacity)a.uOpacity.value=p.parameters.opacity;z=new THREE.ShaderMaterial({fragmentShader:r.fragmentShader,vertexShader:r.vertexShader,uniforms:a,lights:true,fog:true})}else z=new THREE[p.type](p.parameters);C.materials[n]=z}f(C.scene,F.objects);i.callbackSync(C);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=true;b.dispatchEvent({type:"load",content:a})},false);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},false);if(b.crossOrigin)c.crossOrigin=b.crossOrigin;c.src=a}};
THREE.Material=function(){this.id=THREE.MaterialCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=false;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=true;this.polygonOffset=false;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=false;this.needsUpdate=this.visible=true};
THREE.Material.prototype.setValues=function(a){if(a!==void 0)for(var b in a){var c=a[b];if(c===void 0)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&typeof c==="number"?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){a===void 0&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.MaterialCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=false;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=false;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=true;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=false;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=true;this.vertexColors=false;this.fog=true;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=false;this.wireframeLinewidth=1;this.lights=this.fog=false;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=false;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;
return a};
THREE.Texture=function(a,b,c,d,f,e,g,h,i){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping;this.magFilter=f!==void 0?f:THREE.LinearFilter;this.minFilter=e!==void 0?e:THREE.LinearMipMapLinearFilter;this.anisotropy=i!==void 0?i:1;this.format=g!==void 0?g:THREE.RGBAFormat;this.type=h!==void 0?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,
1);this.generateMipmaps=true;this.premultiplyAlpha=false;this.flipY=true;this.needsUpdate=false;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a}};THREE.TextureCount=0;
THREE.CompressedTexture=function(a,b,c,d,f,e,g,h,i,k){THREE.Texture.call(this,null,e,g,h,i,k,d,f);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,f,e,g,h,i,k){THREE.Texture.call(this,null,e,g,h,i,k,d,f);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b!==void 0?b:new THREE.ParticleBasicMaterial({color:Math.random()*16777215});this.sortParticles=false;if(this.geometry){this.geometry.boundingSphere||this.geometry.computeBoundingSphere();this.boundRadius=a.boundingSphere.radius}this.frustumCulled=false};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b!==void 0?b:new THREE.LineBasicMaterial({color:Math.random()*16777215});this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b!==void 0?b:new THREE.MeshBasicMaterial({color:Math.random()*16777215,wireframe:true});if(this.geometry){this.geometry.boundingSphere||this.geometry.computeBoundingSphere();this.boundRadius=a.boundingSphere.radius;if(this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++){this.morphTargetInfluences.push(0);
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}}}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b=b|this.updateMatrix());if(b||this.matrixWorldNeedsUpdate){a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix);this.matrixWorldNeedsUpdate=false;b=true}var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=c!==void 0?c:true;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,f,e;if(this.geometry.bones!==void 0){for(a=0;a<this.geometry.bones.length;a++){c=this.geometry.bones[a];d=c.pos;f=c.rotq;e=c.scl;b=this.addBone();b.name=c.name;b.position.set(d[0],d[1],d[2]);b.quaternion.set(f[0],f[1],f[2],f[3]);b.useQuaternion=true;e!==void 0?b.scale.set(e[0],e[1],e[2]):b.scale.set(1,1,1)}for(a=0;a<this.bones.length;a++){c=
this.geometry.bones[a];b=this.bones[a];c.parent===-1?this.add(b):this.bones[c.parent].add(b)}a=this.bones.length;if(this.useVertexTexture){this.boneTextureHeight=this.boneTextureWidth=a=a>256?64:a>64?32:a>16?16:8;this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4);this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType);this.boneTexture.minFilter=THREE.NearestFilter;this.boneTexture.magFilter=
THREE.NearestFilter;this.boneTexture.generateMipmaps=false;this.boneTexture.flipY=false}else this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix);this.matrixWorldNeedsUpdate=false}for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,false):c.updateMatrixWorld(true)}if(this.boneInverses==void 0){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++){c=new THREE.Matrix4;c.getInverse(this.bones[a].skinMatrix);this.boneInverses.push(c)}}a=0;for(b=this.bones.length;a<b;a++){THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]);THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,a*16)}if(this.useVertexTexture)this.boneTexture.needsUpdate=true};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(true);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();c!==Infinity?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=false;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=false;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=false};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=true};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;if(!a.animations)a.animations={};for(var b,c=a.animations,d=/([a-z]+)(\d+)/,f=0,e=a.morphTargets.length;f<e;f++){var g=a.morphTargets[f].name.match(d);if(g&&g.length>1){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];if(f<h.start)h.start=f;if(f>h.end)h.end=f;b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){if(!this.geometry.animations)this.geometry.animations={};this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];if(c){this.setFrameRange(c.start,c.end);this.duration=1E3*((c.end-c.start)/b);this.time=0}else console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time=this.time+this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction=this.direction*-1;if(this.time>this.duration){this.time=this.duration;this.directionBackwards=true}if(this.time<0){this.time=0;this.directionBackwards=false}}}else{this.time=this.time%this.duration;if(this.time<0)this.time=this.time+this.duration}a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/
b),0,this.length-1);if(a!==this.currentKeyframe){this.morphTargetInfluences[this.lastKeyframe]=0;this.morphTargetInfluences[this.currentKeyframe]=1;this.morphTargetInfluences[a]=0;this.lastKeyframe=this.currentKeyframe;this.currentKeyframe=a}b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};
THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=true;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance){this.LODs[b-1].object3D.visible=false;this.LODs[b].object3D.visible=true}else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
false}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:new THREE.Texture;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.blendSrc=a.blendSrc!==void 0?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=a.blendDst!==void 0?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=a.blendEquation!==void 0?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?
a.useScreenCoordinates:true;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1){this.matrix.scale(this.scale);this.boundRadiusScale=Math.max(this.scale.x,this.scale.y)}this.matrixWorldNeedsUpdate=true};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=false;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light){this.__lights.indexOf(a)===-1&&this.__lights.push(a);a.target&&a.target.parent===void 0&&this.add(a.target)}else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.__objects.indexOf(a)===-1){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);b!==-1&&this.__lights.splice(b,1)}else if(!(a instanceof THREE.Camera)){b=this.__objects.indexOf(a);if(b!==-1){this.__objects.splice(b,1);this.__objectsRemoved.push(a);b=this.__objectsAdded.indexOf(a);b!==-1&&this.__objectsAdded.splice(b,1)}}for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){if(u!==a)u=r.globalAlpha=a}function c(a){if(w!==a){if(a===THREE.NormalBlending)r.globalCompositeOperation="source-over";else if(a===THREE.AdditiveBlending)r.globalCompositeOperation="lighter";else if(a===THREE.SubtractiveBlending)r.globalCompositeOperation="darker";w=a}}function d(a){if(s!==a)s=r.strokeStyle=a}function f(a){if(B!==a)B=r.fillStyle=a}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},e=this,g,h,i,k=new THREE.Projector,j=a.canvas!==
void 0?a.canvas:document.createElement("canvas"),n,m,q,o,r=j.getContext("2d"),p=new THREE.Color(0),t=0,u=1,w=0,s=null,B=null,v=null,x=null,E=null,z,M,D,I,J=new THREE.RenderableVertex,P=new THREE.RenderableVertex,K,L,C,F,O,ea,ha,N,ba,Q,qa,xa,da=new THREE.Color,Y=new THREE.Color,S=new THREE.Color,R=new THREE.Color,ia=new THREE.Color,na={},sa={},oa,Ga,va,Qa,ja,Xa,Ba,Ha,kb,fb,db=new THREE.Rectangle,Ca=new THREE.Rectangle,za=new THREE.Rectangle,eb=false,pa=new THREE.Color,Ta=new THREE.Color,la=new THREE.Color,
Da=new THREE.Vector3,$a,gb,G,aa,Ya,ob,a=16;$a=document.createElement("canvas");$a.width=$a.height=2;gb=$a.getContext("2d");gb.fillStyle="rgba(0,0,0,1)";gb.fillRect(0,0,2,2);G=gb.getImageData(0,0,2,2);aa=G.data;Ya=document.createElement("canvas");Ya.width=Ya.height=a;ob=Ya.getContext("2d");ob.translate(-a/2,-a/2);ob.scale(a,a);a--;this.domElement=j;this.sortElements=this.sortObjects=this.autoClear=true;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){n=a;m=b;q=Math.floor(n/2);o=Math.floor(m/
2);j.width=n;j.height=m;db.set(-q,-o,q,o);Ca.set(-q,-o,q,o);u=1;w=0;E=x=v=B=s=null};this.setClearColor=function(a,b){p.copy(a);t=b!==void 0?b:1;Ca.set(-q,-o,q,o)};this.setClearColorHex=function(a,b){p.setHex(a);t=b!==void 0?b:1;Ca.set(-q,-o,q,o)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){r.setTransform(1,0,0,-1,q,o);if(Ca.isEmpty()===false){Ca.minSelf(db);Ca.inflate(2);t<1&&r.clearRect(Math.floor(Ca.getX()),Math.floor(Ca.getY()),Math.floor(Ca.getWidth()),Math.floor(Ca.getHeight()));
if(t>0){c(THREE.NormalBlending);b(1);f("rgba("+Math.floor(p.r*255)+","+Math.floor(p.g*255)+","+Math.floor(p.b*255)+","+t+")");r.fillRect(Math.floor(Ca.getX()),Math.floor(Ca.getY()),Math.floor(Ca.getWidth()),Math.floor(Ca.getHeight()))}Ca.empty()}};this.render=function(a,l){function j(a,b,c){for(var d=0,f=i.length;d<f;d++){var e=i[d],g=e.color;if(e instanceof THREE.DirectionalLight){var h=e.matrixWorld.getPosition().normalize(),l=b.dot(h);if(!(l<=0)){l=l*e.intensity;c.r=c.r+g.r*l;c.g=c.g+g.g*l;c.b=
c.b+g.b*l}}else if(e instanceof THREE.PointLight){h=e.matrixWorld.getPosition();l=b.dot(Da.sub(h,a).normalize());if(!(l<=0)){l=l*(e.distance==0?1:1-Math.min(a.distanceTo(h)/e.distance,1));if(l!=0){l=l*e.intensity;c.r=c.r+g.r*l;c.g=c.g+g.g*l;c.b=c.b+g.b*l}}}}}function m(a,d,f,g,h,i,k,G){e.info.render.vertices=e.info.render.vertices+3;e.info.render.faces++;b(G.opacity);c(G.blending);K=a.positionScreen.x;L=a.positionScreen.y;C=d.positionScreen.x;F=d.positionScreen.y;O=f.positionScreen.x;ea=f.positionScreen.y;
n(K,L,C,F,O,ea);if((G instanceof THREE.MeshLambertMaterial||G instanceof THREE.MeshPhongMaterial)&&G.map===null&&G.map===null)if(eb===true){g=G.color;h=G.emissive;if(G.wireframe===false&&G.shading==THREE.SmoothShading&&k.vertexNormalsLength==3){Y.r=S.r=R.r=pa.r;Y.g=S.g=R.g=pa.g;Y.b=S.b=R.b=pa.b;j(k.v1.positionWorld,k.vertexNormalsWorld[0],Y);j(k.v2.positionWorld,k.vertexNormalsWorld[1],S);j(k.v3.positionWorld,k.vertexNormalsWorld[2],R);Y.r=g.r*Y.r+h.r;Y.g=g.g*Y.g+h.g;Y.b=g.b*Y.b+h.b;S.r=g.r*S.r+h.r;
S.g=g.g*S.g+h.g;S.b=g.b*S.b+h.b;R.r=g.r*R.r+h.r;R.g=g.g*R.g+h.g;R.b=g.b*R.b+h.b;ia.r=(S.r+R.r)*0.5;ia.g=(S.g+R.g)*0.5;ia.b=(S.b+R.b)*0.5;va=Rb(Y,S,R,ia);u(K,L,C,F,O,ea,0,0,1,0,0,1,va)}else{da.r=pa.r;da.g=pa.g;da.b=pa.b;j(k.centroidWorld,k.normalWorld,da);da.r=g.r*da.r+h.r;da.g=g.g*da.g+h.g;da.b=g.b*da.b+h.b;G.wireframe===true?s(da,G.wireframeLinewidth,G.wireframeLinecap,G.wireframeLinejoin):t(da)}}else G.wireframe===true?s(G.color,G.wireframeLinewidth,G.wireframeLinecap,G.wireframeLinejoin):t(G.color);
else if(G instanceof THREE.MeshBasicMaterial||G instanceof THREE.MeshLambertMaterial||G instanceof THREE.MeshPhongMaterial)if(G.map!==null){if(G.map.mapping instanceof THREE.UVMapping){Qa=k.uvs[0];w(K,L,C,F,O,ea,Qa[g].u,Qa[g].v,Qa[h].u,Qa[h].v,Qa[i].u,Qa[i].v,G.map)}}else if(G.envMap!==null){if(G.envMap.mapping instanceof THREE.SphericalReflectionMapping){a=l.matrixWorldInverse;Da.copy(k.vertexNormalsWorld[g]);ja=(Da.x*a.elements[0]+Da.y*a.elements[4]+Da.z*a.elements[8])*0.5+0.5;Xa=(Da.x*a.elements[1]+
Da.y*a.elements[5]+Da.z*a.elements[9])*0.5+0.5;Da.copy(k.vertexNormalsWorld[h]);Ba=(Da.x*a.elements[0]+Da.y*a.elements[4]+Da.z*a.elements[8])*0.5+0.5;Ha=(Da.x*a.elements[1]+Da.y*a.elements[5]+Da.z*a.elements[9])*0.5+0.5;Da.copy(k.vertexNormalsWorld[i]);kb=(Da.x*a.elements[0]+Da.y*a.elements[4]+Da.z*a.elements[8])*0.5+0.5;fb=(Da.x*a.elements[1]+Da.y*a.elements[5]+Da.z*a.elements[9])*0.5+0.5;w(K,L,C,F,O,ea,ja,Xa,Ba,Ha,kb,fb,G.envMap)}}else G.wireframe===true?s(G.color,G.wireframeLinewidth,G.wireframeLinecap,
G.wireframeLinejoin):t(G.color);else if(G instanceof THREE.MeshDepthMaterial){oa=l.near;Ga=l.far;Y.r=Y.g=Y.b=1-ec(a.positionScreen.z,oa,Ga);S.r=S.g=S.b=1-ec(d.positionScreen.z,oa,Ga);R.r=R.g=R.b=1-ec(f.positionScreen.z,oa,Ga);ia.r=(S.r+R.r)*0.5;ia.g=(S.g+R.g)*0.5;ia.b=(S.b+R.b)*0.5;va=Rb(Y,S,R,ia);u(K,L,C,F,O,ea,0,0,1,0,0,1,va)}else if(G instanceof THREE.MeshNormalMaterial){da.r=ic(k.normalWorld.x);da.g=ic(k.normalWorld.y);da.b=ic(k.normalWorld.z);G.wireframe===true?s(da,G.wireframeLinewidth,G.wireframeLinecap,
G.wireframeLinejoin):t(da)}}function n(a,b,c,d,f,e){r.beginPath();r.moveTo(a,b);r.lineTo(c,d);r.lineTo(f,e);r.closePath()}function p(a,b,c,d,f,e,g,h){r.beginPath();r.moveTo(a,b);r.lineTo(c,d);r.lineTo(f,e);r.lineTo(g,h);r.closePath()}function s(a,b,c,f){if(v!==b)v=r.lineWidth=b;if(x!==c)x=r.lineCap=c;if(E!==f)E=r.lineJoin=f;d(a.getContextStyle());r.stroke();za.inflate(b*2)}function t(a){f(a.getContextStyle());r.fill()}function w(a,b,c,d,e,g,h,l,i,j,k,m,n){if(!(n instanceof THREE.DataTexture||n.image===
void 0||n.image.width==0)){if(n.needsUpdate===true){var G=n.wrapS==THREE.RepeatWrapping,o=n.wrapT==THREE.RepeatWrapping;na[n.id]=r.createPattern(n.image,G===true&&o===true?"repeat":G===true&&o===false?"repeat-x":G===false&&o===true?"repeat-y":"no-repeat");n.needsUpdate=false}na[n.id]===void 0?f("rgba(0,0,0,1)"):f(na[n.id]);var G=n.offset.x/n.repeat.x,o=n.offset.y/n.repeat.y,Rb=n.image.width*n.repeat.x,q=n.image.height*n.repeat.y,h=(h+G)*Rb,l=(1-l+o)*q,c=c-a,d=d-b,e=e-a,g=g-b,i=(i+G)*Rb-h,j=(1-j+o)*
q-l,k=(k+G)*Rb-h,m=(1-m+o)*q-l,G=i*m-k*j;if(G===0){if(sa[n.id]===void 0){b=document.createElement("canvas");b.width=n.image.width;b.height=n.image.height;b=b.getContext("2d");b.drawImage(n.image,0,0);sa[n.id]=b.getImageData(0,0,n.image.width,n.image.height).data}b=sa[n.id];h=(Math.floor(h)+Math.floor(l)*n.image.width)*4;da.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255);t(da)}else{G=1/G;n=(m*c-j*e)*G;j=(m*d-j*g)*G;c=(i*e-k*c)*G;d=(i*g-k*d)*G;a=a-n*h-c*l;h=b-j*h-d*l;r.save();r.transform(n,j,c,d,a,h);r.fill();
r.restore()}}}function u(a,b,c,d,f,e,g,h,l,i,j,k,m){var n,G;n=m.width-1;G=m.height-1;g=g*n;h=h*G;c=c-a;d=d-b;f=f-a;e=e-b;l=l*n-g;i=i*G-h;j=j*n-g;k=k*G-h;G=1/(l*k-j*i);n=(k*c-i*f)*G;i=(k*d-i*e)*G;c=(l*f-j*c)*G;d=(l*e-j*d)*G;a=a-n*g-c*h;b=b-i*g-d*h;r.save();r.transform(n,i,c,d,a,b);r.clip();r.drawImage(m,0,0);r.restore()}function Rb(a,b,c,d){aa[0]=a.r*255|0;aa[1]=a.g*255|0;aa[2]=a.b*255|0;aa[4]=b.r*255|0;aa[5]=b.g*255|0;aa[6]=b.b*255|0;aa[8]=c.r*255|0;aa[9]=c.g*255|0;aa[10]=c.b*255|0;aa[12]=d.r*255|
0;aa[13]=d.g*255|0;aa[14]=d.b*255|0;gb.putImageData(G,0,0);ob.drawImage($a,0,0);return Ya}function ec(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function ic(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}function Tb(a,b){var c=b.x-a.x,d=b.y-a.y,f=c*c+d*d;if(f!==0){f=1/Math.sqrt(f);c=c*f;d=d*f;b.x=b.x+c;b.y=b.y+d;a.x=a.x-c;a.y=a.y-d}}if(l instanceof THREE.Camera===false)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Ub,Cc,B,Z;this.autoClear===true?this.clear():
r.setTransform(1,0,0,-1,q,o);e.info.render.vertices=0;e.info.render.faces=0;g=k.projectScene(a,l,this.sortObjects,this.sortElements);h=g.elements;i=g.lights;eb=i.length>0;if(eb===true){pa.setRGB(0,0,0);Ta.setRGB(0,0,0);la.setRGB(0,0,0);Ub=0;for(Cc=i.length;Ub<Cc;Ub++){Z=i[Ub];var fa=Z.color;if(Z instanceof THREE.AmbientLight){pa.r=pa.r+fa.r;pa.g=pa.g+fa.g;pa.b=pa.b+fa.b}else if(Z instanceof THREE.DirectionalLight){Ta.r=Ta.r+fa.r;Ta.g=Ta.g+fa.g;Ta.b=Ta.b+fa.b}else if(Z instanceof THREE.PointLight){la.r=
la.r+fa.r;la.g=la.g+fa.g;la.b=la.b+fa.b}}}Ub=0;for(Cc=h.length;Ub<Cc;Ub++){B=h[Ub];Z=B.material;if(!(Z===void 0||Z.visible===false)){za.empty();if(B instanceof THREE.RenderableParticle){z=B;z.x=z.x*q;z.y=z.y*o;var fa=z,wa=B;b(Z.opacity);c(Z.blending);var Ma=void 0,tb=void 0,pb=void 0,qb=void 0,Vb=void 0,Oc=B=void 0;if(Z instanceof THREE.ParticleBasicMaterial)if(Z.map===null){pb=wa.object.scale.x;qb=wa.object.scale.y;pb=pb*wa.scale.x*q;qb=qb*wa.scale.y*o;za.set(fa.x-pb,fa.y-qb,fa.x+pb,fa.y+qb);if(db.intersects(za)!==
false){f(Z.color.getContextStyle());r.save();r.translate(fa.x,fa.y);r.rotate(-wa.rotation);r.scale(pb,qb);r.fillRect(-1,-1,2,2);r.restore()}}else{Vb=Z.map.image;B=Vb.width>>1;Oc=Vb.height>>1;pb=wa.scale.x*q;qb=wa.scale.y*o;Ma=pb*B;tb=qb*Oc;za.set(fa.x-Ma,fa.y-tb,fa.x+Ma,fa.y+tb);if(db.intersects(za)!==false){r.save();r.translate(fa.x,fa.y);r.rotate(-wa.rotation);r.scale(pb,-qb);r.translate(-B,-Oc);r.drawImage(Vb,0,0);r.restore()}}else if(Z instanceof THREE.ParticleCanvasMaterial){Ma=wa.scale.x*q;
tb=wa.scale.y*o;za.set(fa.x-Ma,fa.y-tb,fa.x+Ma,fa.y+tb);if(db.intersects(za)!==false){d(Z.color.getContextStyle());f(Z.color.getContextStyle());r.save();r.translate(fa.x,fa.y);r.rotate(-wa.rotation);r.scale(Ma,tb);Z.program(r);r.restore()}}}else if(B instanceof THREE.RenderableLine){z=B.v1;M=B.v2;z.positionScreen.x=z.positionScreen.x*q;z.positionScreen.y=z.positionScreen.y*o;M.positionScreen.x=M.positionScreen.x*q;M.positionScreen.y=M.positionScreen.y*o;za.addPoint(z.positionScreen.x,z.positionScreen.y);
za.addPoint(M.positionScreen.x,M.positionScreen.y);if(db.intersects(za)===true){fa=z;wa=M;b(Z.opacity);c(Z.blending);r.beginPath();r.moveTo(fa.positionScreen.x,fa.positionScreen.y);r.lineTo(wa.positionScreen.x,wa.positionScreen.y);if(Z instanceof THREE.LineBasicMaterial){fa=Z.linewidth;if(v!==fa)v=r.lineWidth=fa;fa=Z.linecap;if(x!==fa)x=r.lineCap=fa;fa=Z.linejoin;if(E!==fa)E=r.lineJoin=fa;d(Z.color.getContextStyle());r.stroke();za.inflate(Z.linewidth*2)}}}else if(B instanceof THREE.RenderableFace3){z=
B.v1;M=B.v2;D=B.v3;z.positionScreen.x=z.positionScreen.x*q;z.positionScreen.y=z.positionScreen.y*o;M.positionScreen.x=M.positionScreen.x*q;M.positionScreen.y=M.positionScreen.y*o;D.positionScreen.x=D.positionScreen.x*q;D.positionScreen.y=D.positionScreen.y*o;if(Z.overdraw===true){Tb(z.positionScreen,M.positionScreen);Tb(M.positionScreen,D.positionScreen);Tb(D.positionScreen,z.positionScreen)}za.add3Points(z.positionScreen.x,z.positionScreen.y,M.positionScreen.x,M.positionScreen.y,D.positionScreen.x,
D.positionScreen.y);db.intersects(za)===true&&m(z,M,D,0,1,2,B,Z,a)}else if(B instanceof THREE.RenderableFace4){z=B.v1;M=B.v2;D=B.v3;I=B.v4;z.positionScreen.x=z.positionScreen.x*q;z.positionScreen.y=z.positionScreen.y*o;M.positionScreen.x=M.positionScreen.x*q;M.positionScreen.y=M.positionScreen.y*o;D.positionScreen.x=D.positionScreen.x*q;D.positionScreen.y=D.positionScreen.y*o;I.positionScreen.x=I.positionScreen.x*q;I.positionScreen.y=I.positionScreen.y*o;J.positionScreen.copy(M.positionScreen);P.positionScreen.copy(I.positionScreen);
if(Z.overdraw===true){Tb(z.positionScreen,M.positionScreen);Tb(M.positionScreen,I.positionScreen);Tb(I.positionScreen,z.positionScreen);Tb(D.positionScreen,J.positionScreen);Tb(D.positionScreen,P.positionScreen)}za.addPoint(z.positionScreen.x,z.positionScreen.y);za.addPoint(M.positionScreen.x,M.positionScreen.y);za.addPoint(D.positionScreen.x,D.positionScreen.y);za.addPoint(I.positionScreen.x,I.positionScreen.y);if(db.intersects(za)===true){wa=z;Ma=M;tb=D;pb=I;qb=J;Vb=P;fa=B;B=a;e.info.render.vertices=
e.info.render.vertices+4;e.info.render.faces++;b(Z.opacity);c(Z.blending);if(Z.map!==void 0&&Z.map!==null||Z.envMap!==void 0&&Z.envMap!==null){m(wa,Ma,pb,0,1,3,fa,Z,B);m(qb,tb,Vb,1,2,3,fa,Z,B)}else{K=wa.positionScreen.x;L=wa.positionScreen.y;C=Ma.positionScreen.x;F=Ma.positionScreen.y;O=tb.positionScreen.x;ea=tb.positionScreen.y;ha=pb.positionScreen.x;N=pb.positionScreen.y;ba=qb.positionScreen.x;Q=qb.positionScreen.y;qa=Vb.positionScreen.x;xa=Vb.positionScreen.y;if(Z instanceof THREE.MeshLambertMaterial||
Z instanceof THREE.MeshPhongMaterial)if(eb===true){wa=Z.color;Ma=Z.emissive;if(Z.wireframe===false&&Z.shading==THREE.SmoothShading&&fa.vertexNormalsLength==4){Y.r=S.r=R.r=ia.r=pa.r;Y.g=S.g=R.g=ia.g=pa.g;Y.b=S.b=R.b=ia.b=pa.b;j(fa.v1.positionWorld,fa.vertexNormalsWorld[0],Y);j(fa.v2.positionWorld,fa.vertexNormalsWorld[1],S);j(fa.v4.positionWorld,fa.vertexNormalsWorld[3],R);j(fa.v3.positionWorld,fa.vertexNormalsWorld[2],ia);Y.r=wa.r*Y.r+Ma.r;Y.g=wa.g*Y.g+Ma.g;Y.b=wa.b*Y.b+Ma.b;S.r=wa.r*S.r+Ma.r;S.g=
wa.g*S.g+Ma.g;S.b=wa.b*S.b+Ma.b;R.r=wa.r*R.r+Ma.r;R.g=wa.g*R.g+Ma.g;R.b=wa.b*R.b+Ma.b;ia.r=wa.r*ia.r+Ma.r;ia.g=wa.g*ia.g+Ma.g;ia.b=wa.b*ia.b+Ma.b;va=Rb(Y,S,R,ia);n(K,L,C,F,ha,N);u(K,L,C,F,ha,N,0,0,1,0,0,1,va);n(ba,Q,O,ea,qa,xa);u(ba,Q,O,ea,qa,xa,1,0,1,1,0,1,va)}else{da.r=pa.r;da.g=pa.g;da.b=pa.b;j(fa.centroidWorld,fa.normalWorld,da);da.r=wa.r*da.r+Ma.r;da.g=wa.g*da.g+Ma.g;da.b=wa.b*da.b+Ma.b;p(K,L,C,F,O,ea,ha,N);Z.wireframe===true?s(da,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):
t(da)}}else{p(K,L,C,F,O,ea,ha,N);Z.wireframe===true?s(Z.color,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):t(Z.color)}else if(Z instanceof THREE.MeshBasicMaterial){p(K,L,C,F,O,ea,ha,N);Z.wireframe===true?s(Z.color,Z.wireframeLinewidth,Z.wireframeLinecap,Z.wireframeLinejoin):t(Z.color)}else if(Z instanceof THREE.MeshNormalMaterial){da.r=ic(fa.normalWorld.x);da.g=ic(fa.normalWorld.y);da.b=ic(fa.normalWorld.z);p(K,L,C,F,O,ea,ha,N);Z.wireframe===true?s(da,Z.wireframeLinewidth,Z.wireframeLinecap,
Z.wireframeLinejoin):t(da)}else if(Z instanceof THREE.MeshDepthMaterial){oa=l.near;Ga=l.far;Y.r=Y.g=Y.b=1-ec(wa.positionScreen.z,oa,Ga);S.r=S.g=S.b=1-ec(Ma.positionScreen.z,oa,Ga);R.r=R.g=R.b=1-ec(pb.positionScreen.z,oa,Ga);ia.r=ia.g=ia.b=1-ec(tb.positionScreen.z,oa,Ga);va=Rb(Y,S,R,ia);n(K,L,C,F,ha,N);u(K,L,C,F,ha,N,0,0,1,0,0,1,va);n(ba,Q,O,ea,qa,xa);u(ba,Q,O,ea,qa,xa,1,0,1,1,0,1,va)}}}}Ca.addRectangle(za)}}r.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,f={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)f[c]=d[c]}return f},clone:function(a){var b,c,d,f={};for(b in a){f[b]={};for(c in a[b]){d=a[b][c];f[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d}}return f}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var f in d.attributes){var e=d.attributes[f];if(!e.__webglInitialized||e.createUniqueBuffers){e.__webglInitialized=true;var g=1;e.type==="v2"?g=2:e.type==="v3"?g=3:e.type==="v4"?g=4:e.type==="c"&&(g=3);e.size=g;e.array=new Float32Array(c*g);e.buffer=l.createBuffer();e.buffer.belongsToAttribute=f;e.needsUpdate=true}a.__webglCustomAttributesList.push(e)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?false:a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?true:false}function e(a){var b,
c,d;for(b in a.attributes){d=b==="index"?l.ELEMENT_ARRAY_BUFFER:l.ARRAY_BUFFER;c=a.attributes[b];c.buffer=l.createBuffer();l.bindBuffer(d,c.buffer);l.bufferData(d,c.array,l.STATIC_DRAW)}}function g(a,b,c){var d,f,e,g,h=a.vertices;g=h.length;var i=a.colors,j=i.length,k=a.__vertexArray,m=a.__colorArray,n=a.__sortArray,o=a.verticesNeedUpdate,r=a.colorsNeedUpdate,q=a.__webglCustomAttributesList;if(c.sortParticles){G.copy(gb);G.multiplySelf(c.matrixWorld);for(d=0;d<g;d++){f=h[d];aa.copy(f);G.multiplyVector3(aa);
n[d]=[aa.z,d]}n.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++){f=h[n[d][1]];e=d*3;k[e]=f.x;k[e+1]=f.y;k[e+2]=f.z}for(d=0;d<j;d++){e=d*3;f=i[n[d][1]];m[e]=f.r;m[e+1]=f.g;m[e+2]=f.b}if(q){i=0;for(j=q.length;i<j;i++){h=q[i];if(h.boundTo===void 0||h.boundTo==="vertices"){e=0;f=h.value.length;if(h.size===1)for(d=0;d<f;d++){g=n[d][1];h.array[d]=h.value[g]}else if(h.size===2)for(d=0;d<f;d++){g=n[d][1];g=h.value[g];h.array[e]=g.x;h.array[e+1]=g.y;e=e+2}else if(h.size===3)if(h.type==="c")for(d=0;d<
f;d++){g=n[d][1];g=h.value[g];h.array[e]=g.r;h.array[e+1]=g.g;h.array[e+2]=g.b;e=e+3}else for(d=0;d<f;d++){g=n[d][1];g=h.value[g];h.array[e]=g.x;h.array[e+1]=g.y;h.array[e+2]=g.z;e=e+3}else if(h.size===4)for(d=0;d<f;d++){g=n[d][1];g=h.value[g];h.array[e]=g.x;h.array[e+1]=g.y;h.array[e+2]=g.z;h.array[e+3]=g.w;e=e+4}}}}}else{if(o)for(d=0;d<g;d++){f=h[d];e=d*3;k[e]=f.x;k[e+1]=f.y;k[e+2]=f.z}if(r)for(d=0;d<j;d++){f=i[d];e=d*3;m[e]=f.r;m[e+1]=f.g;m[e+2]=f.b}if(q){i=0;for(j=q.length;i<j;i++){h=q[i];if(h.needsUpdate&&
(h.boundTo===void 0||h.boundTo==="vertices")){f=h.value.length;e=0;if(h.size===1)for(d=0;d<f;d++)h.array[d]=h.value[d];else if(h.size===2)for(d=0;d<f;d++){g=h.value[d];h.array[e]=g.x;h.array[e+1]=g.y;e=e+2}else if(h.size===3)if(h.type==="c")for(d=0;d<f;d++){g=h.value[d];h.array[e]=g.r;h.array[e+1]=g.g;h.array[e+2]=g.b;e=e+3}else for(d=0;d<f;d++){g=h.value[d];h.array[e]=g.x;h.array[e+1]=g.y;h.array[e+2]=g.z;e=e+3}else if(h.size===4)for(d=0;d<f;d++){g=h.value[d];h.array[e]=g.x;h.array[e+1]=g.y;h.array[e+
2]=g.z;h.array[e+3]=g.w;e=e+4}}}}}if(o||c.sortParticles){l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,k,b)}if(r||c.sortParticles){l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,m,b)}if(q){i=0;for(j=q.length;i<j;i++){h=q[i];if(h.needsUpdate||c.sortParticles){l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.bufferData(l.ARRAY_BUFFER,h.array,b)}}}}function h(a,b,c){var d=a.attributes,f=d.index,e=d.position,g=d.normal,h=d.uv,i=d.color,d=d.tangent;
if(a.elementsNeedUpdate&&f!==void 0){l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,f.buffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,f.array,b)}if(a.verticesNeedUpdate&&e!==void 0){l.bindBuffer(l.ARRAY_BUFFER,e.buffer);l.bufferData(l.ARRAY_BUFFER,e.array,b)}if(a.normalsNeedUpdate&&g!==void 0){l.bindBuffer(l.ARRAY_BUFFER,g.buffer);l.bufferData(l.ARRAY_BUFFER,g.array,b)}if(a.uvsNeedUpdate&&h!==void 0){l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.bufferData(l.ARRAY_BUFFER,h.array,b)}if(a.colorsNeedUpdate&&i!==void 0){l.bindBuffer(l.ARRAY_BUFFER,
i.buffer);l.bufferData(l.ARRAY_BUFFER,i.array,b)}if(a.tangentsNeedUpdate&&d!==void 0){l.bindBuffer(l.ARRAY_BUFFER,d.buffer);l.bufferData(l.ARRAY_BUFFER,d.array,b)}if(c)for(var j in a.attributes)delete a.attributes[j].array}function i(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function j(a,b,c){if(a.length)for(var d=0,f=a.length;d<f;d++){ia=da=null;S=R=Ga=oa=Ha=Ba=va=-1;ob=true;a[d].render(b,c,la,Da);ia=da=null;S=R=Ga=oa=Ha=Ba=va=-1;ob=true}}function n(a,b,c,d,f,e,g,h){var l,i,j,k;if(b){i=
a.length-1;k=b=-1}else{i=0;b=a.length;k=1}for(var m=i;m!==b;m=m+k){l=a[m];if(l.render){i=l.object;j=l.buffer;if(h)l=h;else{l=l[c];if(!l)continue;g&&Q.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst);Q.setDepthTest(l.depthTest);Q.setDepthWrite(l.depthWrite);x(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}Q.setMaterialFaces(l);j instanceof THREE.BufferGeometry?Q.renderBufferDirect(d,f,e,l,j,i):Q.renderBuffer(d,f,e,l,j,i)}}}function m(a,b,c,d,f,e,g){for(var h,l,i=0,j=a.length;i<
j;i++){h=a[i];l=h.object;if(l.visible){if(g)h=g;else{h=h[b];if(!h)continue;e&&Q.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);Q.setDepthTest(h.depthTest);Q.setDepthWrite(h.depthWrite);x(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Q.renderImmediateObject(c,d,f,h,l)}}}function q(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function o(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return true;return false}function r(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
false}function p(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function t(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function u(a,b,c,d,f){sa=0;if(d.needsUpdate){d.program&&Q.deallocateMaterial(d);Q.initMaterial(d,b,c,f);d.needsUpdate=false}if(d.morphTargets&&!f.__webglMorphTargetInfluences)f.__webglMorphTargetInfluences=new Float32Array(Q.maxMorphTargets);var e=false,g=d.program,h=g.uniforms,i=d.uniforms;if(g!==da){l.useProgram(g);da=g;e=true}if(d.id!==S){S=d.id;
e=true}if(e||a!==ia){l.uniformMatrix4fv(h.projectionMatrix,false,a._projectionMatrixArray);a!==ia&&(ia=a)}if(d.skinning)if(vb&&f.useVertexTexture){if(h.boneTexture!==null){var j=w();l.uniform1i(h.boneTexture,j);Q.setTexture(f.boneTexture,j)}}else h.boneGlobalMatrices!==null&&l.uniformMatrix4fv(h.boneGlobalMatrices,false,f.boneMatrices);if(e){if(c&&d.fog){i.fogColor.value=c.color;if(c instanceof THREE.Fog){i.fogNear.value=c.near;i.fogFar.value=c.far}else if(c instanceof THREE.FogExp2)i.fogDensity.value=
c.density}if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(ob){for(var k=0,m=0,n=0,G,o,r,q,p=dc,aa=p.directional.colors,s=p.directional.positions,t=p.point.colors,u=p.point.positions,x=p.point.distances,z=p.spot.colors,E=p.spot.positions,C=p.spot.distances,F=p.spot.directions,D=p.spot.angles,I=p.spot.exponents,N=p.hemi.skyColors,lb=p.hemi.groundColors,L=p.hemi.positions,K=0,ba=0,O=0,Y=0,c=G=r=r=o=0,e=b.length;c<e;c++){j=b[c];if(!j.onlyShadow&&j.visible){G=
j.color;q=j.intensity;o=j.distance;if(j instanceof THREE.AmbientLight)if(Q.gammaInput){k=k+G.r*G.r;m=m+G.g*G.g;n=n+G.b*G.b}else{k=k+G.r;m=m+G.g;n=n+G.b}else if(j instanceof THREE.DirectionalLight){o=K*3;Q.gammaInput?B(aa,o,G,q*q):v(aa,o,G,q);Ya.copy(j.matrixWorld.getPosition());Ya.subSelf(j.target.matrixWorld.getPosition());Ya.normalize();s[o]=Ya.x;s[o+1]=Ya.y;s[o+2]=Ya.z;K=K+1}else if(j instanceof THREE.PointLight){r=ba*3;Q.gammaInput?B(t,r,G,q*q):v(t,r,G,q);q=j.matrixWorld.getPosition();u[r]=q.x;
u[r+1]=q.y;u[r+2]=q.z;x[ba]=o;ba=ba+1}else if(j instanceof THREE.SpotLight){r=O*3;Q.gammaInput?B(z,r,G,q*q):v(z,r,G,q);q=j.matrixWorld.getPosition();E[r]=q.x;E[r+1]=q.y;E[r+2]=q.z;C[O]=o;Ya.copy(q);Ya.subSelf(j.target.matrixWorld.getPosition());Ya.normalize();F[r]=Ya.x;F[r+1]=Ya.y;F[r+2]=Ya.z;D[O]=Math.cos(j.angle);I[O]=j.exponent;O=O+1}else if(j instanceof THREE.HemisphereLight){o=j.color;r=j.groundColor;G=Y*3;if(Q.gammaInput){q=q*q;B(N,G,o,q);B(lb,G,r,q)}else{v(N,G,o,q);v(lb,G,r,q)}q=j.matrixWorld.getPosition();
L[G]=q.x;L[G+1]=q.y;L[G+2]=q.z;Y=Y+1}}}c=K*3;for(e=aa.length;c<e;c++)aa[c]=0;c=ba*3;for(e=t.length;c<e;c++)t[c]=0;c=O*3;for(e=z.length;c<e;c++)z[c]=0;c=Y*3;for(e=N.length;c<e;c++)N[c]=0;c=Y*3;for(e=lb.length;c<e;c++)lb[c]=0;p.directional.length=K;p.point.length=ba;p.spot.length=O;p.hemi.length=Y;p.ambient[0]=k;p.ambient[1]=m;p.ambient[2]=n;ob=false}c=dc;i.ambientLightColor.value=c.ambient;i.directionalLightColor.value=c.directional.colors;i.directionalLightDirection.value=c.directional.positions;
i.pointLightColor.value=c.point.colors;i.pointLightPosition.value=c.point.positions;i.pointLightDistance.value=c.point.distances;i.spotLightColor.value=c.spot.colors;i.spotLightPosition.value=c.spot.positions;i.spotLightDistance.value=c.spot.distances;i.spotLightDirection.value=c.spot.directions;i.spotLightAngle.value=c.spot.angles;i.spotLightExponent.value=c.spot.exponents;i.hemisphereLightSkyColor.value=c.hemi.skyColors;i.hemisphereLightGroundColor.value=c.hemi.groundColors;i.hemisphereLightPosition.value=
c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){i.opacity.value=d.opacity;Q.gammaInput?i.diffuse.value.copyGammaToLinear(d.color):i.diffuse.value=d.color;i.map.value=d.map;i.lightMap.value=d.lightMap;i.specularMap.value=d.specularMap;if(d.bumpMap){i.bumpMap.value=d.bumpMap;i.bumpScale.value=d.bumpScale}if(d.normalMap){i.normalMap.value=d.normalMap;i.normalScale.value.copy(d.normalScale)}var R;if(d.map)R=d.map;
else if(d.specularMap)R=d.specularMap;else if(d.normalMap)R=d.normalMap;else if(d.bumpMap)R=d.bumpMap;if(R!==void 0){c=R.offset;R=R.repeat;i.offsetRepeat.value.set(c.x,c.y,R.x,R.y)}i.envMap.value=d.envMap;i.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;i.reflectivity.value=d.reflectivity;i.refractionRatio.value=d.refractionRatio;i.combine.value=d.combine;i.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}if(d instanceof THREE.LineBasicMaterial){i.diffuse.value=
d.color;i.opacity.value=d.opacity}else if(d instanceof THREE.ParticleBasicMaterial){i.psColor.value=d.color;i.opacity.value=d.opacity;i.size.value=d.size;i.scale.value=P.height/2;i.map.value=d.map}else if(d instanceof THREE.MeshPhongMaterial){i.shininess.value=d.shininess;if(Q.gammaInput){i.ambient.value.copyGammaToLinear(d.ambient);i.emissive.value.copyGammaToLinear(d.emissive);i.specular.value.copyGammaToLinear(d.specular)}else{i.ambient.value=d.ambient;i.emissive.value=d.emissive;i.specular.value=
d.specular}d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)}else if(d instanceof THREE.MeshLambertMaterial){if(Q.gammaInput){i.ambient.value.copyGammaToLinear(d.ambient);i.emissive.value.copyGammaToLinear(d.emissive)}else{i.ambient.value=d.ambient;i.emissive.value=d.emissive}d.wrapAround&&i.wrapRGB.value.copy(d.wrapRGB)}else if(d instanceof THREE.MeshDepthMaterial){i.mNear.value=a.near;i.mFar.value=a.far;i.opacity.value=d.opacity}else if(d instanceof THREE.MeshNormalMaterial)i.opacity.value=d.opacity;
if(f.receiveShadow&&!d._shadowPass&&i.shadowMatrix){c=R=0;for(e=b.length;c<e;c++){j=b[c];if(j.castShadow&&(j instanceof THREE.SpotLight||j instanceof THREE.DirectionalLight&&!j.shadowCascade)){i.shadowMap.value[R]=j.shadowMap;i.shadowMapSize.value[R]=j.shadowMapSize;i.shadowMatrix.value[R]=j.shadowMatrix;i.shadowDarkness.value[R]=j.shadowDarkness;i.shadowBias.value[R]=j.shadowBias;R++}}}b=d.uniformsList;i=0;for(R=b.length;i<R;i++)if(e=g.uniforms[b[i][1]]){c=b[i][0];k=c.type;j=c.value;if(k==="i")l.uniform1i(e,
j);else if(k==="f")l.uniform1f(e,j);else if(k==="v2")l.uniform2f(e,j.x,j.y);else if(k==="v3")l.uniform3f(e,j.x,j.y,j.z);else if(k==="v4")l.uniform4f(e,j.x,j.y,j.z,j.w);else if(k==="c")l.uniform3f(e,j.r,j.g,j.b);else if(k==="iv1")l.uniform1iv(e,j);else if(k==="iv")l.uniform3iv(e,j);else if(k==="fv1")l.uniform1fv(e,j);else if(k==="fv")l.uniform3fv(e,j);else if(k==="v2v"){if(c._array===void 0)c._array=new Float32Array(2*j.length);k=0;for(m=j.length;k<m;k++){n=k*2;c._array[n]=j[k].x;c._array[n+1]=j[k].y}l.uniform2fv(e,
c._array)}else if(k==="v3v"){if(c._array===void 0)c._array=new Float32Array(3*j.length);k=0;for(m=j.length;k<m;k++){n=k*3;c._array[n]=j[k].x;c._array[n+1]=j[k].y;c._array[n+2]=j[k].z}l.uniform3fv(e,c._array)}else if(k==="v4v"){if(c._array===void 0)c._array=new Float32Array(4*j.length);k=0;for(m=j.length;k<m;k++){n=k*4;c._array[n]=j[k].x;c._array[n+1]=j[k].y;c._array[n+2]=j[k].z;c._array[n+3]=j[k].w}l.uniform4fv(e,c._array)}else if(k==="m4"){if(c._array===void 0)c._array=new Float32Array(16);j.flattenToArray(c._array);
l.uniformMatrix4fv(e,false,c._array)}else if(k==="m4v"){if(c._array===void 0)c._array=new Float32Array(16*j.length);k=0;for(m=j.length;k<m;k++)j[k].flattenToArrayOffset(c._array,k*16);l.uniformMatrix4fv(e,false,c._array)}else if(k==="t"){n=j;j=w();l.uniform1i(e,j);if(n)if(n.image instanceof Array&&n.image.length===6){c=n;e=j;if(c.image.length===6)if(c.needsUpdate){if(!c.image.__webglTextureCube)c.image.__webglTextureCube=l.createTexture();l.activeTexture(l.TEXTURE0+e);l.bindTexture(l.TEXTURE_CUBE_MAP,
c.image.__webglTextureCube);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,c.flipY);e=c instanceof THREE.CompressedTexture;j=[];for(k=0;k<6;k++)if(Q.autoScaleCubemaps&&!e){m=j;n=k;p=c.image[k];s=Bc;if(!(p.width<=s&&p.height<=s)){t=Math.max(p.width,p.height);aa=Math.floor(p.width*s/t);s=Math.floor(p.height*s/t);t=document.createElement("canvas");t.width=aa;t.height=s;t.getContext("2d").drawImage(p,0,0,p.width,p.height,0,0,aa,s);p=t}m[n]=p}else j[k]=c.image[k];k=j[0];m=(k.width&k.width-1)===0&&(k.height&k.height-
1)===0;n=J(c.format);p=J(c.type);M(l.TEXTURE_CUBE_MAP,c,m);for(k=0;k<6;k++)if(e){s=j[k].mipmaps;t=0;for(u=s.length;t<u;t++){aa=s[t];l.compressedTexImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+k,t,n,aa.width,aa.height,0,aa.data)}}else l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+k,0,n,n,p,j[k]);c.generateMipmaps&&m&&l.generateMipmap(l.TEXTURE_CUBE_MAP);c.needsUpdate=false;if(c.onUpdate)c.onUpdate()}else{l.activeTexture(l.TEXTURE0+e);l.bindTexture(l.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}}else if(n instanceof
THREE.WebGLRenderTargetCube){c=n;l.activeTexture(l.TEXTURE0+j);l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture)}else Q.setTexture(n,j)}else if(k==="tv"){if(c._array===void 0)c._array=[];k=0;for(m=c.value.length;k<m;k++)c._array[k]=w();l.uniform1iv(e,c._array);k=0;for(m=c.value.length;k<m;k++){n=c.value[k];j=c._array[k];n&&Q.setTexture(n,j)}}}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&h.cameraPosition!==null){b=a.matrixWorld.getPosition();l.uniform3f(h.cameraPosition,
b.x,b.y,b.z)}(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&h.viewMatrix!==null&&l.uniformMatrix4fv(h.viewMatrix,false,a._viewMatrixArray)}l.uniformMatrix4fv(h.modelViewMatrix,false,f._modelViewMatrix.elements);h.normalMatrix&&l.uniformMatrix3fv(h.normalMatrix,false,f._normalMatrix.elements);h.modelMatrix!==null&&l.uniformMatrix4fv(h.modelMatrix,false,f.matrixWorld.elements);return g}function w(){var a=sa;a>=hb&&console.warn("Trying to use "+
a+" texture units while this GPU supports only "+hb);sa=sa+1;return a}function s(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function B(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function v(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function x(a,b,c){if(kb!==a){a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL);kb=a}if(a&&(fb!==b||db!==c)){l.polygonOffset(b,c);fb=b;
db=c}}function E(a){for(var a=a.split("\n"),b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function z(a,b){var c;a==="fragment"?c=l.createShader(l.FRAGMENT_SHADER):a==="vertex"&&(c=l.createShader(l.VERTEX_SHADER));l.shaderSource(c,b);l.compileShader(c);if(!l.getShaderParameter(c,l.COMPILE_STATUS)){console.error(l.getShaderInfoLog(c));console.error(E(b));return null}return c}function M(a,b,c){if(c){l.texParameteri(a,l.TEXTURE_WRAP_S,J(b.wrapS));l.texParameteri(a,l.TEXTURE_WRAP_T,J(b.wrapT));
l.texParameteri(a,l.TEXTURE_MAG_FILTER,J(b.magFilter));l.texParameteri(a,l.TEXTURE_MIN_FILTER,J(b.minFilter))}else{l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE);l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE);l.texParameteri(a,l.TEXTURE_MAG_FILTER,I(b.magFilter));l.texParameteri(a,l.TEXTURE_MIN_FILTER,I(b.minFilter))}if(lb&&b.type!==THREE.FloatType&&(b.anisotropy>1||b.__oldAnisotropy)){l.texParameterf(a,lb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Sb));b.__oldAnisotropy=b.anisotropy}}
function D(a,b){l.bindRenderbuffer(l.RENDERBUFFER,a);if(b.depthBuffer&&!b.stencilBuffer){l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,b.width,b.height);l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)}else if(b.depthBuffer&&b.stencilBuffer){l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,b.width,b.height);l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)}else l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,b.width,b.height)}
function I(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?l.NEAREST:l.LINEAR}function J(a){if(a===THREE.RepeatWrapping)return l.REPEAT;if(a===THREE.ClampToEdgeWrapping)return l.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return l.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return l.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return l.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return l.NEAREST_MIPMAP_LINEAR;if(a===
THREE.LinearFilter)return l.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return l.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return l.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return l.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return l.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return l.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return l.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return l.BYTE;if(a===THREE.ShortType)return l.SHORT;if(a===
THREE.UnsignedShortType)return l.UNSIGNED_SHORT;if(a===THREE.IntType)return l.INT;if(a===THREE.UnsignedIntType)return l.UNSIGNED_INT;if(a===THREE.FloatType)return l.FLOAT;if(a===THREE.AlphaFormat)return l.ALPHA;if(a===THREE.RGBFormat)return l.RGB;if(a===THREE.RGBAFormat)return l.RGBA;if(a===THREE.LuminanceFormat)return l.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return l.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return l.FUNC_ADD;if(a===THREE.SubtractEquation)return l.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return l.FUNC_REVERSE_SUBTRACT;
if(a===THREE.ZeroFactor)return l.ZERO;if(a===THREE.OneFactor)return l.ONE;if(a===THREE.SrcColorFactor)return l.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return l.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return l.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return l.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return l.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return l.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return l.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return l.ONE_MINUS_DST_COLOR;
if(a===THREE.SrcAlphaSaturateFactor)return l.SRC_ALPHA_SATURATE;if(mb!==void 0){if(a===THREE.RGB_S3TC_DXT1_Format)return mb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return mb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return mb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return mb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},P=a.canvas!==void 0?a.canvas:document.createElement("canvas"),
K=a.precision!==void 0?a.precision:"highp",L=a.alpha!==void 0?a.alpha:true,C=a.premultipliedAlpha!==void 0?a.premultipliedAlpha:true,F=a.antialias!==void 0?a.antialias:false,O=a.stencil!==void 0?a.stencil:true,ea=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:false,ha=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),N=a.clearAlpha!==void 0?a.clearAlpha:0,ba=a.maxLights!==void 0?a.maxLights:4;this.domElement=P;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=
this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=true;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=false;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=true;this.shadowMapCascade=this.shadowMapDebug=false;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=true;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,
vertices:0,faces:0,points:0}};var Q=this,qa=[],xa=0,da=null,Y=null,S=-1,R=null,ia=null,na=0,sa=0,oa=-1,Ga=-1,va=-1,Qa=-1,ja=-1,Xa=-1,Ba=-1,Ha=-1,kb=null,fb=null,db=null,Ca=null,za=0,eb=0,pa=0,Ta=0,la=0,Da=0,$a=new THREE.Frustum,gb=new THREE.Matrix4,G=new THREE.Matrix4,aa=new THREE.Vector4,Ya=new THREE.Vector3,ob=true,dc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],
angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},l,lb,mb;try{if(!(l=P.getContext("experimental-webgl",{alpha:L,premultipliedAlpha:C,antialias:F,stencil:O,preserveDrawingBuffer:ea})))throw"Error creating WebGL context.";}catch(hc){console.error(hc)}a=l.getExtension("OES_texture_float");L=l.getExtension("OES_standard_derivatives");lb=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
mb=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");L||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");lb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");mb||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");l.clearColor(0,0,0,1);l.clearDepth(1);
l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor(ha.r,ha.g,ha.b,N);this.context=l;var hb=l.getParameter(l.MAX_TEXTURE_IMAGE_UNITS),L=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS);l.getParameter(l.MAX_TEXTURE_SIZE);var Bc=l.getParameter(l.MAX_CUBE_MAP_TEXTURE_SIZE),Sb=lb?l.getParameter(lb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):
0,pc=L>0,vb=pc&&a;mb&&l.getParameter(l.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return l};this.supportsVertexTextures=function(){return pc};this.getMaxAnisotropy=function(){return Sb};this.setSize=function(a,b){P.width=a;P.height=b;this.setViewport(0,0,P.width,P.height)};this.setViewport=function(a,b,c,d){za=a!==void 0?a:0;eb=b!==void 0?b:0;pa=c!==void 0?c:P.width;Ta=d!==void 0?d:P.height;l.viewport(za,eb,pa,Ta)};this.setScissor=function(a,b,c,d){l.scissor(a,b,c,d)};this.enableScissorTest=
function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ha.setHex(a);N=b;l.clearColor(ha.r,ha.g,ha.b,N)};this.setClearColor=function(a,b){ha.copy(a);N=b;l.clearColor(ha.r,ha.g,ha.b,N)};this.getClearColor=function(){return ha};this.getClearAlpha=function(){return N};this.clear=function(a,b,c){var d=0;if(a===void 0||a)d=d|l.COLOR_BUFFER_BIT;if(b===void 0||b)d=d|l.DEPTH_BUFFER_BIT;if(c===void 0||c)d=d|l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,
b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit){a.__webglInit=false;delete a._modelViewMatrix;delete a._normalMatrix;delete a._normalMatrixArray;delete a._modelViewMatrixArray;delete a._modelMatrixArray;if(a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];
l.deleteBuffer(c.__webglVertexBuffer);l.deleteBuffer(c.__webglNormalBuffer);l.deleteBuffer(c.__webglTangentBuffer);l.deleteBuffer(c.__webglColorBuffer);l.deleteBuffer(c.__webglUVBuffer);l.deleteBuffer(c.__webglUV2Buffer);l.deleteBuffer(c.__webglSkinIndicesBuffer);l.deleteBuffer(c.__webglSkinWeightsBuffer);l.deleteBuffer(c.__webglFaceBuffer);l.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=0;for(e=c.numMorphTargets;d<e;d++)l.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=
0;for(e=c.numMorphNormals;d<e;d++)l.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList){d=void 0;for(d in c.__webglCustomAttributesList)l.deleteBuffer(c.__webglCustomAttributesList[d].buffer)}Q.info.memory.geometries--}else if(a instanceof THREE.Ribbon){a=a.geometry;l.deleteBuffer(a.__webglVertexBuffer);l.deleteBuffer(a.__webglColorBuffer);Q.info.memory.geometries--}else if(a instanceof THREE.Line){a=a.geometry;l.deleteBuffer(a.__webglVertexBuffer);l.deleteBuffer(a.__webglColorBuffer);
Q.info.memory.geometries--}else if(a instanceof THREE.ParticleSystem){a=a.geometry;l.deleteBuffer(a.__webglVertexBuffer);l.deleteBuffer(a.__webglColorBuffer);Q.info.memory.geometries--}}};this.deallocateTexture=function(a){if(a.__webglInit){a.__webglInit=false;l.deleteTexture(a.__webglTexture);Q.info.memory.textures--}};this.deallocateRenderTarget=function(a){if(a&&a.__webglTexture){l.deleteTexture(a.__webglTexture);if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;b<6;b++){l.deleteFramebuffer(a.__webglFramebuffer[b]);
l.deleteRenderbuffer(a.__webglRenderbuffer[b])}else{l.deleteFramebuffer(a.__webglFramebuffer);l.deleteRenderbuffer(a.__webglRenderbuffer)}}};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=false,a=0;for(c=qa.length;a<c;a++){d=qa[a];if(d.program===b){d.usedTimes--;d.usedTimes===0&&(e=true);break}}if(e){e=[];a=0;for(c=qa.length;a<c;a++){d=qa[a];d.program!==b&&e.push(d)}qa=e;l.deleteProgram(b);Q.info.memory.programs--}}};this.updateShadowMap=function(a,b){da=null;
S=R=Ha=Ba=va=-1;ob=true;Ga=oa=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){if(a.hasPositions&&!a.__webglVertexBuffer)a.__webglVertexBuffer=l.createBuffer();if(a.hasNormals&&!a.__webglNormalBuffer)a.__webglNormalBuffer=l.createBuffer();if(a.hasUvs&&!a.__webglUvBuffer)a.__webglUvBuffer=l.createBuffer();if(a.hasColors&&!a.__webglColorBuffer)a.__webglColorBuffer=l.createBuffer();if(a.hasPositions){l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,
a.positionArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.position);l.vertexAttribPointer(b.attributes.position,3,l.FLOAT,false,0,0)}if(a.hasNormals){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,k,m,n,G,o=a.count*3;for(G=0;G<o;G=G+9){n=a.normalArray;d=n[G];e=n[G+1];f=n[G+2];g=n[G+3];i=n[G+4];k=n[G+5];h=n[G+6];j=n[G+7];m=n[G+8];d=(d+g+h)/3;e=(e+i+j)/3;f=(f+k+m)/3;n[G]=d;n[G+1]=e;n[G+2]=f;n[G+3]=d;n[G+4]=e;n[G+5]=f;n[G+6]=d;n[G+
7]=e;n[G+8]=f}}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.normal);l.vertexAttribPointer(b.attributes.normal,3,l.FLOAT,false,0,0)}if(a.hasUvs&&c.map){l.bindBuffer(l.ARRAY_BUFFER,a.__webglUvBuffer);l.bufferData(l.ARRAY_BUFFER,a.uvArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.uv);l.vertexAttribPointer(b.attributes.uv,2,l.FLOAT,false,0,0)}if(a.hasColors&&c.vertexColors!==THREE.NoColors){l.bindBuffer(l.ARRAY_BUFFER,a.__webglColorBuffer);
l.bufferData(l.ARRAY_BUFFER,a.colorArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(b.attributes.color);l.vertexAttribPointer(b.attributes.color,3,l.FLOAT,false,0,0)}l.drawArrays(l.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==false){c=u(a,b,c,d,f);a=c.attributes;b=false;d=e.id*16777215+c.id*2+(d.wireframe?1:0);if(d!==R){R=d;b=true}if(f instanceof THREE.Mesh){f=e.offsets;f.length>1&&(b=true);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,
i=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.position,i,l.FLOAT,false,0,g*i*4);h=e.attributes.normal;if(a.normal>=0&&h){i=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.normal,i,l.FLOAT,false,0,g*i*4)}h=e.attributes.uv;if(a.uv>=0&&h)if(h.buffer){i=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.uv,i,l.FLOAT,false,0,g*i*4);l.enableVertexAttribArray(a.uv)}else l.disableVertexAttribArray(a.uv);i=e.attributes.color;if(a.color>=
0&&i){var j=i.itemSize;l.bindBuffer(l.ARRAY_BUFFER,i.buffer);l.vertexAttribPointer(a.color,j,l.FLOAT,false,0,g*j*4)}h=e.attributes.tangent;if(a.tangent>=0&&h){i=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.tangent,i,l.FLOAT,false,0,g*i*4)}l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}l.drawElements(l.TRIANGLES,f[d].count,l.UNSIGNED_SHORT,f[d].start*2);Q.info.render.calls++;Q.info.render.vertices=Q.info.render.vertices+f[d].count;Q.info.render.faces=Q.info.render.faces+
f[d].count/3}}else if(f instanceof THREE.ParticleSystem&&b){h=e.attributes.position;i=h.itemSize;l.bindBuffer(l.ARRAY_BUFFER,h.buffer);l.vertexAttribPointer(a.position,i,l.FLOAT,false,0,0);i=e.attributes.color;if(a.color>=0&&i){j=i.itemSize;l.bindBuffer(l.ARRAY_BUFFER,i.buffer);l.vertexAttribPointer(a.color,j,l.FLOAT,false,0,0)}l.drawArrays(l.POINTS,0,h.numItems/3);Q.info.render.calls++;Q.info.render.points=Q.info.render.points+h.numItems/3}}};this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==
false){var g,h,c=u(a,b,c,d,f),b=c.attributes,a=false,c=e.id*16777215+c.id*2+(d.wireframe?1:0);if(c!==R){R=c;a=true}if(!d.morphTargets&&b.position>=0){if(a){l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer);l.vertexAttribPointer(b.position,3,l.FLOAT,false,0,0)}}else if(f.morphTargetBase){c=d.program.attributes;if(f.morphTargetBase!==-1){l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]);l.vertexAttribPointer(c.position,3,l.FLOAT,false,0,0)}else if(c.position>=0){l.bindBuffer(l.ARRAY_BUFFER,
e.__webglVertexBuffer);l.vertexAttribPointer(c.position,3,l.FLOAT,false,0,0)}if(f.morphTargetForcedOrder.length){var i=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;i<d.numSupportedMorphTargets&&i<h.length;){l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[i]]);l.vertexAttribPointer(c["morphTarget"+i],3,l.FLOAT,false,0,0);if(d.morphNormals){l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[i]]);l.vertexAttribPointer(c["morphNormal"+i],3,l.FLOAT,false,0,0)}f.__webglMorphTargetInfluences[i]=
g[h[i]];i++}}else{h=[];g=f.morphTargetInfluences;var j,m=g.length;for(j=0;j<m;j++){i=g[j];i>0&&h.push([j,i])}if(h.length>d.numSupportedMorphTargets){h.sort(k);h.length=d.numSupportedMorphTargets}else h.length>d.numSupportedMorphNormals?h.sort(k):h.length===0&&h.push([0,0]);for(i=0;i<d.numSupportedMorphTargets;){if(h[i]){j=h[i][0];l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[j]);l.vertexAttribPointer(c["morphTarget"+i],3,l.FLOAT,false,0,0);if(d.morphNormals){l.bindBuffer(l.ARRAY_BUFFER,
e.__webglMorphNormalsBuffers[j]);l.vertexAttribPointer(c["morphNormal"+i],3,l.FLOAT,false,0,0)}f.__webglMorphTargetInfluences[i]=g[j]}else{l.vertexAttribPointer(c["morphTarget"+i],3,l.FLOAT,false,0,0);d.morphNormals&&l.vertexAttribPointer(c["morphNormal"+i],3,l.FLOAT,false,0,0);f.__webglMorphTargetInfluences[i]=0}i++}}d.program.uniforms.morphTargetInfluences!==null&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=
e.__webglCustomAttributesList.length;g<h;g++){c=e.__webglCustomAttributesList[g];if(b[c.buffer.belongsToAttribute]>=0){l.bindBuffer(l.ARRAY_BUFFER,c.buffer);l.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,l.FLOAT,false,0,0)}}}if(b.color>=0){l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer);l.vertexAttribPointer(b.color,3,l.FLOAT,false,0,0)}if(b.normal>=0){l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer);l.vertexAttribPointer(b.normal,3,l.FLOAT,false,0,0)}if(b.tangent>=0){l.bindBuffer(l.ARRAY_BUFFER,
e.__webglTangentBuffer);l.vertexAttribPointer(b.tangent,4,l.FLOAT,false,0,0)}if(b.uv>=0)if(e.__webglUVBuffer){l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer);l.vertexAttribPointer(b.uv,2,l.FLOAT,false,0,0);l.enableVertexAttribArray(b.uv)}else l.disableVertexAttribArray(b.uv);if(b.uv2>=0)if(e.__webglUV2Buffer){l.bindBuffer(l.ARRAY_BUFFER,e.__webglUV2Buffer);l.vertexAttribPointer(b.uv2,2,l.FLOAT,false,0,0);l.enableVertexAttribArray(b.uv2)}else l.disableVertexAttribArray(b.uv2);if(d.skinning&&b.skinIndex>=
0&&b.skinWeight>=0){l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinIndicesBuffer);l.vertexAttribPointer(b.skinIndex,4,l.FLOAT,false,0,0);l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinWeightsBuffer);l.vertexAttribPointer(b.skinWeight,4,l.FLOAT,false,0,0)}}if(f instanceof THREE.Mesh){if(d.wireframe){d=d.wireframeLinewidth;if(d!==Ca){l.lineWidth(d);Ca=d}a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer);l.drawElements(l.LINES,e.__webglLineCount,l.UNSIGNED_SHORT,0)}else{a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,
e.__webglFaceBuffer);l.drawElements(l.TRIANGLES,e.__webglFaceCount,l.UNSIGNED_SHORT,0)}Q.info.render.calls++;Q.info.render.vertices=Q.info.render.vertices+e.__webglFaceCount;Q.info.render.faces=Q.info.render.faces+e.__webglFaceCount/3}else if(f instanceof THREE.Line){f=f.type===THREE.LineStrip?l.LINE_STRIP:l.LINES;d=d.linewidth;if(d!==Ca){l.lineWidth(d);Ca=d}l.drawArrays(f,0,e.__webglLineCount);Q.info.render.calls++}else if(f instanceof THREE.ParticleSystem){l.drawArrays(l.POINTS,0,e.__webglParticleCount);
Q.info.render.calls++;Q.info.render.points=Q.info.render.points+e.__webglParticleCount}else if(f instanceof THREE.Ribbon){l.drawArrays(l.TRIANGLE_STRIP,0,e.__webglVertexCount);Q.info.render.calls++}}};this.render=function(a,b,c,d){if(b instanceof THREE.Camera===false)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,k=a.__lights,G=a.fog;S=-1;ob=true;this.autoUpdateScene&&a.updateMatrixWorld();b.parent===void 0&&b.updateMatrixWorld();if(!b._viewMatrixArray)b._viewMatrixArray=
new Float32Array(16);if(!b._projectionMatrixArray)b._projectionMatrixArray=new Float32Array(16);b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);b.projectionMatrix.flattenToArray(b._projectionMatrixArray);gb.multiply(b.projectionMatrix,b.matrixWorldInverse);$a.setFromMatrix(gb);this.autoUpdateObjects&&this.initWebGLObjects(a);j(this.renderPluginsPre,a,b);Q.info.render.calls=0;Q.info.render.vertices=0;Q.info.render.faces=0;Q.info.render.points=
0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++){f=h[d];g=f.object;f.render=false;if(g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||$a.contains(g))){s(g,b);var o=f,r=o.object,q=o.buffer,p=void 0,p=p=void 0,p=r.material;if(p instanceof THREE.MeshFaceMaterial){p=q.materialIndex;if(p>=0){p=r.geometry.materials[p];if(p.transparent){o.transparent=
p;o.opaque=null}else{o.opaque=p;o.transparent=null}}}else if(p)if(p.transparent){o.transparent=p;o.opaque=null}else{o.opaque=p;o.transparent=null}f.render=true;if(this.sortObjects===true)if(g.renderDepth!==null)f.z=g.renderDepth;else{aa.copy(g.matrixWorld.getPosition());gb.multiplyVector3(aa);f.z=aa.z}}}this.sortObjects&&h.sort(i);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++){f=h[d];g=f.object;if(g.visible){s(g,b);g=f.object.material;if(g.transparent){f.transparent=g;f.opaque=null}else{f.opaque=
g;f.transparent=null}}}if(a.overrideMaterial){d=a.overrideMaterial;this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst);this.setDepthTest(d.depthTest);this.setDepthWrite(d.depthWrite);x(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits);n(a.__webglObjects,false,"",b,k,G,true,d);m(a.__webglObjectsImmediate,"",b,k,G,false,d)}else{this.setBlending(THREE.NormalBlending);n(a.__webglObjects,true,"opaque",b,k,G,false);m(a.__webglObjectsImmediate,"opaque",b,k,G,false);n(a.__webglObjects,
false,"transparent",b,k,G,true);m(a.__webglObjectsImmediate,"transparent",b,k,G,true)}j(this.renderPluginsPost,a,b);if(c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)if(c instanceof THREE.WebGLRenderTargetCube){l.bindTexture(l.TEXTURE_CUBE_MAP,c.__webglTexture);l.generateMipmap(l.TEXTURE_CUBE_MAP);l.bindTexture(l.TEXTURE_CUBE_MAP,null)}else{l.bindTexture(l.TEXTURE_2D,c.__webglTexture);l.generateMipmap(l.TEXTURE_2D);l.bindTexture(l.TEXTURE_2D,null)}this.setDepthTest(true);
this.setDepthWrite(true)}};this.renderImmediateObject=function(a,b,c,d,e){var f=u(a,b,c,d,e);R=-1;Q.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,l,$a):e.render(function(a){Q.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){if(!a.__webglObjects){a.__webglObjects=[];a.__webglObjectsImmediate=[];a.__webglSprites=[];a.__webglFlares=[]}for(;a.__objectsAdded.length;){var i=a.__objectsAdded[0],j=a,k=void 0,m=void 0,n=void 0;if(!i.__webglInit){i.__webglInit=true;
i._modelViewMatrix=new THREE.Matrix4;i._normalMatrix=new THREE.Matrix3;if(i instanceof THREE.Mesh){m=i.geometry;if(m instanceof THREE.Geometry){if(m.geometryGroups===void 0){var G=m,aa=void 0,Ya=void 0,s=void 0,u=void 0,w=void 0,v=void 0,x=void 0,z={},ob=G.morphTargets.length,B=G.morphNormals.length;G.geometryGroups={};aa=0;for(Ya=G.faces.length;aa<Ya;aa++){s=G.faces[aa];u=s.materialIndex;v=u!==void 0?u:-1;z[v]===void 0&&(z[v]={hash:v,counter:0});x=z[v].hash+"_"+z[v].counter;G.geometryGroups[x]===
void 0&&(G.geometryGroups[x]={faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:ob,numMorphNormals:B});w=s instanceof THREE.Face3?3:4;if(G.geometryGroups[x].vertices+w>65535){z[v].counter=z[v].counter+1;x=z[v].hash+"_"+z[v].counter;G.geometryGroups[x]===void 0&&(G.geometryGroups[x]={faces3:[],faces4:[],materialIndex:u,vertices:0,numMorphTargets:ob,numMorphNormals:B})}s instanceof THREE.Face3?G.geometryGroups[x].faces3.push(aa):G.geometryGroups[x].faces4.push(aa);G.geometryGroups[x].vertices=
G.geometryGroups[x].vertices+w}G.geometryGroupsList=[];var E=void 0;for(E in G.geometryGroups){G.geometryGroups[E].id=na++;G.geometryGroupsList.push(G.geometryGroups[E])}}for(k in m.geometryGroups){n=m.geometryGroups[k];if(!n.__webglVertexBuffer){var C=n;C.__webglVertexBuffer=l.createBuffer();C.__webglNormalBuffer=l.createBuffer();C.__webglTangentBuffer=l.createBuffer();C.__webglColorBuffer=l.createBuffer();C.__webglUVBuffer=l.createBuffer();C.__webglUV2Buffer=l.createBuffer();C.__webglSkinIndicesBuffer=
l.createBuffer();C.__webglSkinWeightsBuffer=l.createBuffer();C.__webglFaceBuffer=l.createBuffer();C.__webglLineBuffer=l.createBuffer();var F=void 0,dc=void 0;if(C.numMorphTargets){C.__webglMorphTargetsBuffers=[];F=0;for(dc=C.numMorphTargets;F<dc;F++)C.__webglMorphTargetsBuffers.push(l.createBuffer())}if(C.numMorphNormals){C.__webglMorphNormalsBuffers=[];F=0;for(dc=C.numMorphNormals;F<dc;F++)C.__webglMorphNormalsBuffers.push(l.createBuffer())}Q.info.memory.geometries++;var D=n,J=i,I=J.geometry,N=D.faces3,
lb=D.faces4,K=N.length*3+lb.length*4,L=N.length*1+lb.length*2,M=N.length*3+lb.length*4,S=c(J,D),P=f(S),ba=d(S),R=S.vertexColors?S.vertexColors:false;D.__vertexArray=new Float32Array(K*3);if(ba)D.__normalArray=new Float32Array(K*3);if(I.hasTangents)D.__tangentArray=new Float32Array(K*4);if(R)D.__colorArray=new Float32Array(K*3);if(P){if(I.faceUvs.length>0||I.faceVertexUvs.length>0)D.__uvArray=new Float32Array(K*2);if(I.faceUvs.length>1||I.faceVertexUvs.length>1)D.__uv2Array=new Float32Array(K*2)}if(J.geometry.skinWeights.length&&
J.geometry.skinIndices.length){D.__skinIndexArray=new Float32Array(K*4);D.__skinWeightArray=new Float32Array(K*4)}D.__faceArray=new Uint16Array(L*3);D.__lineArray=new Uint16Array(M*2);var O=void 0,da=void 0;if(D.numMorphTargets){D.__morphTargetsArrays=[];O=0;for(da=D.numMorphTargets;O<da;O++)D.__morphTargetsArrays.push(new Float32Array(K*3))}if(D.numMorphNormals){D.__morphNormalsArrays=[];O=0;for(da=D.numMorphNormals;O<da;O++)D.__morphNormalsArrays.push(new Float32Array(K*3))}D.__webglFaceCount=L*
3;D.__webglLineCount=M*2;if(S.attributes){if(D.__webglCustomAttributesList===void 0)D.__webglCustomAttributesList=[];var Y=void 0;for(Y in S.attributes){var hc=S.attributes[Y],hb={},ha;for(ha in hc)hb[ha]=hc[ha];if(!hb.__webglInitialized||hb.createUniqueBuffers){hb.__webglInitialized=true;var mb=1;hb.type==="v2"?mb=2:hb.type==="v3"?mb=3:hb.type==="v4"?mb=4:hb.type==="c"&&(mb=3);hb.size=mb;hb.array=new Float32Array(K*mb);hb.buffer=l.createBuffer();hb.buffer.belongsToAttribute=Y;hc.needsUpdate=true;
hb.__original=hc}D.__webglCustomAttributesList.push(hb)}}D.__inittedArrays=true;m.verticesNeedUpdate=true;m.morphTargetsNeedUpdate=true;m.elementsNeedUpdate=true;m.uvsNeedUpdate=true;m.normalsNeedUpdate=true;m.tangentsNeedUpdate=true;m.colorsNeedUpdate=true}}}else m instanceof THREE.BufferGeometry&&e(m)}else if(i instanceof THREE.Ribbon){m=i.geometry;if(!m.__webglVertexBuffer){var ea=m;ea.__webglVertexBuffer=l.createBuffer();ea.__webglColorBuffer=l.createBuffer();Q.info.memory.geometries++;var ia=
m,sa=ia.vertices.length;ia.__vertexArray=new Float32Array(sa*3);ia.__colorArray=new Float32Array(sa*3);ia.__webglVertexCount=sa;m.verticesNeedUpdate=true;m.colorsNeedUpdate=true}}else if(i instanceof THREE.Line){m=i.geometry;if(!m.__webglVertexBuffer){var Bc=m;Bc.__webglVertexBuffer=l.createBuffer();Bc.__webglColorBuffer=l.createBuffer();Q.info.memory.geometries++;var Sb=m,pc=i,oa=Sb.vertices.length;Sb.__vertexArray=new Float32Array(oa*3);Sb.__colorArray=new Float32Array(oa*3);Sb.__webglLineCount=
oa;b(Sb,pc);m.verticesNeedUpdate=true;m.colorsNeedUpdate=true}}else if(i instanceof THREE.ParticleSystem){m=i.geometry;if(!m.__webglVertexBuffer)if(m instanceof THREE.Geometry){var qa=m;qa.__webglVertexBuffer=l.createBuffer();qa.__webglColorBuffer=l.createBuffer();Q.info.memory.geometries++;var vb=m,Ga=i,xa=vb.vertices.length;vb.__vertexArray=new Float32Array(xa*3);vb.__colorArray=new Float32Array(xa*3);vb.__sortArray=[];vb.__webglParticleCount=xa;b(vb,Ga);m.verticesNeedUpdate=true;m.colorsNeedUpdate=
true}else m instanceof THREE.BufferGeometry&&e(m)}}if(!i.__webglActive){if(i instanceof THREE.Mesh){m=i.geometry;if(m instanceof THREE.BufferGeometry)q(j.__webglObjects,m,i);else for(k in m.geometryGroups){n=m.geometryGroups[k];q(j.__webglObjects,n,i)}}else if(i instanceof THREE.Ribbon||i instanceof THREE.Line||i instanceof THREE.ParticleSystem){m=i.geometry;q(j.__webglObjects,m,i)}else i instanceof THREE.ImmediateRenderObject||i.immediateRenderCallback?j.__webglObjectsImmediate.push({object:i,opaque:null,
transparent:null}):i instanceof THREE.Sprite?j.__webglSprites.push(i):i instanceof THREE.LensFlare&&j.__webglFlares.push(i);i.__webglActive=true}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var ja=a.__objectsRemoved[0],va=a;ja instanceof THREE.Mesh||ja instanceof THREE.ParticleSystem||ja instanceof THREE.Ribbon||ja instanceof THREE.Line?p(va.__webglObjects,ja):ja instanceof THREE.Sprite?t(va.__webglSprites,ja):ja instanceof THREE.LensFlare?t(va.__webglFlares,ja):(ja instanceof THREE.ImmediateRenderObject||
ja.immediateRenderCallback)&&p(va.__webglObjectsImmediate,ja);ja.__webglActive=false;a.__objectsRemoved.splice(0,1)}for(var Ba=0,Da=a.__webglObjects.length;Ba<Da;Ba++){var pa=a.__webglObjects[Ba].object,ga=pa.geometry,za=void 0,Ca=void 0,la=void 0;if(pa instanceof THREE.Mesh)if(ga instanceof THREE.BufferGeometry){(ga.verticesNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate)&&h(ga,l.DYNAMIC_DRAW,!ga.dynamic);ga.verticesNeedUpdate=
false;ga.elementsNeedUpdate=false;ga.uvsNeedUpdate=false;ga.normalsNeedUpdate=false;ga.colorsNeedUpdate=false;ga.tangentsNeedUpdate=false}else{for(var Qa=0,Xa=ga.geometryGroupsList.length;Qa<Xa;Qa++){za=ga.geometryGroupsList[Qa];la=c(pa,za);Ca=la.attributes&&o(la);if(ga.verticesNeedUpdate||ga.morphTargetsNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate||Ca){var ra=za,$a=pa,Ha=l.DYNAMIC_DRAW,db=!ga.dynamic,Ta=la;if(ra.__inittedArrays){var gb=
d(Ta),eb=Ta.vertexColors?Ta.vertexColors:false,kb=f(Ta),fb=gb===THREE.SmoothShading,H=void 0,X=void 0,Wb=void 0,T=void 0,jc=void 0,Xb=void 0,ub=void 0,Dc=void 0,Mb=void 0,kc=void 0,lc=void 0,U=void 0,V=void 0,W=void 0,ma=void 0,wb=void 0,xb=void 0,yb=void 0,qc=void 0,zb=void 0,Ab=void 0,Bb=void 0,rc=void 0,Cb=void 0,Db=void 0,Eb=void 0,sc=void 0,Fb=void 0,Gb=void 0,Hb=void 0,tc=void 0,Ib=void 0,Jb=void 0,Kb=void 0,uc=void 0,ya=void 0,Wc=void 0,Yb=void 0,mc=void 0,nc=void 0,Ua=void 0,Xc=void 0,Ra=
void 0,Sa=void 0,Zb=void 0,Nb=void 0,Na=0,Pa=0,Ob=0,Pb=0,rb=0,ab=0,Ea=0,cb=0,Oa=0,ca=0,ka=0,A=0,Aa=void 0,Va=ra.__vertexArray,vc=ra.__uvArray,wc=ra.__uv2Array,sb=ra.__normalArray,Ia=ra.__tangentArray,Wa=ra.__colorArray,Ja=ra.__skinIndexArray,Ka=ra.__skinWeightArray,Pc=ra.__morphTargetsArrays,Qc=ra.__morphNormalsArrays,Rc=ra.__webglCustomAttributesList,y=void 0,Lb=ra.__faceArray,nb=ra.__lineArray,ib=$a.geometry,ed=ib.elementsNeedUpdate,Yc=ib.uvsNeedUpdate,fd=ib.normalsNeedUpdate,gd=ib.tangentsNeedUpdate,
hd=ib.colorsNeedUpdate,id=ib.morphTargetsNeedUpdate,fc=ib.vertices,ta=ra.faces3,ua=ra.faces4,bb=ib.faces,Sc=ib.faceVertexUvs[0],Tc=ib.faceVertexUvs[1],gc=ib.skinIndices,$b=ib.skinWeights,ac=ib.morphTargets,Ec=ib.morphNormals;if(ib.verticesNeedUpdate){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];U=fc[T.a];V=fc[T.b];W=fc[T.c];Va[Pa]=U.x;Va[Pa+1]=U.y;Va[Pa+2]=U.z;Va[Pa+3]=V.x;Va[Pa+4]=V.y;Va[Pa+5]=V.z;Va[Pa+6]=W.x;Va[Pa+7]=W.y;Va[Pa+8]=W.z;Pa=Pa+9}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];U=fc[T.a];V=fc[T.b];
W=fc[T.c];ma=fc[T.d];Va[Pa]=U.x;Va[Pa+1]=U.y;Va[Pa+2]=U.z;Va[Pa+3]=V.x;Va[Pa+4]=V.y;Va[Pa+5]=V.z;Va[Pa+6]=W.x;Va[Pa+7]=W.y;Va[Pa+8]=W.z;Va[Pa+9]=ma.x;Va[Pa+10]=ma.y;Va[Pa+11]=ma.z;Pa=Pa+12}l.bindBuffer(l.ARRAY_BUFFER,ra.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Va,Ha)}if(id){Ua=0;for(Xc=ac.length;Ua<Xc;Ua++){H=ka=0;for(X=ta.length;H<X;H++){Zb=ta[H];T=bb[Zb];U=ac[Ua].vertices[T.a];V=ac[Ua].vertices[T.b];W=ac[Ua].vertices[T.c];Ra=Pc[Ua];Ra[ka]=U.x;Ra[ka+1]=U.y;Ra[ka+2]=U.z;Ra[ka+3]=V.x;Ra[ka+
4]=V.y;Ra[ka+5]=V.z;Ra[ka+6]=W.x;Ra[ka+7]=W.y;Ra[ka+8]=W.z;if(Ta.morphNormals){if(fb){Nb=Ec[Ua].vertexNormals[Zb];zb=Nb.a;Ab=Nb.b;Bb=Nb.c}else Bb=Ab=zb=Ec[Ua].faceNormals[Zb];Sa=Qc[Ua];Sa[ka]=zb.x;Sa[ka+1]=zb.y;Sa[ka+2]=zb.z;Sa[ka+3]=Ab.x;Sa[ka+4]=Ab.y;Sa[ka+5]=Ab.z;Sa[ka+6]=Bb.x;Sa[ka+7]=Bb.y;Sa[ka+8]=Bb.z}ka=ka+9}H=0;for(X=ua.length;H<X;H++){Zb=ua[H];T=bb[Zb];U=ac[Ua].vertices[T.a];V=ac[Ua].vertices[T.b];W=ac[Ua].vertices[T.c];ma=ac[Ua].vertices[T.d];Ra=Pc[Ua];Ra[ka]=U.x;Ra[ka+1]=U.y;Ra[ka+2]=U.z;
Ra[ka+3]=V.x;Ra[ka+4]=V.y;Ra[ka+5]=V.z;Ra[ka+6]=W.x;Ra[ka+7]=W.y;Ra[ka+8]=W.z;Ra[ka+9]=ma.x;Ra[ka+10]=ma.y;Ra[ka+11]=ma.z;if(Ta.morphNormals){if(fb){Nb=Ec[Ua].vertexNormals[Zb];zb=Nb.a;Ab=Nb.b;Bb=Nb.c;rc=Nb.d}else rc=Bb=Ab=zb=Ec[Ua].faceNormals[Zb];Sa=Qc[Ua];Sa[ka]=zb.x;Sa[ka+1]=zb.y;Sa[ka+2]=zb.z;Sa[ka+3]=Ab.x;Sa[ka+4]=Ab.y;Sa[ka+5]=Ab.z;Sa[ka+6]=Bb.x;Sa[ka+7]=Bb.y;Sa[ka+8]=Bb.z;Sa[ka+9]=rc.x;Sa[ka+10]=rc.y;Sa[ka+11]=rc.z}ka=ka+12}l.bindBuffer(l.ARRAY_BUFFER,ra.__webglMorphTargetsBuffers[Ua]);l.bufferData(l.ARRAY_BUFFER,
Pc[Ua],Ha);if(Ta.morphNormals){l.bindBuffer(l.ARRAY_BUFFER,ra.__webglMorphNormalsBuffers[Ua]);l.bufferData(l.ARRAY_BUFFER,Qc[Ua],Ha)}}}if($b.length){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];Fb=$b[T.a];Gb=$b[T.b];Hb=$b[T.c];Ka[ca]=Fb.x;Ka[ca+1]=Fb.y;Ka[ca+2]=Fb.z;Ka[ca+3]=Fb.w;Ka[ca+4]=Gb.x;Ka[ca+5]=Gb.y;Ka[ca+6]=Gb.z;Ka[ca+7]=Gb.w;Ka[ca+8]=Hb.x;Ka[ca+9]=Hb.y;Ka[ca+10]=Hb.z;Ka[ca+11]=Hb.w;Ib=gc[T.a];Jb=gc[T.b];Kb=gc[T.c];Ja[ca]=Ib.x;Ja[ca+1]=Ib.y;Ja[ca+2]=Ib.z;Ja[ca+3]=Ib.w;Ja[ca+4]=Jb.x;Ja[ca+5]=
Jb.y;Ja[ca+6]=Jb.z;Ja[ca+7]=Jb.w;Ja[ca+8]=Kb.x;Ja[ca+9]=Kb.y;Ja[ca+10]=Kb.z;Ja[ca+11]=Kb.w;ca=ca+12}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];Fb=$b[T.a];Gb=$b[T.b];Hb=$b[T.c];tc=$b[T.d];Ka[ca]=Fb.x;Ka[ca+1]=Fb.y;Ka[ca+2]=Fb.z;Ka[ca+3]=Fb.w;Ka[ca+4]=Gb.x;Ka[ca+5]=Gb.y;Ka[ca+6]=Gb.z;Ka[ca+7]=Gb.w;Ka[ca+8]=Hb.x;Ka[ca+9]=Hb.y;Ka[ca+10]=Hb.z;Ka[ca+11]=Hb.w;Ka[ca+12]=tc.x;Ka[ca+13]=tc.y;Ka[ca+14]=tc.z;Ka[ca+15]=tc.w;Ib=gc[T.a];Jb=gc[T.b];Kb=gc[T.c];uc=gc[T.d];Ja[ca]=Ib.x;Ja[ca+1]=Ib.y;Ja[ca+2]=Ib.z;Ja[ca+
3]=Ib.w;Ja[ca+4]=Jb.x;Ja[ca+5]=Jb.y;Ja[ca+6]=Jb.z;Ja[ca+7]=Jb.w;Ja[ca+8]=Kb.x;Ja[ca+9]=Kb.y;Ja[ca+10]=Kb.z;Ja[ca+11]=Kb.w;Ja[ca+12]=uc.x;Ja[ca+13]=uc.y;Ja[ca+14]=uc.z;Ja[ca+15]=uc.w;ca=ca+16}if(ca>0){l.bindBuffer(l.ARRAY_BUFFER,ra.__webglSkinIndicesBuffer);l.bufferData(l.ARRAY_BUFFER,Ja,Ha);l.bindBuffer(l.ARRAY_BUFFER,ra.__webglSkinWeightsBuffer);l.bufferData(l.ARRAY_BUFFER,Ka,Ha)}}if(hd&&eb){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];ub=T.vertexColors;Dc=T.color;if(ub.length===3&&eb===THREE.VertexColors){Cb=
ub[0];Db=ub[1];Eb=ub[2]}else Eb=Db=Cb=Dc;Wa[Oa]=Cb.r;Wa[Oa+1]=Cb.g;Wa[Oa+2]=Cb.b;Wa[Oa+3]=Db.r;Wa[Oa+4]=Db.g;Wa[Oa+5]=Db.b;Wa[Oa+6]=Eb.r;Wa[Oa+7]=Eb.g;Wa[Oa+8]=Eb.b;Oa=Oa+9}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];ub=T.vertexColors;Dc=T.color;if(ub.length===4&&eb===THREE.VertexColors){Cb=ub[0];Db=ub[1];Eb=ub[2];sc=ub[3]}else sc=Eb=Db=Cb=Dc;Wa[Oa]=Cb.r;Wa[Oa+1]=Cb.g;Wa[Oa+2]=Cb.b;Wa[Oa+3]=Db.r;Wa[Oa+4]=Db.g;Wa[Oa+5]=Db.b;Wa[Oa+6]=Eb.r;Wa[Oa+7]=Eb.g;Wa[Oa+8]=Eb.b;Wa[Oa+9]=sc.r;Wa[Oa+10]=sc.g;Wa[Oa+
11]=sc.b;Oa=Oa+12}if(Oa>0){l.bindBuffer(l.ARRAY_BUFFER,ra.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Wa,Ha)}}if(gd&&ib.hasTangents){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];Mb=T.vertexTangents;wb=Mb[0];xb=Mb[1];yb=Mb[2];Ia[Ea]=wb.x;Ia[Ea+1]=wb.y;Ia[Ea+2]=wb.z;Ia[Ea+3]=wb.w;Ia[Ea+4]=xb.x;Ia[Ea+5]=xb.y;Ia[Ea+6]=xb.z;Ia[Ea+7]=xb.w;Ia[Ea+8]=yb.x;Ia[Ea+9]=yb.y;Ia[Ea+10]=yb.z;Ia[Ea+11]=yb.w;Ea=Ea+12}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];Mb=T.vertexTangents;wb=Mb[0];xb=Mb[1];yb=Mb[2];qc=Mb[3];Ia[Ea]=
wb.x;Ia[Ea+1]=wb.y;Ia[Ea+2]=wb.z;Ia[Ea+3]=wb.w;Ia[Ea+4]=xb.x;Ia[Ea+5]=xb.y;Ia[Ea+6]=xb.z;Ia[Ea+7]=xb.w;Ia[Ea+8]=yb.x;Ia[Ea+9]=yb.y;Ia[Ea+10]=yb.z;Ia[Ea+11]=yb.w;Ia[Ea+12]=qc.x;Ia[Ea+13]=qc.y;Ia[Ea+14]=qc.z;Ia[Ea+15]=qc.w;Ea=Ea+16}l.bindBuffer(l.ARRAY_BUFFER,ra.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,Ia,Ha)}if(fd&&gb){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];jc=T.vertexNormals;Xb=T.normal;if(jc.length===3&&fb)for(ya=0;ya<3;ya++){Yb=jc[ya];sb[ab]=Yb.x;sb[ab+1]=Yb.y;sb[ab+2]=Yb.z;ab=ab+3}else for(ya=
0;ya<3;ya++){sb[ab]=Xb.x;sb[ab+1]=Xb.y;sb[ab+2]=Xb.z;ab=ab+3}}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];jc=T.vertexNormals;Xb=T.normal;if(jc.length===4&&fb)for(ya=0;ya<4;ya++){Yb=jc[ya];sb[ab]=Yb.x;sb[ab+1]=Yb.y;sb[ab+2]=Yb.z;ab=ab+3}else for(ya=0;ya<4;ya++){sb[ab]=Xb.x;sb[ab+1]=Xb.y;sb[ab+2]=Xb.z;ab=ab+3}}l.bindBuffer(l.ARRAY_BUFFER,ra.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,sb,Ha)}if(Yc&&Sc&&kb){H=0;for(X=ta.length;H<X;H++){Wb=ta[H];kc=Sc[Wb];if(kc!==void 0)for(ya=0;ya<3;ya++){mc=kc[ya];
vc[Ob]=mc.u;vc[Ob+1]=mc.v;Ob=Ob+2}}H=0;for(X=ua.length;H<X;H++){Wb=ua[H];kc=Sc[Wb];if(kc!==void 0)for(ya=0;ya<4;ya++){mc=kc[ya];vc[Ob]=mc.u;vc[Ob+1]=mc.v;Ob=Ob+2}}if(Ob>0){l.bindBuffer(l.ARRAY_BUFFER,ra.__webglUVBuffer);l.bufferData(l.ARRAY_BUFFER,vc,Ha)}}if(Yc&&Tc&&kb){H=0;for(X=ta.length;H<X;H++){Wb=ta[H];lc=Tc[Wb];if(lc!==void 0)for(ya=0;ya<3;ya++){nc=lc[ya];wc[Pb]=nc.u;wc[Pb+1]=nc.v;Pb=Pb+2}}H=0;for(X=ua.length;H<X;H++){Wb=ua[H];lc=Tc[Wb];if(lc!==void 0)for(ya=0;ya<4;ya++){nc=lc[ya];wc[Pb]=nc.u;
wc[Pb+1]=nc.v;Pb=Pb+2}}if(Pb>0){l.bindBuffer(l.ARRAY_BUFFER,ra.__webglUV2Buffer);l.bufferData(l.ARRAY_BUFFER,wc,Ha)}}if(ed){H=0;for(X=ta.length;H<X;H++){Lb[rb]=Na;Lb[rb+1]=Na+1;Lb[rb+2]=Na+2;rb=rb+3;nb[cb]=Na;nb[cb+1]=Na+1;nb[cb+2]=Na;nb[cb+3]=Na+2;nb[cb+4]=Na+1;nb[cb+5]=Na+2;cb=cb+6;Na=Na+3}H=0;for(X=ua.length;H<X;H++){Lb[rb]=Na;Lb[rb+1]=Na+1;Lb[rb+2]=Na+3;Lb[rb+3]=Na+1;Lb[rb+4]=Na+2;Lb[rb+5]=Na+3;rb=rb+6;nb[cb]=Na;nb[cb+1]=Na+1;nb[cb+2]=Na;nb[cb+3]=Na+3;nb[cb+4]=Na+1;nb[cb+5]=Na+2;nb[cb+6]=Na+2;
nb[cb+7]=Na+3;cb=cb+8;Na=Na+4}l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,ra.__webglFaceBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,Lb,Ha);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,ra.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,nb,Ha)}if(Rc){ya=0;for(Wc=Rc.length;ya<Wc;ya++){y=Rc[ya];if(y.__original.needsUpdate){A=0;if(y.size===1)if(y.boundTo===void 0||y.boundTo==="vertices"){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];y.array[A]=y.value[T.a];y.array[A+1]=y.value[T.b];y.array[A+2]=y.value[T.c];A=A+3}H=
0;for(X=ua.length;H<X;H++){T=bb[ua[H]];y.array[A]=y.value[T.a];y.array[A+1]=y.value[T.b];y.array[A+2]=y.value[T.c];y.array[A+3]=y.value[T.d];A=A+4}}else{if(y.boundTo==="faces"){H=0;for(X=ta.length;H<X;H++){Aa=y.value[ta[H]];y.array[A]=Aa;y.array[A+1]=Aa;y.array[A+2]=Aa;A=A+3}H=0;for(X=ua.length;H<X;H++){Aa=y.value[ua[H]];y.array[A]=Aa;y.array[A+1]=Aa;y.array[A+2]=Aa;y.array[A+3]=Aa;A=A+4}}}else if(y.size===2)if(y.boundTo===void 0||y.boundTo==="vertices"){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];U=
y.value[T.a];V=y.value[T.b];W=y.value[T.c];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=V.x;y.array[A+3]=V.y;y.array[A+4]=W.x;y.array[A+5]=W.y;A=A+6}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];U=y.value[T.a];V=y.value[T.b];W=y.value[T.c];ma=y.value[T.d];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=V.x;y.array[A+3]=V.y;y.array[A+4]=W.x;y.array[A+5]=W.y;y.array[A+6]=ma.x;y.array[A+7]=ma.y;A=A+8}}else{if(y.boundTo==="faces"){H=0;for(X=ta.length;H<X;H++){W=V=U=Aa=y.value[ta[H]];y.array[A]=U.x;y.array[A+
1]=U.y;y.array[A+2]=V.x;y.array[A+3]=V.y;y.array[A+4]=W.x;y.array[A+5]=W.y;A=A+6}H=0;for(X=ua.length;H<X;H++){ma=W=V=U=Aa=y.value[ua[H]];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=V.x;y.array[A+3]=V.y;y.array[A+4]=W.x;y.array[A+5]=W.y;y.array[A+6]=ma.x;y.array[A+7]=ma.y;A=A+8}}}else if(y.size===3){var $;$=y.type==="c"?["r","g","b"]:["x","y","z"];if(y.boundTo===void 0||y.boundTo==="vertices"){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];U=y.value[T.a];V=y.value[T.b];W=y.value[T.c];y.array[A]=U[$[0]];
y.array[A+1]=U[$[1]];y.array[A+2]=U[$[2]];y.array[A+3]=V[$[0]];y.array[A+4]=V[$[1]];y.array[A+5]=V[$[2]];y.array[A+6]=W[$[0]];y.array[A+7]=W[$[1]];y.array[A+8]=W[$[2]];A=A+9}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];U=y.value[T.a];V=y.value[T.b];W=y.value[T.c];ma=y.value[T.d];y.array[A]=U[$[0]];y.array[A+1]=U[$[1]];y.array[A+2]=U[$[2]];y.array[A+3]=V[$[0]];y.array[A+4]=V[$[1]];y.array[A+5]=V[$[2]];y.array[A+6]=W[$[0]];y.array[A+7]=W[$[1]];y.array[A+8]=W[$[2]];y.array[A+9]=ma[$[0]];y.array[A+10]=ma[$[1]];
y.array[A+11]=ma[$[2]];A=A+12}}else if(y.boundTo==="faces"){H=0;for(X=ta.length;H<X;H++){W=V=U=Aa=y.value[ta[H]];y.array[A]=U[$[0]];y.array[A+1]=U[$[1]];y.array[A+2]=U[$[2]];y.array[A+3]=V[$[0]];y.array[A+4]=V[$[1]];y.array[A+5]=V[$[2]];y.array[A+6]=W[$[0]];y.array[A+7]=W[$[1]];y.array[A+8]=W[$[2]];A=A+9}H=0;for(X=ua.length;H<X;H++){ma=W=V=U=Aa=y.value[ua[H]];y.array[A]=U[$[0]];y.array[A+1]=U[$[1]];y.array[A+2]=U[$[2]];y.array[A+3]=V[$[0]];y.array[A+4]=V[$[1]];y.array[A+5]=V[$[2]];y.array[A+6]=W[$[0]];
y.array[A+7]=W[$[1]];y.array[A+8]=W[$[2]];y.array[A+9]=ma[$[0]];y.array[A+10]=ma[$[1]];y.array[A+11]=ma[$[2]];A=A+12}}else if(y.boundTo==="faceVertices"){H=0;for(X=ta.length;H<X;H++){Aa=y.value[ta[H]];U=Aa[0];V=Aa[1];W=Aa[2];y.array[A]=U[$[0]];y.array[A+1]=U[$[1]];y.array[A+2]=U[$[2]];y.array[A+3]=V[$[0]];y.array[A+4]=V[$[1]];y.array[A+5]=V[$[2]];y.array[A+6]=W[$[0]];y.array[A+7]=W[$[1]];y.array[A+8]=W[$[2]];A=A+9}H=0;for(X=ua.length;H<X;H++){Aa=y.value[ua[H]];U=Aa[0];V=Aa[1];W=Aa[2];ma=Aa[3];y.array[A]=
U[$[0]];y.array[A+1]=U[$[1]];y.array[A+2]=U[$[2]];y.array[A+3]=V[$[0]];y.array[A+4]=V[$[1]];y.array[A+5]=V[$[2]];y.array[A+6]=W[$[0]];y.array[A+7]=W[$[1]];y.array[A+8]=W[$[2]];y.array[A+9]=ma[$[0]];y.array[A+10]=ma[$[1]];y.array[A+11]=ma[$[2]];A=A+12}}}else if(y.size===4)if(y.boundTo===void 0||y.boundTo==="vertices"){H=0;for(X=ta.length;H<X;H++){T=bb[ta[H]];U=y.value[T.a];V=y.value[T.b];W=y.value[T.c];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=U.z;y.array[A+3]=U.w;y.array[A+4]=V.x;y.array[A+5]=
V.y;y.array[A+6]=V.z;y.array[A+7]=V.w;y.array[A+8]=W.x;y.array[A+9]=W.y;y.array[A+10]=W.z;y.array[A+11]=W.w;A=A+12}H=0;for(X=ua.length;H<X;H++){T=bb[ua[H]];U=y.value[T.a];V=y.value[T.b];W=y.value[T.c];ma=y.value[T.d];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=U.z;y.array[A+3]=U.w;y.array[A+4]=V.x;y.array[A+5]=V.y;y.array[A+6]=V.z;y.array[A+7]=V.w;y.array[A+8]=W.x;y.array[A+9]=W.y;y.array[A+10]=W.z;y.array[A+11]=W.w;y.array[A+12]=ma.x;y.array[A+13]=ma.y;y.array[A+14]=ma.z;y.array[A+15]=ma.w;A=A+
16}}else if(y.boundTo==="faces"){H=0;for(X=ta.length;H<X;H++){W=V=U=Aa=y.value[ta[H]];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=U.z;y.array[A+3]=U.w;y.array[A+4]=V.x;y.array[A+5]=V.y;y.array[A+6]=V.z;y.array[A+7]=V.w;y.array[A+8]=W.x;y.array[A+9]=W.y;y.array[A+10]=W.z;y.array[A+11]=W.w;A=A+12}H=0;for(X=ua.length;H<X;H++){ma=W=V=U=Aa=y.value[ua[H]];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=U.z;y.array[A+3]=U.w;y.array[A+4]=V.x;y.array[A+5]=V.y;y.array[A+6]=V.z;y.array[A+7]=V.w;y.array[A+8]=W.x;
y.array[A+9]=W.y;y.array[A+10]=W.z;y.array[A+11]=W.w;y.array[A+12]=ma.x;y.array[A+13]=ma.y;y.array[A+14]=ma.z;y.array[A+15]=ma.w;A=A+16}}else if(y.boundTo==="faceVertices"){H=0;for(X=ta.length;H<X;H++){Aa=y.value[ta[H]];U=Aa[0];V=Aa[1];W=Aa[2];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=U.z;y.array[A+3]=U.w;y.array[A+4]=V.x;y.array[A+5]=V.y;y.array[A+6]=V.z;y.array[A+7]=V.w;y.array[A+8]=W.x;y.array[A+9]=W.y;y.array[A+10]=W.z;y.array[A+11]=W.w;A=A+12}H=0;for(X=ua.length;H<X;H++){Aa=y.value[ua[H]];
U=Aa[0];V=Aa[1];W=Aa[2];ma=Aa[3];y.array[A]=U.x;y.array[A+1]=U.y;y.array[A+2]=U.z;y.array[A+3]=U.w;y.array[A+4]=V.x;y.array[A+5]=V.y;y.array[A+6]=V.z;y.array[A+7]=V.w;y.array[A+8]=W.x;y.array[A+9]=W.y;y.array[A+10]=W.z;y.array[A+11]=W.w;y.array[A+12]=ma.x;y.array[A+13]=ma.y;y.array[A+14]=ma.z;y.array[A+15]=ma.w;A=A+16}}l.bindBuffer(l.ARRAY_BUFFER,y.buffer);l.bufferData(l.ARRAY_BUFFER,y.array,Ha)}}}if(db){delete ra.__inittedArrays;delete ra.__colorArray;delete ra.__normalArray;delete ra.__tangentArray;
delete ra.__uvArray;delete ra.__uv2Array;delete ra.__faceArray;delete ra.__vertexArray;delete ra.__lineArray;delete ra.__skinIndexArray;delete ra.__skinWeightArray}}}}ga.verticesNeedUpdate=false;ga.morphTargetsNeedUpdate=false;ga.elementsNeedUpdate=false;ga.uvsNeedUpdate=false;ga.normalsNeedUpdate=false;ga.colorsNeedUpdate=false;ga.tangentsNeedUpdate=false;la.attributes&&r(la)}else if(pa instanceof THREE.Ribbon){if(ga.verticesNeedUpdate||ga.colorsNeedUpdate){var bc=ga,Zc=l.DYNAMIC_DRAW,xc=void 0,
yc=void 0,Fc=void 0,cc=void 0,Gc=void 0,$c=bc.vertices,ad=bc.colors,jd=$c.length,kd=ad.length,Hc=bc.__vertexArray,Ic=bc.__colorArray,ld=bc.colorsNeedUpdate;if(bc.verticesNeedUpdate){for(xc=0;xc<jd;xc++){Fc=$c[xc];cc=xc*3;Hc[cc]=Fc.x;Hc[cc+1]=Fc.y;Hc[cc+2]=Fc.z}l.bindBuffer(l.ARRAY_BUFFER,bc.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Hc,Zc)}if(ld){for(yc=0;yc<kd;yc++){Gc=ad[yc];cc=yc*3;Ic[cc]=Gc.r;Ic[cc+1]=Gc.g;Ic[cc+2]=Gc.b}l.bindBuffer(l.ARRAY_BUFFER,bc.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,
Ic,Zc)}}ga.verticesNeedUpdate=false;ga.colorsNeedUpdate=false}else if(pa instanceof THREE.Line){la=c(pa,za);Ca=la.attributes&&o(la);if(ga.verticesNeedUpdate||ga.colorsNeedUpdate||Ca){var Qb=ga,Uc=l.DYNAMIC_DRAW,zc=void 0,Ac=void 0,Jc=void 0,La=void 0,Kc=void 0,bd=Qb.vertices,cd=Qb.colors,md=bd.length,nd=cd.length,Lc=Qb.__vertexArray,Mc=Qb.__colorArray,od=Qb.colorsNeedUpdate,Vc=Qb.__webglCustomAttributesList,Nc=void 0,dd=void 0,Za=void 0,oc=void 0,jb=void 0,Fa=void 0;if(Qb.verticesNeedUpdate){for(zc=
0;zc<md;zc++){Jc=bd[zc];La=zc*3;Lc[La]=Jc.x;Lc[La+1]=Jc.y;Lc[La+2]=Jc.z}l.bindBuffer(l.ARRAY_BUFFER,Qb.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,Lc,Uc)}if(od){for(Ac=0;Ac<nd;Ac++){Kc=cd[Ac];La=Ac*3;Mc[La]=Kc.r;Mc[La+1]=Kc.g;Mc[La+2]=Kc.b}l.bindBuffer(l.ARRAY_BUFFER,Qb.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,Mc,Uc)}if(Vc){Nc=0;for(dd=Vc.length;Nc<dd;Nc++){Fa=Vc[Nc];if(Fa.needsUpdate&&(Fa.boundTo===void 0||Fa.boundTo==="vertices")){La=0;oc=Fa.value.length;if(Fa.size===1)for(Za=0;Za<oc;Za++)Fa.array[Za]=
Fa.value[Za];else if(Fa.size===2)for(Za=0;Za<oc;Za++){jb=Fa.value[Za];Fa.array[La]=jb.x;Fa.array[La+1]=jb.y;La=La+2}else if(Fa.size===3)if(Fa.type==="c")for(Za=0;Za<oc;Za++){jb=Fa.value[Za];Fa.array[La]=jb.r;Fa.array[La+1]=jb.g;Fa.array[La+2]=jb.b;La=La+3}else for(Za=0;Za<oc;Za++){jb=Fa.value[Za];Fa.array[La]=jb.x;Fa.array[La+1]=jb.y;Fa.array[La+2]=jb.z;La=La+3}else if(Fa.size===4)for(Za=0;Za<oc;Za++){jb=Fa.value[Za];Fa.array[La]=jb.x;Fa.array[La+1]=jb.y;Fa.array[La+2]=jb.z;Fa.array[La+3]=jb.w;La=
La+4}l.bindBuffer(l.ARRAY_BUFFER,Fa.buffer);l.bufferData(l.ARRAY_BUFFER,Fa.array,Uc)}}}}ga.verticesNeedUpdate=false;ga.colorsNeedUpdate=false;la.attributes&&r(la)}else if(pa instanceof THREE.ParticleSystem)if(ga instanceof THREE.BufferGeometry){(ga.verticesNeedUpdate||ga.colorsNeedUpdate)&&h(ga,l.DYNAMIC_DRAW,!ga.dynamic);ga.verticesNeedUpdate=false;ga.colorsNeedUpdate=false}else{la=c(pa,za);Ca=la.attributes&&o(la);(ga.verticesNeedUpdate||ga.colorsNeedUpdate||pa.sortParticles||Ca)&&g(ga,l.DYNAMIC_DRAW,
pa);ga.verticesNeedUpdate=false;ga.colorsNeedUpdate=false;la.attributes&&r(la)}}};this.initMaterial=function(a,b,c,d){var e,f,g,h,i,j,k,m,n;a instanceof THREE.MeshDepthMaterial?n="depth":a instanceof THREE.MeshNormalMaterial?n="normal":a instanceof THREE.MeshBasicMaterial?n="basic":a instanceof THREE.MeshLambertMaterial?n="lambert":a instanceof THREE.MeshPhongMaterial?n="phong":a instanceof THREE.LineBasicMaterial?n="basic":a instanceof THREE.ParticleBasicMaterial&&(n="particle_basic");if(n){var G=
THREE.ShaderLib[n];a.uniforms=THREE.UniformsUtils.clone(G.uniforms);a.vertexShader=G.vertexShader;a.fragmentShader=G.fragmentShader}var o,r;o=h=f=e=G=0;for(g=b.length;o<g;o++){r=b[o];if(!r.onlyShadow){r instanceof THREE.DirectionalLight&&h++;r instanceof THREE.PointLight&&f++;r instanceof THREE.SpotLight&&e++;r instanceof THREE.HemisphereLight&&G++}}if(f+e+h+G<=ba){o=h;g=e}else{o=Math.ceil(ba*h/(f+h));g=f=ba-o;G=o}e=o;h=G;G=m=0;for(o=b.length;G<o;G++){r=b[G];if(r.castShadow){r instanceof THREE.SpotLight&&
m++;r instanceof THREE.DirectionalLight&&!r.shadowCascade&&m++}}if(vb&&d&&d.useVertexTexture)k=1024;else{b=l.getParameter(l.MAX_VERTEX_UNIFORM_VECTORS);b=Math.floor((b-20)/4);if(d!==void 0&&d instanceof THREE.SkinnedMesh){b=Math.min(d.bones.length,b);b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")}k=b}var q;a:{r=a.fragmentShader;o=a.vertexShader;var G=a.uniforms,b=a.attributes,c={map:!!a.map,envMap:!!a.envMap,
lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:k,useVertexTexture:vb&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,
maxHemiLights:h,maxShadows:m,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},p,d=[];if(n)d.push(n);else{d.push(r);d.push(o)}for(p in c){d.push(p);d.push(c[p])}n=d.join();p=0;for(d=qa.length;p<d;p++){e=qa[p];if(e.code===n){e.usedTimes++;
q=e.program;break a}}p=l.createProgram();d=["precision "+K+" float;",pc?"#define VERTEX_TEXTURES":"",Q.gammaInput?"#define GAMMA_INPUT":"",Q.gammaOutput?"#define GAMMA_OUTPUT":"",Q.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":
"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":
"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
e=["precision "+K+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",Q.gammaInput?"#define GAMMA_INPUT":"",Q.gammaOutput?"#define GAMMA_OUTPUT":"",Q.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");e=z("fragment",e+r);d=z("vertex",d+o);l.attachShader(p,d);l.attachShader(p,e);l.linkProgram(p);l.getProgramParameter(p,l.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+l.getProgramParameter(p,
l.VALIDATE_STATUS)+", gl error ["+l.getError()+"]");l.deleteShader(e);l.deleteShader(d);p.uniforms={};p.attributes={};var aa,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"];c.useVertexTexture?d.push("boneTexture"):d.push("boneGlobalMatrices");for(aa in G)d.push(aa);aa=d;d=0;for(G=aa.length;d<G;d++){e=aa[d];p.uniforms[e]=l.getUniformLocation(p,e)}d=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight"];
for(aa=0;aa<c.maxMorphTargets;aa++)d.push("morphTarget"+aa);for(aa=0;aa<c.maxMorphNormals;aa++)d.push("morphNormal"+aa);for(q in b)d.push(q);q=d;aa=0;for(c=q.length;aa<c;aa++){d=q[aa];p.attributes[d]=l.getAttribLocation(p,d)}p.id=xa++;qa.push({program:p,code:n,usedTimes:1});Q.info.memory.programs=qa.length;q=p}a.program=q;q=a.program.attributes;q.position>=0&&l.enableVertexAttribArray(q.position);q.color>=0&&l.enableVertexAttribArray(q.color);q.normal>=0&&l.enableVertexAttribArray(q.normal);q.tangent>=
0&&l.enableVertexAttribArray(q.tangent);if(a.skinning&&q.skinIndex>=0&&q.skinWeight>=0){l.enableVertexAttribArray(q.skinIndex);l.enableVertexAttribArray(q.skinWeight)}if(a.attributes)for(j in a.attributes)q[j]!==void 0&&q[j]>=0&&l.enableVertexAttribArray(q[j]);if(a.morphTargets){a.numSupportedMorphTargets=0;p="morphTarget";for(j=0;j<this.maxMorphTargets;j++){aa=p+j;if(q[aa]>=0){l.enableVertexAttribArray(q[aa]);a.numSupportedMorphTargets++}}}if(a.morphNormals){a.numSupportedMorphNormals=0;p="morphNormal";
for(j=0;j<this.maxMorphNormals;j++){aa=p+j;if(q[aa]>=0){l.enableVertexAttribArray(q[aa]);a.numSupportedMorphNormals++}}}a.uniformsList=[];for(i in a.uniforms)a.uniformsList.push([a.uniforms[i],i])};this.setFaceCulling=function(a,b){if(a){!b||b==="ccw"?l.frontFace(l.CCW):l.frontFace(l.CW);a==="back"?l.cullFace(l.BACK):a==="front"?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK);l.enable(l.CULL_FACE)}else l.disable(l.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===
THREE.BackSide;if(oa!==b){b?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE);oa=b}if(Ga!==a){a?l.frontFace(l.CW):l.frontFace(l.CCW);Ga=a}};this.setDepthTest=function(a){if(Ba!==a){a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST);Ba=a}};this.setDepthWrite=function(a){if(Ha!==a){l.depthMask(a);Ha=a}};this.setBlending=function(a,b,c,d){if(a!==va){if(a===THREE.NoBlending)l.disable(l.BLEND);else if(a===THREE.AdditiveBlending){l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE)}else if(a===
THREE.SubtractiveBlending){l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR)}else if(a===THREE.MultiplyBlending){l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.SRC_COLOR)}else if(a===THREE.CustomBlending)l.enable(l.BLEND);else{l.enable(l.BLEND);l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD);l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)}va=a}if(a===THREE.CustomBlending){if(b!==Qa){l.blendEquation(J(b));Qa=
b}if(c!==ja||d!==Xa){l.blendFunc(J(c),J(d));ja=c;Xa=d}}else Xa=ja=Qa=null};this.setTexture=function(a,b){if(a.needsUpdate){if(!a.__webglInit){a.__webglInit=true;a.__webglTexture=l.createTexture();Q.info.memory.textures++}l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);l.pixelStorei(l.UNPACK_FLIP_Y_WEBGL,a.flipY);l.pixelStorei(l.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=(c.width&c.width-1)===0&&(c.height&c.height-1)===0,e=J(a.format),f=J(a.type);
M(l.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<h;g++){c=f[g];l.compressedTexImage2D(l.TEXTURE_2D,g,e,c.width,c.height,0,c.data)}else a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):l.texImage2D(l.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&l.generateMipmap(l.TEXTURE_2D);a.needsUpdate=false;if(a.onUpdate)a.onUpdate()}else{l.activeTexture(l.TEXTURE0+b);l.bindTexture(l.TEXTURE_2D,a.__webglTexture)}};this.setRenderTarget=
function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=true;if(a.stencilBuffer===void 0)a.stencilBuffer=true;a.__webglTexture=l.createTexture();var c=(a.width&a.width-1)===0&&(a.height&a.height-1)===0,d=J(a.format),e=J(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);M(l.TEXTURE_CUBE_MAP,a,c);for(var f=0;f<6;f++){a.__webglFramebuffer[f]=l.createFramebuffer();a.__webglRenderbuffer[f]=
l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,h=l.TEXTURE_CUBE_MAP_POSITIVE_X+f;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer[f]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,h,g.__webglTexture,0);D(a.__webglRenderbuffer[f],a)}c&&l.generateMipmap(l.TEXTURE_CUBE_MAP)}else{a.__webglFramebuffer=l.createFramebuffer();a.__webglRenderbuffer=l.createRenderbuffer();l.bindTexture(l.TEXTURE_2D,a.__webglTexture);M(l.TEXTURE_2D,
a,c);l.texImage2D(l.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null);d=l.TEXTURE_2D;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,d,a.__webglTexture,0);D(a.__webglRenderbuffer,a);c&&l.generateMipmap(l.TEXTURE_2D)}b?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}if(a){b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer;c=a.width;
a=a.height;e=d=0}else{b=null;c=pa;a=Ta;d=za;e=eb}if(b!==Y){l.bindFramebuffer(l.FRAMEBUFFER,b);l.viewport(d,e,c,a);Y=b}la=c;Da=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=c.anisotropy!==void 0?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:
THREE.RGBAFormat;this.type=c.type!==void 0?c.type:THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:true;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:true;this.generateMipmaps=true};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=true};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var f=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,f);f.h=THREE.Math.clamp(f.h+b,0,1);f.s=THREE.Math.clamp(f.s+c,0,1);f.v=THREE.Math.clamp(f.v+d,0,1);a.setHSV(f.h,f.s,f.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,f=a.b,e=Math.max(Math.max(c,d),f),g=Math.min(Math.min(c,d),f);if(g===e)g=c=0;else{var h=e-g,g=h/e,c=(c===e?(d-f)/h:d===e?2+(f-c)/h:4+(c-d)/h)/6;c<0&&(c=c+1);c>1&&(c=c-1)}b===void 0&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=e;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,f=a.vertices.length,e=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=e.vertices,i=a.faces,k=e.faces,j=a.faceVertexUvs[0],n=e.faceVertexUvs[0],m={},q=0;q<a.materials.length;q++)m[a.materials[q].id]=q;if(b instanceof THREE.Mesh){b.matrixAutoUpdate&&b.updateMatrix();c=b.matrix;d=new THREE.Matrix4;d.extractRotation(c,b.scale)}for(var q=0,o=h.length;q<o;q++){var r=h[q].clone();c&&c.multiplyVector3(r);g.push(r)}q=0;for(o=k.length;q<o;q++){var g=
k[q],p,t,u=g.vertexNormals,w=g.vertexColors;g instanceof THREE.Face3?p=new THREE.Face3(g.a+f,g.b+f,g.c+f):g instanceof THREE.Face4&&(p=new THREE.Face4(g.a+f,g.b+f,g.c+f,g.d+f));p.normal.copy(g.normal);d&&d.multiplyVector3(p.normal);h=0;for(r=u.length;h<r;h++){t=u[h].clone();d&&d.multiplyVector3(t);p.vertexNormals.push(t)}p.color.copy(g.color);h=0;for(r=w.length;h<r;h++){t=w[h];p.vertexColors.push(t.clone())}if(g.materialIndex!==void 0){h=e.materials[g.materialIndex];r=h.id;w=m[r];if(w===void 0){w=
a.materials.length;m[r]=w;a.materials.push(h)}p.materialIndex=w}p.centroid.copy(g.centroid);c&&c.multiplyVector3(p.centroid);i.push(p)}q=0;for(o=n.length;q<o;q++){c=n[q];d=[];h=0;for(r=c.length;h<r;h++)d.push(new THREE.UV(c[h].u,c[h].v));j.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,f=a.faces,e=a.faceVertexUvs[0];if(a.materials)b.materials=a.materials.slice();a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=f.length;a<c;a++)b.faces.push(f[a].clone());a=0;
for(c=e.length;a<c;a++){for(var d=e[a],f=[],g=0,h=d.length;g<h;g++)f.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(f)}return b},randomPointInTriangle:function(a,b,c){var d,f,e,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();f=THREE.GeometryUtils.random();if(d+f>1){d=1-d;f=1-f}e=1-d-f;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(f);g.addSelf(h);h.copy(c);h.multiplyScalar(e);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,f,e;if(a instanceof
THREE.Face3){d=b.vertices[a.a];f=b.vertices[a.b];e=b.vertices[a.c];return THREE.GeometryUtils.randomPointInTriangle(d,f,e)}if(a instanceof THREE.Face4){d=b.vertices[a.a];f=b.vertices[a.b];e=b.vertices[a.c];var b=b.vertices[a.d],g;if(c)if(a._area1&&a._area2){c=a._area1;g=a._area2}else{c=THREE.GeometryUtils.triangleArea(d,f,b);g=THREE.GeometryUtils.triangleArea(f,e,b);a._area1=c;a._area2=g}else{c=THREE.GeometryUtils.triangleArea(d,f,b);g=THREE.GeometryUtils.triangleArea(f,e,b)}return THREE.GeometryUtils.random()*
(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,f,b):THREE.GeometryUtils.randomPointInTriangle(f,e,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,f,e=a.faces,g=a.vertices,h=e.length,i=0,k=[],j,n,m,q;for(f=0;f<h;f++){d=e[f];if(d instanceof THREE.Face3){j=g[d.a];n=g[d.b];m=g[d.c];d._area=THREE.GeometryUtils.triangleArea(j,n,m)}else if(d instanceof THREE.Face4){j=
g[d.a];n=g[d.b];m=g[d.c];q=g[d.d];d._area1=THREE.GeometryUtils.triangleArea(j,n,q);d._area2=THREE.GeometryUtils.triangleArea(n,m,q);d._area=d._area1+d._area2}i=i+d._area;k[f]=i}d=[];for(f=0;f<b;f++){g=THREE.GeometryUtils.random()*i;g=c(g);d[f]=THREE.GeometryUtils.randomPointInFace(e[g],a,true)}return d},triangleArea:function(a,b,c){var d,f=THREE.GeometryUtils.__v1;f.sub(a,b);d=f.length();f.sub(a,c);a=f.length();f.sub(b,c);c=f.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();
var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],f=0,e=d.length;f<e;f++){if(d[f].u!==1)d[f].u=d[f].u-Math.floor(d[f].u);if(d[f].v!==1)d[f].v=d[f].v-Math.floor(d[f].v)}},triangulateQuads:function(a){var b,c,d,f,e=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<
c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++){d=a.faces[b];if(d instanceof THREE.Face4){f=d.a;var i=d.b,k=d.c,j=d.d,n=new THREE.Face3,m=new THREE.Face3;n.color.copy(d.color);m.color.copy(d.color);n.materialIndex=d.materialIndex;m.materialIndex=d.materialIndex;n.a=f;n.b=i;n.c=j;m.a=i;m.b=k;m.c=j;if(d.vertexColors.length===4){n.vertexColors[0]=d.vertexColors[0].clone();n.vertexColors[1]=d.vertexColors[1].clone();n.vertexColors[2]=d.vertexColors[3].clone();m.vertexColors[0]=d.vertexColors[1].clone();
m.vertexColors[1]=d.vertexColors[2].clone();m.vertexColors[2]=d.vertexColors[3].clone()}e.push(n,m);d=0;for(f=a.faceVertexUvs.length;d<f;d++)if(a.faceVertexUvs[d].length){n=a.faceVertexUvs[d][b];i=n[1];k=n[2];j=n[3];n=[n[0].clone(),i.clone(),j.clone()];i=[i.clone(),k.clone(),j.clone()];h[d].push(n,i)}d=0;for(f=a.faceUvs.length;d<f;d++)if(a.faceUvs[d].length){i=a.faceUvs[d][b];g[d].push(i,i)}}else{e.push(d);d=0;for(f=a.faceUvs.length;d<f;d++)g[d].push(a.faceUvs[d][b]);d=0;for(f=a.faceVertexUvs.length;d<
f;d++)h[d].push(a.faceVertexUvs[d][b])}}a.faces=e;a.faceUvs=g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var f=b.length,e=a.faces[c];if(e instanceof THREE.Face4){var g=e.a,h=e.b,i=e.c,g=a.vertices[g],h=a.vertices[h],i=a.vertices[i],k=a.vertices[e.d];b.push(g.clone());b.push(h.clone());b.push(i.clone());b.push(k.clone());e.a=f;e.b=f+1;e.c=f+2;e.d=f+3}else{g=
e.a;h=e.b;i=e.c;g=a.vertices[g];h=a.vertices[h];i=a.vertices[i];b.push(g.clone());b.push(h.clone());b.push(i.clone());e.a=f;e.b=f+1;e.c=f+2}}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,f,e,g,h,i,k,j,n,m,q,o,r,p,t,u,w,s,B=[],v=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)v[c]=[];c=0;for(d=a.faces.length;c<d;c++){f=a.faces[c];if(f instanceof THREE.Face3){e=f.a;g=f.b;h=f.c;k=a.vertices[e];j=a.vertices[g];n=a.vertices[h];q=k.distanceTo(j);o=j.distanceTo(n);m=k.distanceTo(n);if(q>
b||o>b||m>b){i=a.vertices.length;w=f.clone();s=f.clone();if(q>=o&&q>=m){k=k.clone();k.lerpSelf(j,0.5);w.a=e;w.b=i;w.c=h;s.a=i;s.b=g;s.c=h;if(f.vertexNormals.length===3){e=f.vertexNormals[0].clone();e.lerpSelf(f.vertexNormals[1],0.5);w.vertexNormals[1].copy(e);s.vertexNormals[0].copy(e)}if(f.vertexColors.length===3){e=f.vertexColors[0].clone();e.lerpSelf(f.vertexColors[1],0.5);w.vertexColors[1].copy(e);s.vertexColors[0].copy(e)}f=0}else if(o>=q&&o>=m){k=j.clone();k.lerpSelf(n,0.5);w.a=e;w.b=g;w.c=
i;s.a=i;s.b=h;s.c=e;if(f.vertexNormals.length===3){e=f.vertexNormals[1].clone();e.lerpSelf(f.vertexNormals[2],0.5);w.vertexNormals[2].copy(e);s.vertexNormals[0].copy(e);s.vertexNormals[1].copy(f.vertexNormals[2]);s.vertexNormals[2].copy(f.vertexNormals[0])}if(f.vertexColors.length===3){e=f.vertexColors[1].clone();e.lerpSelf(f.vertexColors[2],0.5);w.vertexColors[2].copy(e);s.vertexColors[0].copy(e);s.vertexColors[1].copy(f.vertexColors[2]);s.vertexColors[2].copy(f.vertexColors[0])}f=1}else{k=k.clone();
k.lerpSelf(n,0.5);w.a=e;w.b=g;w.c=i;s.a=i;s.b=g;s.c=h;if(f.vertexNormals.length===3){e=f.vertexNormals[0].clone();e.lerpSelf(f.vertexNormals[2],0.5);w.vertexNormals[2].copy(e);s.vertexNormals[0].copy(e)}if(f.vertexColors.length===3){e=f.vertexColors[0].clone();e.lerpSelf(f.vertexColors[2],0.5);w.vertexColors[2].copy(e);s.vertexColors[0].copy(e)}f=2}B.push(w,s);a.vertices.push(k);e=0;for(g=a.faceVertexUvs.length;e<g;e++)if(a.faceVertexUvs[e].length){k=a.faceVertexUvs[e][c];s=k[0];h=k[1];w=k[2];if(f===
0){j=s.clone();j.lerpSelf(h,0.5);k=[s.clone(),j.clone(),w.clone()];h=[j.clone(),h.clone(),w.clone()]}else if(f===1){j=h.clone();j.lerpSelf(w,0.5);k=[s.clone(),h.clone(),j.clone()];h=[j.clone(),w.clone(),s.clone()]}else{j=s.clone();j.lerpSelf(w,0.5);k=[s.clone(),h.clone(),j.clone()];h=[j.clone(),h.clone(),w.clone()]}v[e].push(k,h)}}else{B.push(f);e=0;for(g=a.faceVertexUvs.length;e<g;e++)v[e].push(a.faceVertexUvs[e][c])}}else{e=f.a;g=f.b;h=f.c;i=f.d;k=a.vertices[e];j=a.vertices[g];n=a.vertices[h];m=
a.vertices[i];q=k.distanceTo(j);o=j.distanceTo(n);r=n.distanceTo(m);p=k.distanceTo(m);if(q>b||o>b||r>b||p>b){t=a.vertices.length;u=a.vertices.length+1;w=f.clone();s=f.clone();if(q>=o&&q>=r&&q>=p||r>=o&&r>=q&&r>=p){q=k.clone();q.lerpSelf(j,0.5);j=n.clone();j.lerpSelf(m,0.5);w.a=e;w.b=t;w.c=u;w.d=i;s.a=t;s.b=g;s.c=h;s.d=u;if(f.vertexNormals.length===4){e=f.vertexNormals[0].clone();e.lerpSelf(f.vertexNormals[1],0.5);g=f.vertexNormals[2].clone();g.lerpSelf(f.vertexNormals[3],0.5);w.vertexNormals[1].copy(e);
w.vertexNormals[2].copy(g);s.vertexNormals[0].copy(e);s.vertexNormals[3].copy(g)}if(f.vertexColors.length===4){e=f.vertexColors[0].clone();e.lerpSelf(f.vertexColors[1],0.5);g=f.vertexColors[2].clone();g.lerpSelf(f.vertexColors[3],0.5);w.vertexColors[1].copy(e);w.vertexColors[2].copy(g);s.vertexColors[0].copy(e);s.vertexColors[3].copy(g)}f=0}else{q=j.clone();q.lerpSelf(n,0.5);j=m.clone();j.lerpSelf(k,0.5);w.a=e;w.b=g;w.c=t;w.d=u;s.a=u;s.b=t;s.c=h;s.d=i;if(f.vertexNormals.length===4){e=f.vertexNormals[1].clone();
e.lerpSelf(f.vertexNormals[2],0.5);g=f.vertexNormals[3].clone();g.lerpSelf(f.vertexNormals[0],0.5);w.vertexNormals[2].copy(e);w.vertexNormals[3].copy(g);s.vertexNormals[0].copy(g);s.vertexNormals[1].copy(e)}if(f.vertexColors.length===4){e=f.vertexColors[1].clone();e.lerpSelf(f.vertexColors[2],0.5);g=f.vertexColors[3].clone();g.lerpSelf(f.vertexColors[0],0.5);w.vertexColors[2].copy(e);w.vertexColors[3].copy(g);s.vertexColors[0].copy(g);s.vertexColors[1].copy(e)}f=1}B.push(w,s);a.vertices.push(q,j);
e=0;for(g=a.faceVertexUvs.length;e<g;e++)if(a.faceVertexUvs[e].length){k=a.faceVertexUvs[e][c];s=k[0];h=k[1];w=k[2];k=k[3];if(f===0){j=s.clone();j.lerpSelf(h,0.5);n=w.clone();n.lerpSelf(k,0.5);s=[s.clone(),j.clone(),n.clone(),k.clone()];h=[j.clone(),h.clone(),w.clone(),n.clone()]}else{j=h.clone();j.lerpSelf(w,0.5);n=k.clone();n.lerpSelf(s,0.5);s=[s.clone(),h.clone(),j.clone(),n.clone()];h=[n.clone(),j.clone(),w.clone(),k.clone()]}v[e].push(s,h)}}else{B.push(f);e=0;for(g=a.faceVertexUvs.length;e<g;e++)v[e].push(a.faceVertexUvs[e][c])}}}a.faces=
B;a.faceVertexUvs=v}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var f=new Image,e=new THREE.Texture(f,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=a.content;e.needsUpdate=true;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,f);return e},loadCompressedTexture:function(a,b,c,d){var f=new THREE.CompressedTexture;f.mapping=b;var e=new XMLHttpRequest;e.onload=function(){var a=THREE.ImageUtils.parseDDS(e.response,
true);f.format=a.format;f.mipmaps=a.mipmaps;f.image.width=a.width;f.image.height=a.height;f.generateMipmaps=false;f.needsUpdate=true;c&&c(f)};e.onerror=d;e.open("GET",a,true);e.responseType="arraybuffer";e.send(null);return f},loadTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.Texture;e.image=f;if(b!==void 0)e.mapping=b;e.flipY=false;for(var b=0,g=a.length;b<g;++b){var h=new Image;f[b]=h;h.onload=function(){f.loadCount=f.loadCount+1;if(f.loadCount===6){e.needsUpdate=true;c&&
c()}};h.onerror=d;h.crossOrigin=this.crossOrigin;h.src=a[b]}return e},loadCompressedTextureCube:function(a,b,c,d){var f=[];f.loadCount=0;var e=new THREE.CompressedTexture;e.image=f;if(b!==void 0)e.mapping=b;e.flipY=false;e.generateMipmaps=false;for(var b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,true);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;f.loadCount=f.loadCount+1;if(f.loadCount===6){e.format=d.format;e.needsUpdate=true;c&&c()}}},
g=0,h=a.length;g<h;++g){var i={};f[g]=i;var k=new XMLHttpRequest;k.onload=b(k,i);k.onerror=d;k.open("GET",a[g],true);k.responseType="arraybuffer";k.send(null)}return e},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},f=c("DXT1"),e=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(h[0]!==542327876){console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header");
return d}if(!h[20]&4){console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code");return d}var i=h[21];switch(i){case f:f=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case e:f=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:f=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(i&255,i>>8&255,i>>16&255,i>>24&255));return d}d.mipmapCount=1;if(h[2]&131072&&b!==false)d.mipmapCount=Math.max(1,
h[7]);d.width=h[4];d.height=h[3];h=h[1]+4;e=d.width;g=d.height;for(i=0;i<d.mipmapCount;i++){var k=Math.max(4,e)/4*Math.max(4,g)/4*f,j={data:new Uint8Array(a,h,k),width:e,height:g};d.mipmaps.push(j);h=h+k;e=Math.max(e*0.5,1);g=Math.max(g*0.5,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,f=a.height,e=document.createElement("canvas");e.width=d;e.height=f;var g=e.getContext("2d");g.drawImage(a,0,0);
for(var h=g.getImageData(0,0,d,f).data,i=g.createImageData(d,f),k=i.data,j=0;j<d;j++)for(var n=0;n<f;n++){var m=n-1<0?0:n-1,q=n+1>f-1?f-1:n+1,o=j-1<0?0:j-1,r=j+1>d-1?d-1:j+1,p=[],t=[0,0,h[(n*d+j)*4]/255*b];p.push([-1,0,h[(n*d+o)*4]/255*b]);p.push([-1,-1,h[(m*d+o)*4]/255*b]);p.push([0,-1,h[(m*d+j)*4]/255*b]);p.push([1,-1,h[(m*d+r)*4]/255*b]);p.push([1,0,h[(n*d+r)*4]/255*b]);p.push([1,1,h[(q*d+r)*4]/255*b]);p.push([0,1,h[(q*d+j)*4]/255*b]);p.push([-1,1,h[(q*d+o)*4]/255*b]);m=[];o=p.length;for(q=0;q<
o;q++){var r=p[q],u=p[(q+1)%o],r=[r[0]-t[0],r[1]-t[1],r[2]-t[2]],u=[u[0]-t[0],u[1]-t[1],u[2]-t[2]];m.push(c([r[1]*u[2]-r[2]*u[1],r[2]*u[0]-r[0]*u[2],r[0]*u[1]-r[1]*u[0]]))}p=[0,0,0];for(q=0;q<m.length;q++){p[0]=p[0]+m[q][0];p[1]=p[1]+m[q][1];p[2]=p[2]+m[q][2]}p[0]=p[0]/m.length;p[1]=p[1]/m.length;p[2]=p[2]/m.length;t=(n*d+j)*4;k[t]=(p[0]+1)/2*255|0;k[t+1]=(p[1]+1)/2*255|0;k[t+2]=p[2]*255|0;k[t+3]=255}g.putImageData(i,0,0);return e},generateDataTexture:function(a,b,c){for(var d=a*b,f=new Uint8Array(3*
d),e=Math.floor(c.r*255),g=Math.floor(c.g*255),c=Math.floor(c.b*255),h=0;h<d;h++){f[h*3]=e;f[h*3+1]=g;f[h*3+2]=c}a=new THREE.DataTexture(f,a,b,THREE.RGBFormat);a.needsUpdate=true;return a}};
THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,f=a.children.length;for(d=0;d<f;d++){c=a.children[d];b(c);THREE.SceneUtils.traverseHierarchy(c,b)}},createMultiMaterialObject:function(a,b){var c,d=b.length,f=new THREE.Object3D;for(c=0;c<d;c++){var e=new THREE.Mesh(a,b[c]);f.add(e)}return f},cloneObject:function(a){var b;if(a instanceof THREE.MorphAnimMesh){b=new THREE.MorphAnimMesh(a.geometry,a.material);
b.duration=a.duration;b.mirroredLoop=a.mirroredLoop;b.time=a.time;b.lastKeyframe=a.lastKeyframe;b.currentKeyframe=a.currentKeyframe;b.direction=a.direction;b.directionBackwards=a.directionBackwards}else if(a instanceof THREE.SkinnedMesh)b=new THREE.SkinnedMesh(a.geometry,a.material,a.useVertexTexture);else if(a instanceof THREE.Mesh)b=new THREE.Mesh(a.geometry,a.material);else if(a instanceof THREE.Line)b=new THREE.Line(a.geometry,a.material,a.type);else if(a instanceof THREE.Ribbon)b=new THREE.Ribbon(a.geometry,
a.material);else if(a instanceof THREE.ParticleSystem){b=new THREE.ParticleSystem(a.geometry,a.material);b.sortParticles=a.sortParticles}else if(a instanceof THREE.Particle)b=new THREE.Particle(a.material);else if(a instanceof THREE.Sprite){b=new THREE.Sprite({});b.color.copy(a.color);b.map=a.map;b.blending=a.blending;b.useScreenCoordinates=a.useScreenCoordinates;b.mergeWith3D=a.mergeWith3D;b.affectedByDistance=a.affectedByDistance;b.scaleByViewport=a.scaleByViewport;b.alignment=a.alignment;b.rotation3d.copy(a.rotation3d);
b.rotation=a.rotation;b.opacity=a.opacity;b.uvOffset.copy(a.uvOffset);b.uvScale.copy(a.uvScale)}else a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);
b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof
THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalMatrix * skinnedNormal.xyz;\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalMatrix * skinnedTangent.xyz;\n#else\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\n#endif\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = mPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,f=String(a).split(""),e=f.length,g=[],a=0;a<e;a++){var h=new THREE.Path,h=this.extractGlyphPoints(f[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,f){var e=[],g,h,i,k,j,n,m,q,o,r,p,t=b.glyphs[a]||b.glyphs["?"];if(t){if(t.o){b=t._cachedOutline||(t._cachedOutline=t.o.split(" "));k=b.length;for(a=0;a<k;){i=b[a++];switch(i){case "m":i=b[a++]*c+d;j=b[a++]*c;f.moveTo(i,j);break;case "l":i=b[a++]*c+d;j=b[a++]*c;f.lineTo(i,j);break;case "q":i=b[a++]*
c+d;j=b[a++]*c;q=b[a++]*c+d;o=b[a++]*c;f.quadraticCurveTo(q,o,i,j);if(g=e[e.length-1]){n=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++){var u=g/h;THREE.Shape.Utils.b2(u,n,q,i);THREE.Shape.Utils.b2(u,m,o,j)}}break;case "b":i=b[a++]*c+d;j=b[a++]*c;q=b[a++]*c+d;o=b[a++]*-c;r=b[a++]*c+d;p=b[a++]*-c;f.bezierCurveTo(i,j,q,o,r,p);if(g=e[e.length-1]){n=g.x;m=g.y;g=1;for(h=this.divisions;g<=h;g++){u=g/h;THREE.Shape.Utils.b3(u,n,q,r,i);THREE.Shape.Utils.b3(u,m,o,p,j)}}}}}return{offset:t.ha*c,path:f}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=b.curveSegments!==void 0?b.curveSegments:4,d=b.font!==void 0?b.font:"helvetiker",f=b.weight!==void 0?b.weight:"normal",e=b.style!==void 0?b.style:"normal";THREE.FontUtils.size=b.size!==void 0?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=f;THREE.FontUtils.style=e;c=THREE.FontUtils.drawText(a).paths;d=[];f=0;for(e=c.length;f<e;f++)Array.prototype.push.apply(d,c[f].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,f=0,e=b-1,g=0;g<b;e=g++)f=f+(a[e].x*a[g].y-a[g].x*a[e].y);return f*0.5};a.Triangulate=function(a,d){var f=a.length;if(f<3)return null;var e=[],g=[],h=[],i,k,j;if(b(a)>0)for(k=0;k<f;k++)g[k]=k;else for(k=0;k<f;k++)g[k]=f-1-k;var n=2*f;for(k=f-1;f>2;){if(n--<=0){console.log("Warning, unable to triangulate polygon!");break}i=k;f<=i&&(i=0);k=i+1;f<=k&&(k=0);j=k+1;f<=j&&(j=0);var m;a:{m=a;var q=i,o=k,r=j,p=f,t=g,u=void 0,w=void 0,s=void 0,B=void 0,v=void 0,
x=void 0,E=void 0,z=void 0,M=void 0,w=m[t[q]].x,s=m[t[q]].y,B=m[t[o]].x,v=m[t[o]].y,x=m[t[r]].x,E=m[t[r]].y;if(1E-10>(B-w)*(E-s)-(v-s)*(x-w))m=false;else{for(u=0;u<p;u++)if(!(u==q||u==o||u==r)){var z=m[t[u]].x,M=m[t[u]].y,D=void 0,I=void 0,J=void 0,P=void 0,K=void 0,L=void 0,C=void 0,F=void 0,O=void 0,ea=void 0,ha=void 0,N=void 0,D=J=K=void 0,D=x-B,I=E-v,J=w-x,P=s-E,K=B-w,L=v-s,C=z-w,F=M-s,O=z-B,ea=M-v,ha=z-x,N=M-E,D=D*ea-I*O,K=K*F-L*C,J=J*N-P*ha;if(D>=0&&J>=0&&K>=0){m=false;break a}}m=true}}if(m){e.push([a[g[i]],
a[g[k]],a[g[j]]]);h.push([g[i],g[k],g[j]]);i=k;for(j=k+1;j<f;i++,j++)g[i]=g[j];f--;n=2*f}}return d?h:e};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=false;var b=[],c,d=this.getPoint(0),f,e=0;b.push(0);for(f=1;f<=a;f++){c=this.getPoint(f/a);e=e+c.distanceTo(d);b.push(e);d=c}return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=true;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,f=c.length,e;e=b?b:a*c[f-1];for(var g=0,h=f-1,i;g<=h;){d=Math.floor(g+(h-g)/2);i=c[d]-e;if(i<0)g=d+1;else if(i>0)h=d-1;else{h=d;break}}d=h;if(c[d]==e)return d/(f-1);g=c[d];return c=(d+(e-g)/(c[d+1]-g))/(f-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;b<0&&(b=0);a>1&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};
THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};
THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.SplineCurve=function(a){this.points=a==void 0?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,f;f=(d.length-1)*a;a=Math.floor(f);f=f-a;c[0]=a==0?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);return b};
THREE.EllipseCurve=function(a,b,c,d,f,e,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=f;this.aEndAngle=e;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,f,e){THREE.EllipseCurve.call(this,a,b,c,c,d,f,e)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,f){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*f},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,f){var a=(c-a)*0.5,d=(d-b)*0.5,e=f*f;return(2*b-2*c+a+d)*f*e+(-3*b+3*c-2*a-d)*e+a*f+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f,a=(d.length-1)*a;f=Math.floor(a);a=a-f;c[0]=f==0?f:f-1;c[1]=f;c[2]=f>d.length-2?d.length-1:f+1;c[3]=f>d.length-3?d.length-1:f+2;f=d[c[0]];var e=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(f.x,e.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(f.y,e.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(f.z,e.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,f;f=(d.length-0)*a;a=Math.floor(f);f=f-a;a=a+(a>0?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length);c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,f);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,f);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,f);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=false};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b){b=c[a]-b;a=this.curves[a];b=1-b/a.getLength();return a.getPointAt(b)}a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++){b=b+this.curves[c].getLength();a.push(b)}return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,f,e,g;b=c=Number.NEGATIVE_INFINITY;f=e=Number.POSITIVE_INFINITY;var h,i,k,j,n=a[0]instanceof THREE.Vector3;j=n?new THREE.Vector3:new THREE.Vector2;i=0;for(k=a.length;i<k;i++){h=a[i];if(h.x>b)b=h.x;else if(h.x<f)f=h.x;if(h.y>c)c=h.y;else if(h.y<e)e=h.y;if(n)if(h.z>d)d=h.z;else if(h.z<g)g=h.z;j.addSelf(h)}a={minX:f,minY:e,maxX:b,maxY:c,centroid:j.divideScalar(k)};if(n){a.maxZ=d;a.minZ=g}return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,true);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,true);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,f;if(!b)b=this.bends;d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,f;if(!b)b=this.bends;d=0;for(f=b.length;d<f;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,f,e,g,h,i;d=0;for(f=a.length;d<f;d++){e=a[d];g=e.x;h=e.y;i=g/c.maxX;i=b.getUtoTmapping(i,g);g=b.getPoint(i);h=b.getNormalVector(i).multiplyScalar(h);e.x=g.x+h.x;e.y=g.y+h.y}return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a){if(this.parent){this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix);this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld);this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject);this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)}else this.matrixWorld.copy(this.matrix);
this.matrixWorldNeedsUpdate=false;a=true}for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var f=Array.prototype.slice.call(arguments),e=this.actions[this.actions.length-1].args,e=new THREE.QuadraticBezierCurve(new THREE.Vector2(e[e.length-2],e[e.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(e);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,f,e){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(f,e));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,f,e){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,f,e)};
THREE.Path.prototype.absarc=function(a,b,c,d,f,e){this.absellipse(a,b,c,c,d,f,e)};THREE.Path.prototype.ellipse=function(a,b,c,d,f,e,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,f,e,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,f,e,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,f,e,g);this.curves.push(i);i=i.getPoint(g?1:0);h.push(i.x);h.push(i.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints){console.log("tata");return this.getSpacedPoints(a,b)}var a=a||12,c=[],d,f,e,g,h,i,k,j,n,m,q,o,r;d=0;for(f=this.actions.length;d<f;d++){e=this.actions[d];g=e.action;e=e.args;switch(g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(e[0],e[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=e[2];i=e[3];n=e[0];m=e[1];if(c.length>0){g=c[c.length-1];
q=g.x;o=g.y}else{g=this.actions[d-1].args;q=g[g.length-2];o=g[g.length-1]}for(e=1;e<=a;e++){r=e/a;g=THREE.Shape.Utils.b2(r,q,n,h);r=THREE.Shape.Utils.b2(r,o,m,i);c.push(new THREE.Vector2(g,r))}break;case THREE.PathActions.BEZIER_CURVE_TO:h=e[4];i=e[5];n=e[0];m=e[1];k=e[2];j=e[3];if(c.length>0){g=c[c.length-1];q=g.x;o=g.y}else{g=this.actions[d-1].args;q=g[g.length-2];o=g[g.length-1]}for(e=1;e<=a;e++){r=e/a;g=THREE.Shape.Utils.b3(r,q,n,k,h);r=THREE.Shape.Utils.b3(r,o,m,j,i);c.push(new THREE.Vector2(g,
r))}break;case THREE.PathActions.CSPLINE_THRU:g=this.actions[d-1].args;r=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*e[0].length;r=r.concat(e[0]);r=new THREE.SplineCurve(r);for(e=1;e<=g;e++)c.push(r.getPointAt(e/g));break;case THREE.PathActions.ARC:h=e[0];i=e[1];m=e[2];k=e[3];g=e[4];n=!!e[5];q=g-k;o=a*2;for(e=1;e<=o;e++){r=e/o;n||(r=1-r);r=k+r*q;g=h+m*Math.cos(r);r=i+m*Math.sin(r);c.push(new THREE.Vector2(g,r))}break;case THREE.PathActions.ELLIPSE:h=e[0];i=e[1];m=e[2];j=e[3];k=e[4];g=e[5];
n=!!e[6];q=g-k;o=a*2;for(e=1;e<=o;e++){r=e/o;n||(r=1-r);r=k+r*q;g=h+m*Math.cos(r);r=i+j*Math.sin(r);c.push(new THREE.Vector2(g,r))}}}d=c[c.length-1];Math.abs(d.x-c[0].x)<1E-10&&Math.abs(d.y-c[0].y)<1E-10&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,f=[],e=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++){c=this.actions[a];d=c.args;c=c.action;if(c==THREE.PathActions.MOVE_TO&&e.actions.length!=0){f.push(e);e=new THREE.Path}e[c].apply(e,d)}e.actions.length!=0&&f.push(e);if(f.length==0)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(f.length==1){e=f[0];g=new THREE.Shape;g.actions=e.actions;g.curves=e.curves;d.push(g);return d}if(a){g=new THREE.Shape;a=0;for(b=f.length;a<
b;a++){e=f[a];if(THREE.Shape.Utils.isClockWise(e.getPoints())){g.actions=e.actions;g.curves=e.curves;d.push(g);g=new THREE.Shape}else g.holes.push(e)}}else{a=0;for(b=f.length;a<b;a++){e=f[a];if(THREE.Shape.Utils.isClockWise(e.getPoints())){g&&d.push(g);g=new THREE.Shape;g.actions=e.actions;g.curves=e.curves}else g.holes.push(e)}d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),f,e,g,h,i,k,j,n,m,q,o=[];for(i=0;i<b.length;i++){k=b[i];Array.prototype.push.apply(d,k);e=Number.POSITIVE_INFINITY;for(f=0;f<k.length;f++){m=k[f];q=[];for(n=0;n<c.length;n++){j=c[n];j=m.distanceToSquared(j);q.push(j);if(j<e){e=j;g=f;h=n}}}f=h-1>=0?h-1:c.length-1;e=g-1>=0?g-1:k.length-1;var r=[k[g],c[h],c[f]];n=THREE.FontUtils.Triangulate.area(r);var p=[k[g],k[e],c[h]];m=THREE.FontUtils.Triangulate.area(p);q=h;j=g;h=h+1;g=g+
-1;h<0&&(h=h+c.length);h=h%c.length;g<0&&(g=g+k.length);g=g%k.length;f=h-1>=0?h-1:c.length-1;e=g-1>=0?g-1:k.length-1;r=[k[g],c[h],c[f]];r=THREE.FontUtils.Triangulate.area(r);p=[k[g],k[e],c[h]];p=THREE.FontUtils.Triangulate.area(p);if(n+m>r+p){h=q;g=j;h<0&&(h=h+c.length);h=h%c.length;g<0&&(g=g+k.length);g=g%k.length;f=h-1>=0?h-1:c.length-1;e=g-1>=0?g-1:k.length-1}n=c.slice(0,h);m=c.slice(h);q=k.slice(g);j=k.slice(0,g);e=[k[g],k[e],c[h]];o.push([k[g],c[h],c[f]]);o.push(e);c=n.concat(q).concat(j).concat(m)}return{shape:c,
isolatedPts:o,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,f=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,false),e,g,h,i,k={};e=0;for(g=d.length;e<g;e++){i=d[e].x+":"+d[e].y;k[i]!==void 0&&console.log("Duplicate point",i);k[i]=e}e=0;for(g=c.length;e<g;e++){h=c[e];for(d=0;d<3;d++){i=h[d].x+":"+h[d].y;i=k[i];i!==void 0&&(h[d]=i)}}e=0;for(g=f.length;e<g;e++){h=f[e];for(d=0;d<3;d++){i=h[d].x+":"+h[d].y;i=k[i];i!==void 0&&(h[d]=i)}}return c.concat(f)},
isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,f){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,f)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){a.indexOf(b)===-1&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);b!==-1&&a.splice(b,1)},add:function(a){b[a.name]!==void 0&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(a.initialized!==true){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){if(a.hierarchy[c].keys[d].time<0)a.hierarchy[c].keys[d].time=
0;if(a.hierarchy[c].keys[d].rot!==void 0&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[c].keys.length&&a.hierarchy[c].keys[0].morphTargets!==void 0){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++){var k=a.hierarchy[c].keys[d].morphTargets[i];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;for(d=0;d<a.hierarchy[c].keys.length;d++){var j=
{};for(k in h){for(i=0;i<a.hierarchy[c].keys[d].morphTargets.length;i++)if(a.hierarchy[c].keys[d].morphTargets[i]===k){j[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[i];break}i===a.hierarchy[c].keys[d].morphTargets.length&&(j[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=j}}for(d=1;d<a.hierarchy[c].keys.length;d++)if(a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time){a.hierarchy[c].keys.splice(d,1);d--}for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*
a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=true}},get:function(a){if(typeof a==="string"){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)};c.LINEAR=0;c.CATMULLROM=
1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=false;this.loop=this.isPaused=true;this.interpolationType=c!==void 0?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(this.isPlaying===false){this.isPlaying=true;this.loop=a!==void 0?a:true;this.currentTime=b!==void 0?b:0;var c,d=this.hierarchy.length,f;for(c=0;c<d;c++){f=this.hierarchy[c];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)f.useQuaternion=true;f.matrixAutoUpdate=true;if(f.animationCache===void 0){f.animationCache={};f.animationCache.prevKey={pos:0,rot:0,scl:0};f.animationCache.nextKey={pos:0,rot:0,scl:0};f.animationCache.originalMatrix=
f instanceof THREE.Bone?f.skinMatrix:f.matrix}var e=f.animationCache.prevKey;f=f.animationCache.nextKey;e.pos=this.data.hierarchy[c].keys[0];e.rot=this.data.hierarchy[c].keys[0];e.scl=this.data.hierarchy[c].keys[0];f.pos=this.getNextKeyWith("pos",c,1);f.rot=this.getNextKeyWith("rot",c,1);f.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){this.isPaused===true?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=false;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(this.isPlaying!==false){var b=["pos","rot","scl"],c,d,f,e,g,h,i,k,j;j=this.currentTime=this.currentTime+a*this.timeScale;k=this.currentTime=this.currentTime%this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var n=0,m=this.hierarchy.length;n<m;n++){a=this.hierarchy[n];i=a.animationCache;for(var q=0;q<3;q++){c=b[q];g=i.prevKey[c];h=i.nextKey[c];if(h.time<=j){if(k<j)if(this.loop){g=this.data.hierarchy[n].keys[0];
for(h=this.getNextKeyWith(c,n,1);h.time<k;){g=h;h=this.getNextKeyWith(c,n,h.index+1)}}else{this.stop();return}else{do{g=h;h=this.getNextKeyWith(c,n,h.index+1)}while(h.time<k)}i.prevKey[c]=g;i.nextKey[c]=h}a.matrixAutoUpdate=true;a.matrixWorldNeedsUpdate=true;d=(k-g.time)/(h.time-g.time);f=g[c];e=h[c];if(d<0||d>1){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+n);d=d<0?0:1}if(c==="pos"){c=a.position;if(this.interpolationType===THREE.AnimationHandler.LINEAR){c.x=f[0]+
(e[0]-f[0])*d;c.y=f[1]+(e[1]-f[1])*d;c.z=f[2]+(e[2]-f[2])*d}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",n,g.index-1).pos;this.points[1]=f;this.points[2]=e;this.points[3]=this.getNextKeyWith("pos",n,h.index+1).pos;d=d*0.33+0.33;f=this.interpolateCatmullRom(this.points,d);c.x=f[0];c.y=f[1];c.z=f[2];if(this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){d=
this.interpolateCatmullRom(this.points,d*1.01);this.target.set(d[0],d[1],d[2]);this.target.subSelf(c);this.target.y=0;this.target.normalize();d=Math.atan2(this.target.x,this.target.z);a.rotation.set(0,d,0)}}}else if(c==="rot")THREE.Quaternion.slerp(f,e,a.quaternion,d);else if(c==="scl"){c=a.scale;c.x=f[0]+(e[0]-f[0])*d;c.y=f[1]+(e[1]-f[1])*d;c.z=f[2]+(e[2]-f[2])*d}}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],f,e,g,h,i,k;f=(a.length-1)*b;e=Math.floor(f);f=f-e;c[0]=e===0?e:e-1;c[1]=e;c[2]=e>a.length-2?e:e+1;c[3]=e>a.length-3?e:e+2;e=a[c[0]];h=a[c[1]];i=a[c[2]];k=a[c[3]];c=f*f;g=f*c;d[0]=this.interpolate(e[0],h[0],i[0],k[0],f,c,g);d[1]=this.interpolate(e[1],h[1],i[1],k[1],f,c,g);d[2]=this.interpolate(e[2],h[2],i[2],k[2],f,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,f,e,g){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*e+a*f+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=false;this.loop=this.isPaused=true;this.JITCompile=c!==void 0?c:true;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var f=0;f<c.length;f++){var e=c[f],g=this.getNextKeyWith(e,a,0);g&&g.apply(e)}d.matrixAutoUpdate=
false;this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=true;this.loop=a!==void 0?a:true;this.currentTime=b!==void 0?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,f,e;for(c=0;c<d;c++){f=this.hierarchy[c];e=this.data.hierarchy[c];f.useQuaternion=true;if(e.animationCache===void 0){e.animationCache={};e.animationCache.prevKey=null;e.animationCache.nextKey=null;e.animationCache.originalMatrix=f instanceof THREE.Bone?
f.skinMatrix:f.matrix}f=this.data.hierarchy[c].keys;if(f.length){e.animationCache.prevKey=f[0];e.animationCache.nextKey=f[1];this.startTime=Math.min(f[0].time,this.startTime);this.endTime=Math.max(f[f.length-1].time,this.endTime)}}this.update(0)}this.isPaused=false;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=false;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(c.animationCache!==void 0){var d=c.animationCache.originalMatrix;if(b instanceof THREE.Bone){d.copy(b.skinMatrix);b.skinMatrix=d}else{d.copy(b.matrix);b.matrix=d}delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,f,e=this.data.JIT.hierarchy,g,h,i;h=this.currentTime=this.currentTime+a*this.timeScale;g=this.currentTime=this.currentTime%this.data.length;if(g<this.startTimeMs)g=this.currentTime=this.startTimeMs+g;f=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((i=g<h)&&!this.loop){for(var a=0,k=this.hierarchy.length;a<k;a++){var j=this.data.hierarchy[a].keys,e=this.data.hierarchy[a].sids;d=j.length-1;f=
this.hierarchy[a];if(j.length){for(j=0;j<e.length;j++){g=e[j];(h=this.getPrevKeyWith(g,a,d))&&h.apply(g)}this.data.hierarchy[a].node.updateMatrix();f.matrixWorldNeedsUpdate=true}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var j=b.keys,n=b.animationCache;if(this.JITCompile&&e[a][f]!==void 0)if(d instanceof THREE.Bone){d.skinMatrix=e[a][f];d.matrixWorldNeedsUpdate=false}else{d.matrix=e[a][f];d.matrixWorldNeedsUpdate=
true}else if(j.length){if(this.JITCompile&&n)d instanceof THREE.Bone?d.skinMatrix=n.originalMatrix:d.matrix=n.originalMatrix;b=n.prevKey;c=n.nextKey;if(b&&c){if(c.time<=h){if(i&&this.loop){b=j[0];for(c=j[1];c.time<g;){b=c;c=j[b.index+1]}}else if(!i)for(var m=j.length-1;c.time<g&&c.index!==m;){b=c;c=j[b.index+1]}n.prevKey=b;n.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=true}}if(this.JITCompile&&e[0][f]===void 0){this.hierarchy[0].updateMatrixWorld(true);
for(a=0;a<this.hierarchy.length;a++)e[a][f]=this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c%b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};
THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=c>=0?c:c+b.length;c>=0;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,-1,0);f.lookAt(new THREE.Vector3(-1,0,0));this.add(f);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,0,1);e.lookAt(new THREE.Vector3(0,1,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var i=new THREE.PerspectiveCamera(90,1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,-1));this.add(i);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,m=c.generateMipmaps;c.generateMipmaps=false;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,f,c);c.activeCubeFace=
2;a.render(b,e,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=m;c.activeCubeFace=5;a.render(b,i,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,f,e,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,e,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,f);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=true;this.inOrthographicMode=false};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=false;this.inOrthographicMode=true};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){if(this.inPerspectiveMode)this.toPerspective();else{this.toPerspective();this.toOrthographic()}};
THREE.CombinedCamera.prototype.setLens=function(a,b){b===void 0&&(b=24);var c=2*Math.atan(b/(a*2))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=false};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=false};
THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=b!==void 0?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.lookVertical=true;this.autoForward=false;this.activeLook=true;this.heightSpeed=false;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=false;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=
this.autoSpeedFactor=0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=false;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){if(this.domElement===document){this.viewHalfX=window.innerWidth/2;this.viewHalfY=window.innerHeight/2}else{this.viewHalfX=this.domElement.offsetWidth/2;this.viewHalfY=this.domElement.offsetHeight/2}};this.onMouseDown=function(a){this.domElement!==
document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=true;break;case 2:this.moveBackward=true}this.mouseDragOn=true};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=false;break;case 2:this.moveBackward=false}this.mouseDragOn=false};this.onMouseMove=function(a){if(this.domElement===document){this.mouseX=a.pageX-this.viewHalfX;this.mouseY=a.pageY-
this.viewHalfY}else{this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX;this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY}};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=true;break;case 37:case 65:this.moveLeft=true;break;case 40:case 83:this.moveBackward=true;break;case 39:case 68:this.moveRight=true;break;case 82:this.moveUp=true;break;case 70:this.moveDown=true;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=
false;break;case 37:case 65:this.moveLeft=false;break;case 40:case 83:this.moveBackward=false;break;case 39:case 68:this.moveRight=false;break;case 82:this.moveUp=false;break;case 70:this.moveDown=false}};this.update=function(a){var b=0;if(!this.freeze){if(this.heightSpeed){b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*b*this.heightCoef}else this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&
this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a=a*this.lookSpeed;this.activeLook||(a=0);this.lon=this.lon+this.mouseX*a;if(this.lookVertical)this.lat=this.lat-this.mouseY*a;this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=
this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon=this.lon+this.mouseX*a;if(this.lookVertical)this.lat=this.lat-this.mouseY*a*b;this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=THREE.Math.mapLinear(this.phi,
0,Math.PI,this.verticalMin,this.verticalMax);b=this.target;c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},false);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),false);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),false);this.domElement.addEventListener("mouseup",
c(this,this.onMouseUp),false);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),false);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),false);this.handleResize()};
THREE.PathControls=function(a,b){function c(a){return(a=a*2)<1?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function f(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),p=g.length,t=0;f=p-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<p-1;f++){t=d*h.chunks[f]/h.total;b.keys[f]={time:t,pos:g[f]}}e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,false)}function e(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++){d=c/(a.points.length*b);d=a.getPoint(d);e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z)}return e}this.object=a;this.domElement=b!==void 0?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=true;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=true;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=Math.PI*2,h=Math.PI/180;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){if(this.domElement===
document){this.viewHalfX=window.innerWidth/2;this.viewHalfY=window.innerHeight/2}else{this.viewHalfX=this.domElement.offsetWidth/2;this.viewHalfY=this.domElement.offsetHeight/2}};this.update=function(a){var b;if(this.lookHorizontal)this.lon=this.lon+this.mouseX*this.lookSpeed*a;if(this.lookVertical)this.lat=this.lat-this.mouseY*this.lookSpeed*a;this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=
a>=0?a:a+g;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};
this.onMouseMove=function(a){if(this.domElement===document){this.mouseX=a.pageX-this.viewHalfX;this.mouseY=a.pageY-this.viewHalfY}else{this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX;this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY}};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),
b=new THREE.MeshLambertMaterial({color:65280}),c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=f(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else{this.animation=f(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.target);this.animationParent.add(this.object)}if(this.createDebugPath){var a=
this.debugPath,b=this.spline,g=e(b,10),c=e(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),q=0;q<b.points.length;q++){c=new THREE.Mesh(g,h);c.position.copy(b.points[q]);a.add(c)}}this.domElement.addEventListener("mousemove",d(this,
this.onMouseMove),false)};this.handleResize()};THREE.PathControlsIdCounter=0;
THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=b!==void 0?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=false;this.object.useQuaternion=true;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=
new THREE.Vector3(0,0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=
1;break;case 40:this.moveState.pitchDown=1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=
0;break;case 70:this.moveState.down=0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
true;break;case 2:this.object.moveBackward=true}};this.mousemove=function(a){if(!this.dragToLook||this.mouseStatus>0){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook){this.mouseStatus--;this.moveState.yawLeft=this.moveState.pitchDown=0}else switch(a.button){case 0:this.moveForward=
false;break;case 2:this.moveBackward=false}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=true};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),false);this.domElement.addEventListener("mousedown",c(this,this.mousedown),false);this.domElement.addEventListener("mouseup",
c(this,this.mouseup),false);this.domElement.addEventListener("keydown",c(this,this.keydown),false);this.domElement.addEventListener("keyup",c(this,this.keyup),false);this.updateMovementVector();this.updateRotationVector()};
THREE.RollControls=function(a,b){this.object=a;this.domElement=b!==void 0?b:document;this.mouseLook=true;this.autoForward=false;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=false;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3,e=new THREE.Matrix4,g=false,h=1,i=0,k=0,j=0,n=0,m=0,q=0,o=0;this.handleResize=function(){q=window.innerWidth/2;o=window.innerHeight/2};this.update=
function(a){if(this.mouseLook){var b=a*this.lookSpeed;this.rotateHorizontally(b*n);this.rotateVertically(b*m)}b=a*this.movementSpeed;this.object.translateZ(-b*(i>0||this.autoForward&&!(i<0)?1:i));this.object.translateX(b*k);this.object.translateY(b*j);if(g)this.roll=this.roll+this.rollSpeed*a*h;if(this.forward.y>this.constrainVertical[1]){this.forward.y=this.constrainVertical[1];this.forward.normalize()}else if(this.forward.y<this.constrainVertical[0]){this.forward.y=this.constrainVertical[0];this.forward.normalize()}f.copy(this.forward);
d.set(0,1,0);c.cross(d,f).normalize();d.cross(f,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=f.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=f.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=f.z;e.identity();e.elements[0]=Math.cos(this.roll);e.elements[4]=-Math.sin(this.roll);e.elements[1]=Math.sin(this.roll);e.elements[5]=
Math.cos(this.roll);this.object.matrix.multiplySelf(e);this.object.matrixWorldNeedsUpdate=true;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x=this.object.position.x+this.object.matrix.elements[0]*a;this.object.position.y=this.object.position.y+this.object.matrix.elements[1]*a;this.object.position.z=this.object.position.z+this.object.matrix.elements[2]*
a};this.translateY=function(a){this.object.position.x=this.object.position.x+this.object.matrix.elements[4]*a;this.object.position.y=this.object.position.y+this.object.matrix.elements[5]*a;this.object.position.z=this.object.position.z+this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x=this.object.position.x-this.object.matrix.elements[8]*a;this.object.position.y=this.object.position.y-this.object.matrix.elements[9]*a;this.object.position.z=this.object.position.z-
this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},
false);this.domElement.addEventListener("mousemove",function(a){n=(a.clientX-q)/window.innerWidth;m=(a.clientY-o)/window.innerHeight},false);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=1;break;case 2:i=-1}},false);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:i=0;break;case 2:i=0}},false);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:i=
1;break;case 37:case 65:k=-1;break;case 40:case 83:i=-1;break;case 39:case 68:k=1;break;case 81:g=true;h=1;break;case 69:g=true;h=-1;break;case 82:j=1;break;case 70:j=-1}},false);this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:i=0;break;case 37:case 65:k=0;break;case 40:case 83:i=0;break;case 39:case 68:k=0;break;case 81:g=false;break;case 69:g=false;break;case 82:j=0;break;case 70:j=0}},false);this.handleResize()};
THREE.TrackballControls=function(a,b){function c(a){if(d.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);j.y=j.y+1/b*0.05}}THREE.EventTarget.call(this);var d=this;this.object=a;this.domElement=b!==void 0?b:document;this.enabled=true;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=
this.noRotate=false;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var f=new THREE.Vector3,e=false,g=-1,h=new THREE.Vector3,i=new THREE.Vector3,k=new THREE.Vector3,j=new THREE.Vector2,n=new THREE.Vector2,m=new THREE.Vector2,q=new THREE.Vector2,o={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=
(this.screen.width+this.screen.height)/4};this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2((a-d.screen.offsetLeft)/d.radius*0.5,(b-d.screen.offsetTop)/d.radius*0.5)};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-d.screen.width*0.5-d.screen.offsetLeft)/d.radius,(d.screen.height*0.5+d.screen.offsetTop-b)/d.radius,0),e=c.length();e>1?c.normalize():c.z=Math.sqrt(1-e*e);h.copy(d.object.position).subSelf(d.target);
e=d.object.up.clone().setLength(c.y);e.addSelf(d.object.up.clone().crossSelf(h).setLength(c.x));e.addSelf(h.setLength(c.z));return e};this.rotateCamera=function(){var a=Math.acos(i.dot(k)/i.length()/k.length());if(a){var b=(new THREE.Vector3).cross(i,k).normalize(),c=new THREE.Quaternion,a=a*d.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(h);c.multiplyVector3(d.object.up);c.multiplyVector3(k);if(d.staticMoving)i.copy(k);else{c.setFromAxisAngle(b,a*(d.dynamicDampingFactor-1));c.multiplyVector3(i)}}};
this.zoomCamera=function(){var a=1+(n.y-j.y)*d.zoomSpeed;if(a!==1&&a>0){h.multiplyScalar(a);d.staticMoving?j.copy(n):j.y=j.y+(n.y-j.y)*this.dynamicDampingFactor}};this.panCamera=function(){var a=q.clone().subSelf(m);if(a.lengthSq()){a.multiplyScalar(h.length()*d.panSpeed);var b=h.clone().crossSelf(d.object.up).setLength(a.x);b.addSelf(d.object.up.clone().setLength(a.y));d.object.position.addSelf(b);d.target.addSelf(b);d.staticMoving?m=q:m.addSelf(a.sub(q,m).multiplyScalar(d.dynamicDampingFactor))}};
this.checkDistances=function(){if(!d.noZoom||!d.noPan){d.object.position.lengthSq()>d.maxDistance*d.maxDistance&&d.object.position.setLength(d.maxDistance);h.lengthSq()<d.minDistance*d.minDistance&&d.object.position.add(d.target,h.setLength(d.minDistance))}};this.update=function(){h.copy(d.object.position).subSelf(d.target);d.noRotate||d.rotateCamera();d.noZoom||d.zoomCamera();d.noPan||d.panCamera();d.object.position.add(d.target,h);d.checkDistances();d.object.lookAt(d.target);if(f.distanceToSquared(d.object.position)>
0){d.dispatchEvent(o);f.copy(d.object.position)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},false);this.domElement.addEventListener("mousemove",function(a){if(d.enabled){if(e){i=k=d.getMouseProjectionOnBall(a.clientX,a.clientY);j=n=d.getMouseOnScreen(a.clientX,a.clientY);m=q=d.getMouseOnScreen(a.clientX,a.clientY);e=false}g!==-1&&(g===0&&!d.noRotate?k=d.getMouseProjectionOnBall(a.clientX,a.clientY):g===1&&!d.noZoom?n=d.getMouseOnScreen(a.clientX,a.clientY):g===
2&&!d.noPan&&(q=d.getMouseOnScreen(a.clientX,a.clientY)))}},false);this.domElement.addEventListener("mousedown",function(a){if(d.enabled){a.preventDefault();a.stopPropagation();if(g===-1){g=a.button;g===0&&!d.noRotate?i=k=d.getMouseProjectionOnBall(a.clientX,a.clientY):g===1&&!d.noZoom?j=n=d.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(m=q=d.getMouseOnScreen(a.clientX,a.clientY))}}},false);this.domElement.addEventListener("mouseup",function(a){if(d.enabled){a.preventDefault();a.stopPropagation();
g=-1}},false);this.domElement.addEventListener("DOMMouseScroll",c,false);this.domElement.addEventListener("mousewheel",c,false);window.addEventListener("keydown",function(a){if(d.enabled&&g===-1){a.keyCode===d.keys[0]&&!d.noRotate?g=0:a.keyCode===d.keys[1]&&!d.noZoom?g=1:a.keyCode===d.keys[2]&&!d.noPan&&(g=2);g!==-1&&(e=true)}},false);window.addEventListener("keyup",function(){d.enabled&&g!==-1&&(g=-1)},false);this.handleResize()};
THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*e.autoRotateSpeed}function d(a){a.preventDefault();if(u===t.ROTATE){i.set(a.clientX,a.clientY);k.sub(i,h);e.rotateLeft(2*Math.PI*k.x/g*e.userRotateSpeed);e.rotateUp(2*Math.PI*k.y/g*e.userRotateSpeed);h.copy(i)}else if(u===t.ZOOM){n.set(a.clientX,a.clientY);m.sub(n,j);m.y>0?e.zoomIn():e.zoomOut();j.copy(n)}}function f(){if(e.userRotate){document.removeEventListener("mousemove",d,false);document.removeEventListener("mouseup",f,false);
u=t.NONE}}THREE.EventTarget.call(this);this.object=a;this.domElement=b!==void 0?b:document;this.center=new THREE.Vector3;this.userZoom=true;this.userZoomSpeed=1;this.userRotate=true;this.userRotateSpeed=1;this.autoRotate=false;this.autoRotateSpeed=2;var e=this,g=1800,h=new THREE.Vector2,i=new THREE.Vector2,k=new THREE.Vector2,j=new THREE.Vector2,n=new THREE.Vector2,m=new THREE.Vector2,q=0,o=0,r=1,p=new THREE.Vector3,t={NONE:-1,ROTATE:0,ZOOM:1},u=t.NONE,w={type:"change"};this.rotateLeft=function(a){a===
void 0&&(a=c());o=o-a};this.rotateRight=function(a){a===void 0&&(a=c());o=o+a};this.rotateUp=function(a){a===void 0&&(a=c());q=q-a};this.rotateDown=function(a){a===void 0&&(a=c());q=q+a};this.zoomIn=function(a){a===void 0&&(a=Math.pow(0.95,e.userZoomSpeed));r=r/a};this.zoomOut=function(a){a===void 0&&(a=Math.pow(0.95,e.userZoomSpeed));r=r*a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*b.x+b.z*b.z),b.y);this.autoRotate&&
this.rotateLeft(c());var d=d+o,e=e+q,e=Math.max(1E-6,Math.min(Math.PI-1E-6,e)),f=b.length();b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);b.multiplyScalar(r);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);q=o=0;r=1;if(p.distanceTo(this.object.position)>0){this.dispatchEvent(w);p.copy(this.object.position)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},false);this.domElement.addEventListener("mousedown",function(a){if(e.userRotate){a.preventDefault();
if(a.button===0||a.button===2){u=t.ROTATE;h.set(a.clientX,a.clientY)}else if(a.button===1){u=t.ZOOM;j.set(a.clientX,a.clientY)}document.addEventListener("mousemove",d,false);document.addEventListener("mouseup",f,false)}},false);this.domElement.addEventListener("mousewheel",function(a){e.userZoom&&(a.wheelDelta>0?e.zoomOut():e.zoomIn())},false)};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=c!==void 0?c:0,d=d!==void 0?d:Math.PI*2,b=b!==void 0?Math.max(3,b):8,f,e=[];f=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(f);e.push(g);for(f=0;f<=b;f++){var h=new THREE.Vector3;h.x=a*Math.cos(c+f/b*d);h.y=a*Math.sin(c+f/b*d);this.vertices.push(h);e.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(f=1;f<=b;f++){this.faces.push(new THREE.Face3(f,f+1,0,[c,c,c]));this.faceVertexUvs[0].push([e[f],
e[f+1],g])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,f,e,g,h){function i(a,b,c,g,h,i,j,m){var n,o=d||1,q=f||1,p=h/2,r=i/2,t=k.vertices.length;if(a==="x"&&b==="y"||a==="y"&&b==="x")n="z";else if(a==="x"&&b==="z"||a==="z"&&b==="x"){n="y";q=e||1}else if(a==="z"&&b==="y"||a==="y"&&b==="z"){n="x";o=e||1}var u=o+1,w=q+1,ea=h/o,ha=i/q,N=new THREE.Vector3;N[n]=j>0?1:-1;for(h=0;h<w;h++)for(i=0;i<u;i++){var ba=new THREE.Vector3;ba[a]=(i*ea-p)*c;ba[b]=(h*ha-r)*g;ba[n]=j;k.vertices.push(ba)}for(h=0;h<q;h++)for(i=0;i<o;i++){a=
new THREE.Face4(i+u*h+t,i+u*(h+1)+t,i+1+u*(h+1)+t,i+1+u*h+t);a.normal.copy(N);a.vertexNormals.push(N.clone(),N.clone(),N.clone(),N.clone());a.materialIndex=m;k.faces.push(a);k.faceVertexUvs[0].push([new THREE.UV(i/o,1-h/q),new THREE.UV(i/o,1-(h+1)/q),new THREE.UV((i+1)/o,1-(h+1)/q),new THREE.UV((i+1)/o,1-h/q)])}}THREE.Geometry.call(this);var k=this,j=a/2,n=b/2,m=c/2,q,o,r,p,t,u;if(g!==void 0){if(g instanceof Array)this.materials=g;else{this.materials=[];for(q=0;q<6;q++)this.materials.push(g)}q=0;
p=1;o=2;t=3;r=4;u=5}else this.materials=[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(h!=void 0)for(var w in h)this.sides[w]!==void 0&&(this.sides[w]=h[w]);this.sides.px&&i("z","y",-1,-1,c,b,j,q);this.sides.nx&&i("z","y",1,-1,c,b,-j,p);this.sides.py&&i("x","z",1,1,a,c,n,o);this.sides.ny&&i("x","z",1,-1,a,c,-n,t);this.sides.pz&&i("x","y",1,-1,a,b,m,r);this.sides.nz&&i("x","y",-1,-1,a,b,-m,u);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);var a=a!==void 0?a:20,b=b!==void 0?b:20,c=c!==void 0?c:100,g=c/2,d=d||8,f=f||1,h,i,k=[],j=[];for(i=0;i<=f;i++){var n=[],m=[],q=i/f,o=q*(b-a)+a;for(h=0;h<=d;h++){var r=h/d,p=new THREE.Vector3;p.x=o*Math.sin(r*Math.PI*2);p.y=-q*c+g;p.z=o*Math.cos(r*Math.PI*2);this.vertices.push(p);n.push(this.vertices.length-1);m.push(new THREE.UV(r,1-q))}k.push(n);j.push(m)}c=(b-a)/c;for(h=0;h<d;h++){if(a!==0){n=this.vertices[k[0][h]].clone();m=
this.vertices[k[0][h+1]].clone()}else{n=this.vertices[k[1][h]].clone();m=this.vertices[k[1][h+1]].clone()}n.setY(Math.sqrt(n.x*n.x+n.z*n.z)*c).normalize();m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();for(i=0;i<f;i++){var q=k[i][h],o=k[i+1][h],r=k[i+1][h+1],p=k[i][h+1],t=n.clone(),u=n.clone(),w=m.clone(),s=m.clone(),B=j[i][h].clone(),v=j[i+1][h].clone(),x=j[i+1][h+1].clone(),E=j[i][h+1].clone();this.faces.push(new THREE.Face4(q,o,r,p,[t,u,w,s]));this.faceVertexUvs[0].push([B,v,x,E])}}if(!e&&a>
0){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++){q=k[0][h];o=k[0][h+1];r=this.vertices.length-1;t=new THREE.Vector3(0,1,0);u=new THREE.Vector3(0,1,0);w=new THREE.Vector3(0,1,0);B=j[0][h].clone();v=j[0][h+1].clone();x=new THREE.UV(v.u,0);this.faces.push(new THREE.Face3(q,o,r,[t,u,w]));this.faceVertexUvs[0].push([B,v,x])}}if(!e&&b>0){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++){q=k[i][h+1];o=k[i][h];r=this.vertices.length-1;t=new THREE.Vector3(0,-1,0);u=new THREE.Vector3(0,
-1,0);w=new THREE.Vector3(0,-1,0);B=j[i][h+1].clone();v=j[i][h].clone();x=new THREE.UV(v.u,1);this.faces.push(new THREE.Face3(q,o,r,[t,u,w]));this.faceVertexUvs[0].push([B,v,x])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){if(typeof a!=="undefined"){THREE.Geometry.call(this);a=a instanceof Array?a:[a];this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);i.copy(a).addSelf(g);if(h.equals(i))return g.clone();
h.copy(b).addSelf(f);i.copy(c).addSelf(g);f=d.dot(g);g=i.subSelf(h).dot(g);if(f===0){console.log("Either infinite or no solutions!");g===0?console.log("Its finite solutions."):console.log("Too bad, no solutions.")}g=g/f;if(g<0){b=Math.atan2(b.y-a.y,b.x-a.x);a=Math.atan2(c.y-a.y,c.x-a.x);b>a&&(a=a+Math.PI*2);c=(b+a)/2;a=-Math.cos(c);c=-Math.sin(c);return new THREE.Vector2(a,c)}return d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function f(c,d){var e,f;for(N=c.length;--N>=0;){e=N;f=N-1;f<0&&(f=
c.length-1);for(var g=0,h=m+j*2,g=0;g<h;g++){var i=O*g,k=O*(g+1),n=d+e+i,i=d+f+i,o=d+f+k,k=d+e+k,q=c,p=g,r=h,s=e,v=f,n=n+D,i=i+D,o=o+D,k=k+D;M.faces.push(new THREE.Face4(n,i,o,k,null,null,t));n=u.generateSideWallUV(M,a,q,b,n,i,o,k,p,r,s,v);M.faceVertexUvs[0].push(n)}}}function e(a,b,c){M.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c=c+D;d=d+D;e=e+D;M.faces.push(new THREE.Face3(c,d,e,null,null,p));c=f?u.generateBottomUV(M,a,b,c,d,e):u.generateTopUV(M,a,b,c,d,e);M.faceVertexUvs[0].push(c)}
var h=b.amount!==void 0?b.amount:100,i=b.bevelThickness!==void 0?b.bevelThickness:6,k=b.bevelSize!==void 0?b.bevelSize:i-2,j=b.bevelSegments!==void 0?b.bevelSegments:3,n=b.bevelEnabled!==void 0?b.bevelEnabled:true,m=b.steps!==void 0?b.steps:1,q=b.extrudePath,o,r=false,p=b.material,t=b.extrudeMaterial,u=b.UVGenerator!==void 0?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,s,B,v;if(q){o=q.getSpacedPoints(m);r=true;n=false;w=b.frames!==void 0?b.frames:new THREE.TubeGeometry.FrenetFrames(q,m,
false);s=new THREE.Vector3;B=new THREE.Vector3;v=new THREE.Vector3}if(!n)k=i=j=0;var x,E,z,M=this,D=this.vertices.length,q=a.extractPoints(),I=q.shape,q=q.holes,J=!THREE.Shape.Utils.isClockWise(I);if(J){I=I.reverse();E=0;for(z=q.length;E<z;E++){x=q[E];THREE.Shape.Utils.isClockWise(x)&&(q[E]=x.reverse())}J=false}var P=THREE.Shape.Utils.triangulateShape(I,q),J=I;E=0;for(z=q.length;E<z;E++){x=q[E];I=I.concat(x)}var K,L,C,F,O=I.length,ea=P.length,ha=[],N=0,ba=J.length;K=ba-1;for(L=N+1;N<ba;N++,K++,L++){K===
ba&&(K=0);L===ba&&(L=0);ha[N]=d(J[N],J[K],J[L])}var Q=[],qa,xa=ha.concat();E=0;for(z=q.length;E<z;E++){x=q[E];qa=[];N=0;ba=x.length;K=ba-1;for(L=N+1;N<ba;N++,K++,L++){K===ba&&(K=0);L===ba&&(L=0);qa[N]=d(x[N],x[K],x[L])}Q.push(qa);xa=xa.concat(qa)}for(K=0;K<j;K++){x=K/j;C=i*(1-x);L=k*Math.sin(x*Math.PI/2);N=0;for(ba=J.length;N<ba;N++){F=c(J[N],ha[N],L);e(F.x,F.y,-C)}E=0;for(z=q.length;E<z;E++){x=q[E];qa=Q[E];N=0;for(ba=x.length;N<ba;N++){F=c(x[N],qa[N],L);e(F.x,F.y,-C)}}}L=k;for(N=0;N<O;N++){F=n?c(I[N],
xa[N],L):I[N];if(r){B.copy(w.normals[0]).multiplyScalar(F.x);s.copy(w.binormals[0]).multiplyScalar(F.y);v.copy(o[0]).addSelf(B).addSelf(s);e(v.x,v.y,v.z)}else e(F.x,F.y,0)}for(x=1;x<=m;x++)for(N=0;N<O;N++){F=n?c(I[N],xa[N],L):I[N];if(r){B.copy(w.normals[x]).multiplyScalar(F.x);s.copy(w.binormals[x]).multiplyScalar(F.y);v.copy(o[x]).addSelf(B).addSelf(s);e(v.x,v.y,v.z)}else e(F.x,F.y,h/m*x)}for(K=j-1;K>=0;K--){x=K/j;C=i*(1-x);L=k*Math.sin(x*Math.PI/2);N=0;for(ba=J.length;N<ba;N++){F=c(J[N],ha[N],L);
e(F.x,F.y,h+C)}E=0;for(z=q.length;E<z;E++){x=q[E];qa=Q[E];N=0;for(ba=x.length;N<ba;N++){F=c(x[N],qa[N],L);r?e(F.x,F.y+o[m-1].y,o[m-1].x+C):e(F.x,F.y,h+C)}}}if(n){i=O*0;for(N=0;N<ea;N++){h=P[N];g(h[2]+i,h[1]+i,h[0]+i,true)}i=O*(m+j*2);for(N=0;N<ea;N++){h=P[N];g(h[0]+i,h[1]+i,h[2]+i,false)}}else{for(N=0;N<ea;N++){h=P[N];g(h[2],h[1],h[0],true)}for(N=0;N<ea;N++){h=P[N];g(h[0]+O*m,h[1]+O*m,h[2]+O*m,false)}}h=0;f(J,h);h=h+J.length;E=0;for(z=q.length;E<z;E++){x=q[E];f(x,h);h=h+x.length}};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,f,e){b=a.vertices[f].x;f=a.vertices[f].y;c=a.vertices[e].x;e=a.vertices[e].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,f),new THREE.UV(c,e)]},generateBottomUV:function(a,b,c,d,f,e){return this.generateTopUV(a,b,c,d,f,e)},generateSideWallUV:function(a,b,c,d,f,e,g,h){var b=a.vertices[f].x,c=a.vertices[f].y,f=a.vertices[f].z,d=a.vertices[e].x,i=a.vertices[e].y,e=a.vertices[e].z,k=a.vertices[g].x,j=a.vertices[g].y,
g=a.vertices[g].z,n=a.vertices[h].x,m=a.vertices[h].y,a=a.vertices[h].z;return Math.abs(c-i)<0.01?[new THREE.UV(b,1-f),new THREE.UV(d,1-e),new THREE.UV(k,1-g),new THREE.UV(n,1-a)]:[new THREE.UV(c,1-f),new THREE.UV(i,1-e),new THREE.UV(j,1-g),new THREE.UV(m,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);a instanceof Array===false&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){b===void 0&&(b={});var c=b.material,d=b.UVGenerator===void 0?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,f,e,g,h=this.vertices.length;f=a.extractPoints();var i=f.shape,k=f.holes;if(!THREE.Shape.Utils.isClockWise(i)){i=i.reverse();f=0;for(e=k.length;f<e;f++){g=k[f];THREE.Shape.Utils.isClockWise(g)&&(k[f]=g.reverse())}}var j=THREE.Shape.Utils.triangulateShape(i,k);f=0;for(e=k.length;f<e;f++){g=k[f];i=i.concat(g)}k=i.length;e=j.length;for(f=
0;f<k;f++){g=i[f];this.vertices.push(new THREE.Vector3(g.x,g.y,0))}for(f=0;f<e;f++){k=j[f];i=k[2]+h;g=k[1]+h;k=k[0]+h;this.faces.push(new THREE.Face3(i,g,k,null,null,c));this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,i,g,k))}};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);for(var b=b||12,c=c||2*Math.PI,d=[],f=(new THREE.Matrix4).makeRotationZ(c/b),e=0;e<a.length;e++){d[e]=a[e].clone();this.vertices.push(d[e])}for(var g=b+1,c=0;c<g;c++)for(e=0;e<d.length;e++){d[e]=f.multiplyVector3(d[e].clone());this.vertices.push(d[e])}for(c=0;c<b;c++){d=0;for(f=a.length;d<f-1;d++){this.faces.push(new THREE.Face4(c*f+d,(c+1)%g*f+d,(c+1)%g*f+(d+1)%f,c*f+(d+1)%f));this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/f),new THREE.UV(1-
(c+1)/b,d/f),new THREE.UV(1-(c+1)/b,(d+1)/f),new THREE.UV(1-c/b,(d+1)/f)])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var f=a/2,e=b/2,c=c||1,d=d||1,g=c+1,h=d+1,i=a/c,k=b/d,j=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*i-f,-(a*k-e),0));for(a=0;a<d;a++)for(b=0;b<c;b++){f=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a);f.normal.copy(j);f.vertexNormals.push(j.clone(),j.clone(),j.clone(),j.clone());this.faces.push(f);this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),new THREE.UV((b+
1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)])}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,f,e,g){THREE.Geometry.call(this);var a=a||50,d=d!==void 0?d:0,f=f!==void 0?f:Math.PI*2,e=e!==void 0?e:0,g=g!==void 0?g:Math.PI,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),h,i,k=[],j=[];for(i=0;i<=c;i++){var n=[],m=[];for(h=0;h<=b;h++){var q=h/b,o=i/c,r=new THREE.Vector3;r.x=-a*Math.cos(d+q*f)*Math.sin(e+o*g);r.y=a*Math.cos(e+o*g);r.z=a*Math.sin(d+q*f)*Math.sin(e+o*g);this.vertices.push(r);n.push(this.vertices.length-1);m.push(new THREE.UV(q,
1-o))}k.push(n);j.push(m)}for(i=0;i<c;i++)for(h=0;h<b;h++){var d=k[i][h+1],f=k[i][h],e=k[i+1][h],g=k[i+1][h+1],n=this.vertices[d].clone().normalize(),m=this.vertices[f].clone().normalize(),q=this.vertices[e].clone().normalize(),o=this.vertices[g].clone().normalize(),r=j[i][h+1].clone(),p=j[i][h].clone(),t=j[i+1][h].clone(),u=j[i+1][h+1].clone();if(Math.abs(this.vertices[d].y)==a){this.faces.push(new THREE.Face3(d,e,g,[n,q,o]));this.faceVertexUvs[0].push([r,t,u])}else if(Math.abs(this.vertices[e].y)==
a){this.faces.push(new THREE.Face3(d,f,e,[n,m,q]));this.faceVertexUvs[0].push([r,p,t])}else{this.faces.push(new THREE.Face4(d,f,e,g,[n,m,q,o]));this.faceVertexUvs[0].push([r,p,t,u])}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=b.height!==void 0?b.height:50;if(b.bevelThickness===void 0)b.bevelThickness=10;if(b.bevelSize===void 0)b.bevelSize=8;if(b.bevelEnabled===void 0)b.bevelEnabled=false;THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,f){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=f||Math.PI*2;f=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var e=d/this.segmentsT*this.arc,g=c/this.segmentsR*Math.PI*2;f.x=this.radius*Math.cos(e);f.y=this.radius*Math.sin(e);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(e);h.y=(this.radius+this.tube*Math.cos(g))*Math.sin(e);h.z=
this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.segmentsT,c/this.segmentsR));b.push(h.clone().subSelf(f).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){var f=(this.segmentsT+1)*c+d-1,e=(this.segmentsT+1)*(c-1)+d-1,g=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,i=new THREE.Face4(f,e,g,h,[b[f],b[e],b[g],b[h]]);i.normal.addSelf(b[f]);i.normal.addSelf(b[e]);i.normal.addSelf(b[g]);i.normal.addSelf(b[h]);i.normal.normalize();this.faces.push(i);this.faceVertexUvs[0].push([a[f].clone(),
a[e].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,f,e,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a=c/d*a;c=Math.cos(a);g=e*(2+c)*0.5*g;b=e*(2+c)*b*0.5;e=f*e*Math.sin(a)*0.5;return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=f||2;this.q=e||3;this.heightScale=g||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;f=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=
Array(this.segmentsT);for(b=0;b<this.segmentsT;++b){var i=a/this.segmentsR*2*this.p*Math.PI,g=b/this.segmentsT*2*Math.PI,e=h(i,g,this.q,this.p,this.radius,this.heightScale),i=h(i+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(i,e);d.add(i,e);f.cross(c,d);d.cross(f,c);f.normalize();d.normalize();i=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);e.x=e.x+(i*d.x+g*f.x);e.y=e.y+(i*d.y+g*f.y);e.z=e.z+(i*d.z+g*f.z);this.grid[a][b]=this.vertices.push(new THREE.Vector3(e.x,e.y,e.z))-1}}for(a=0;a<
this.segmentsR;++a)for(b=0;b<this.segmentsT;++b){var f=(a+1)%this.segmentsR,e=(b+1)%this.segmentsT,c=this.grid[a][b],d=this.grid[f][b],f=this.grid[f][e],e=this.grid[a][e],g=new THREE.UV(a/this.segmentsR,b/this.segmentsT),i=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),k=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),j=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,f,e));this.faceVertexUvs[0].push([g,i,k,j])}this.computeCentroids();this.computeFaceNormals();
this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,f,e){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=f||false;if(e)this.debug=new THREE.Object3D;this.grid=[];var g,h,e=this.segments+1,i,k,j,n=new THREE.Vector3,m,q,o,b=new THREE.TubeGeometry.FrenetFrames(a,b,f);m=b.tangents;q=b.normals;o=b.binormals;this.tangents=m;this.normals=q;this.binormals=o;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);j=a.getPointAt(d);d=m[b];g=q[b];h=o[b];if(this.debug){this.debug.add(new THREE.ArrowHelper(d,
j,c,255));this.debug.add(new THREE.ArrowHelper(g,j,c,16711680));this.debug.add(new THREE.ArrowHelper(h,j,c,65280))}for(d=0;d<this.segmentsRadius;d++){i=d/this.segmentsRadius*2*Math.PI;k=-this.radius*Math.cos(i);i=this.radius*Math.sin(i);n.copy(j);n.x=n.x+(k*g.x+i*h.x);n.y=n.y+(k*g.y+i*h.y);n.z=n.z+(k*g.z+i*h.z);this.grid[b][d]=this.vertices.push(new THREE.Vector3(n.x,n.y,n.z))-1}}for(b=0;b<this.segments;b++)for(d=0;d<this.segmentsRadius;d++){e=f?(b+1)%this.segments:b+1;n=(d+1)%this.segmentsRadius;
a=this.grid[b][d];c=this.grid[e][d];e=this.grid[e][n];n=this.grid[b][n];m=new THREE.UV(b/this.segments,d/this.segmentsRadius);q=new THREE.UV((b+1)/this.segments,d/this.segmentsRadius);o=new THREE.UV((b+1)/this.segments,(d+1)/this.segmentsRadius);g=new THREE.UV(b/this.segments,(d+1)/this.segmentsRadius);this.faces.push(new THREE.Face4(a,c,e,n));this.faceVertexUvs[0].push([m,q,o,g])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var f=[],e=[],g=[],h=new THREE.Vector3,i=new THREE.Matrix4,b=b+1,k,j,n;this.tangents=f;this.normals=e;this.binormals=g;for(k=0;k<b;k++){j=k/(b-1);f[k]=a.getTangentAt(j);f[k].normalize()}e[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(f[0].x);j=Math.abs(f[0].y);n=Math.abs(f[0].z);if(k<=a){a=k;d.set(1,0,0)}if(j<=a){a=j;d.set(0,1,0)}n<=a&&d.set(0,0,1);h.cross(f[0],d).normalize();
e[0].cross(f[0],h);g[0].cross(f[0],e[0]);for(k=1;k<b;k++){e[k]=e[k-1].clone();g[k]=g[k-1].clone();h.cross(f[k-1],f[k]);if(h.length()>1E-4){h.normalize();d=Math.acos(f[k-1].dot(f[k]));i.makeRotationAxis(h,d).multiplyVector3(e[k])}g[k].cross(f[k],e[k])}if(c){d=Math.acos(e[0].dot(e[b-1]));d=d/(b-1);f[0].dot(h.cross(e[0],e[b-1]))>0&&(d=-d);for(k=1;k<b;k++){i.makeRotationAxis(f[k],d*k).multiplyVector3(e[k]);g[k].cross(f[k],e[k])}}};
THREE.PolyhedronGeometry=function(a,b,c,d){function f(a){var b=a.normalize().clone();b.index=i.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function e(a,b,c,d){if(d<1){d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3);d.normal=d.centroid.clone().normalize();i.faces.push(d);d=Math.atan2(d.centroid.z,-d.centroid.x);
i.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])}else{d=d-1;e(a,g(a,b),g(a,c),d);e(g(a,b),b,g(b,c),d);e(g(a,c),g(b,c),c,d);e(g(a,b),g(b,c),g(a,c),d)}}function g(a,b){n[a.index]||(n[a.index]=[]);n[b.index]||(n[b.index]=[]);var c=n[a.index][b.index];c===void 0&&(n[a.index][b.index]=n[b.index][a.index]=c=f((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){c<0&&a.u===1&&(a=new THREE.UV(a.u-1,a.v));b.x===0&&b.z===0&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,i=this,k=0,j=a.length;k<j;k++)f(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));for(var n=[],a=this.vertices,k=0,j=b.length;k<j;k++)e(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(j=this.vertices.length;k<j;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var f=this.vertices,e=this.faces,g=this.faceVertexUvs[0],d=d===void 0?false:d,h,i,k,j,n=b+1;for(h=0;h<=c;h++){j=h/c;for(i=0;i<=b;i++){k=i/b;k=a(k,j);f.push(k)}}var m,q,o,r;for(h=0;h<c;h++)for(i=0;i<b;i++){a=h*n+i;f=h*n+i+1;j=(h+1)*n+i;k=(h+1)*n+i+1;m=new THREE.UV(i/b,h/c);q=new THREE.UV((i+1)/b,h/c);o=new THREE.UV(i/b,(h+1)/c);r=new THREE.UV((i+1)/b,(h+1)/c);if(d){e.push(new THREE.Face3(a,f,j));e.push(new THREE.Face3(f,k,j));g.push([m,
q,o]);g.push([q,r,o])}else{e.push(new THREE.Face4(a,f,k,j));g.push([m,q,r,o])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var f=d,e=a[f].clone(),g=e.length();e.x=e.x+g*(Math.random()-0.5)*2E-6;e.y=e.y+g*(Math.random()-0.5)*2E-6;e.z=e.z+g*(Math.random()-0.5)*2E-6;for(var g=[],h=0;h<c.length;){var i=c[h],k=e,j=a[i[0]],n;n=j;var m=a[i[1]],q=a[i[2]],o=new THREE.Vector3,r=new THREE.Vector3;o.sub(q,m);r.sub(n,m);o.crossSelf(r);o.isZero()||o.normalize();n=
o;j=n.dot(j);if(n.dot(k)>=j){for(k=0;k<3;k++){j=[i[k],i[(k+1)%3]];n=true;for(m=0;m<g.length;m++)if(g[m][0]===j[1]&&g[m][1]===j[0]){g[m]=g[g.length-1];g.pop();n=false;break}n&&g.push(j)}c[h]=c[c.length-1];c.pop()}else h++}for(m=0;m<g.length;m++)c.push([g[m][0],g[m][1],f])}f=0;e=Array(a.length);for(d=0;d<c.length;d++){g=c[d];for(h=0;h<3;h++){if(e[g[h]]===void 0){e[g[h]]=f++;this.vertices.push(a[g[h]])}g[h]=e[g[h]]}}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=
0;d<this.faces.length;d++){g=this.faces[d];this.faceVertexUvs[0].push([b(this.vertices[g.a]),b(this.vertices[g.b]),b(this.vertices[g.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3);a.vertices.push(new THREE.Vector3(0,100,0));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(c);
c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);d===void 0&&(d=16776960);c===void 0&&(c=20);var f=new THREE.Geometry;f.vertices.push(new THREE.Vector3(0,0,0));f.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(f,new THREE.LineBasicMaterial({color:d}));this.add(this.line);f=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(f,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);if(b instanceof THREE.Vector3)this.position=
b;this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a),a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));d.pointMap[a]===void 0&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=false;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,f,e){THREE.CameraHelper.__v.set(d,f,e);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(a!==void 0){d=0;for(f=a.length;d<f;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=true};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=a===void 0?1:a;this.useOldVertexColors=false;this.supportUVs=true;this.debug=false};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;b-- >0;)this.smooth(a)};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){j.debug&&console.log.apply(console,arguments)}function c(){console&&console.log.apply(console,arguments)}function d(a,c,d,f,g,h,m){var n=new THREE.Face4(a,c,d,f,null,g.color,g.materialIndex);if(j.useOldVertexColors){n.vertexColors=[];for(var o,q,p,r=0;r<4;r++){p=h[r];o=new THREE.Color;o.setRGB(0,0,0);for(var t=0;t<p.length;t++){q=g.vertexColors[p[t]-1];o.r=o.r+q.r;o.g=o.g+q.g;o.b=o.b+q.b}o.r=o.r/p.length;o.g=o.g/p.length;o.b=o.b/
p.length;n.vertexColors[r]=o}}i.push(n);if(j.supportUVs){g=[e(a,""),e(c,m),e(d,m),e(f,m)];g[0]?g[1]?g[2]?g[3]?k.push(g):b("d :( ",f+":"+m):b("c :( ",d+":"+m):b("b :( ",c+":"+m):b("a :( ",a+":"+m)}}function f(a,b){return Math.min(a,b)+"_"+Math.max(a,b)}function e(a,d){var e=a+":"+d,f=p[e];if(!f){a>=t&&a<t+m.length?b("face pt"):b("edge pt");c("warning, UV not found for",e);return null}return f}function g(a,b,d){var e=a+":"+b;e in p?c("dup vertexNo",a,"oldFaceNo",b,"value",d,"key",e,p[e]):p[e]=d}var h=
[],i=[],k=[],j=this,n=a.vertices,m=a.faces,h=n.concat(),q=[],o={},r={},p={},t=n.length,u,w,s,B,v,x=a.faceVertexUvs[0];b("originalFaces, uvs, originalVerticesLength",m.length,x.length,t);if(j.supportUVs){u=0;for(w=x.length;u<w;u++){s=0;for(B=x[u].length;s<B;s++){v=m[u]["abcd".charAt(s)];g(v,u,x[u][s])}}}if(x.length==0)j.supportUVs=false;u=0;for(var E in p)u++;if(!u){j.supportUVs=false;b("no uvs")}b("-- Original Faces + Vertices UVs completed",p,"vs",x.length);var z;u=0;for(w=m.length;u<w;u++){v=m[u];
q.push(v.centroid);h.push(v.centroid);if(j.supportUVs){z=new THREE.UV;if(v instanceof THREE.Face3){z.u=e(v.a,u).u+e(v.b,u).u+e(v.c,u).u;z.v=e(v.a,u).v+e(v.b,u).v+e(v.c,u).v;z.u=z.u/3;z.v=z.v/3}else if(v instanceof THREE.Face4){z.u=e(v.a,u).u+e(v.b,u).u+e(v.c,u).u+e(v.d,u).u;z.v=e(v.a,u).v+e(v.b,u).v+e(v.c,u).v+e(v.d,u).v;z.u=z.u/4;z.v=z.v/4}g(t+u,"",z)}}b("-- added UVs for new Faces",p);E=function(a,b){M[a]===void 0&&(M[a]=[]);M[a].push(b)};var M={},x=0;for(w=a.faces.length;x<w;x++){v=a.faces[x];
if(v instanceof THREE.Face3){z=f(v.a,v.b);E(z,x);z=f(v.b,v.c);E(z,x);z=f(v.c,v.a);E(z,x)}else if(v instanceof THREE.Face4){z=f(v.a,v.b);E(z,x);z=f(v.b,v.c);E(z,x);z=f(v.c,v.d);E(z,x);z=f(v.d,v.a);E(z,x)}}w=M;var D=0,I,J;E={};x={};for(u in w){z=w[u];I=u.split("_");J=I[0];I=I[1];s=J;v=[J,I];E[s]===void 0&&(E[s]=[]);E[s].push(v);s=I;v=[J,I];E[s]===void 0&&(E[s]=[]);E[s].push(v);s=0;for(B=z.length;s<B;s++){v=z[s];var P=J,K=v,L=u;x[P]===void 0&&(x[P]={});x[P][K]=L;P=I;K=u;x[P]===void 0&&(x[P]={});x[P][v]=
K}z.length<2&&(r[u]=true)}b("vertexEdgeMap",E,"vertexFaceMap",x);for(u in w){z=w[u];v=z[0];B=z[1];I=u.split("_");J=I[0];I=I[1];z=new THREE.Vector3;if(r[u]){z.addSelf(n[J]);z.addSelf(n[I]);z.multiplyScalar(0.5)}else{z.addSelf(q[v]);z.addSelf(q[B]);z.addSelf(n[J]);z.addSelf(n[I]);z.multiplyScalar(0.25)}o[u]=t+m.length+D;h.push(z);D++;if(j.supportUVs){z=new THREE.UV;z.u=e(J,v).u+e(I,v).u;z.v=e(J,v).v+e(I,v).v;z.u=z.u/2;z.v=z.v/2;g(o[u],v,z);if(!r[u]){z=new THREE.UV;z.u=e(J,B).u+e(I,B).u;z.v=e(J,B).v+
e(I,B).v;z.u=z.u/2;z.v=z.v/2;g(o[u],B,z)}}}b("-- Step 2 done");var C,F;I=["123","12","2","23"];B=["123","23","3","31"];var P=["123","31","1","12"],K=["1234","12","2","23"],L=["1234","23","3","34"],O=["1234","34","4","41"],ea=["1234","41","1","12"];u=0;for(w=q.length;u<w;u++){v=m[u];z=t+u;if(v instanceof THREE.Face3){D=f(v.a,v.b);J=f(v.b,v.c);C=f(v.c,v.a);d(z,o[D],v.b,o[J],v,I,u);d(z,o[J],v.c,o[C],v,B,u);d(z,o[C],v.a,o[D],v,P,u)}else if(v instanceof THREE.Face4){D=f(v.a,v.b);J=f(v.b,v.c);C=f(v.c,v.d);
F=f(v.d,v.a);d(z,o[D],v.b,o[J],v,K,u);d(z,o[J],v.c,o[C],v,L,u);d(z,o[C],v.d,o[F],v,O,u);d(z,o[F],v.a,o[D],v,ea,u)}else b("face should be a face!",v)}o=new THREE.Vector3;v=new THREE.Vector3;u=0;for(w=n.length;u<w;u++)if(E[u]!==void 0){o.set(0,0,0);v.set(0,0,0);J=new THREE.Vector3(0,0,0);z=0;for(s in x[u]){o.addSelf(q[s]);z++}I=0;D=E[u].length;for(s=0;s<D;s++)r[f(E[u][s][0],E[u][s][1])]&&I++;if(I!=2){o.divideScalar(z);for(s=0;s<D;s++){z=E[u][s];z=n[z[0]].clone().addSelf(n[z[1]]).divideScalar(2);v.addSelf(z)}v.divideScalar(D);
J.addSelf(n[u]);J.multiplyScalar(D-3);J.addSelf(o);J.addSelf(v.multiplyScalar(2));J.divideScalar(D);h[u]=J}}a.vertices=h;a.faces=i;a.faceVertexUvs[0]=k;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare=function(a,b,c,d,f){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;a!==void 0&&this.add(a,b,c,d,f)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,f,e){b===void 0&&(b=-1);c===void 0&&(c=0);e===void 0&&(e=1);f===void 0&&(f=new THREE.Color(16777215));if(d===void 0)d=THREE.NormalBlending;c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:e,color:f,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=-this.positionScreen.x*2,f=-this.positionScreen.y*2;for(a=0;a<b;a++){c=this.lensFlares[a];c.x=this.positionScreen.x+d*c.distance;c.y=this.positionScreen.y+f*c.distance;c.wantedRotation=c.x*Math.PI*0.25;c.rotation=c.rotation+(c.wantedRotation-c.rotation)*0.25}};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:false,time:0,direction:1,weight:1,directionBackwards:false,mirroredLoop:false};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},f=this.geometry,e=0,g=f.morphTargets.length;e<g;e++){var h=f.morphTargets[e].name.match(b);if(h&&h.length>1){var i=h[1];d[i]||(d[i]={start:Infinity,end:-Infinity});h=d[i];if(e<h.start)h.start=e;if(e>h.end)h.end=e;c||(c=i)}}for(i in d){h=d[i];this.createAnimation(i,h.start,h.end,a)}this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a]){a.direction=1;a.directionBackwards=false}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a]){a.direction=-1;a.directionBackwards=true}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];if(c){c.fps=b;c.duration=(c.end-c.start)/c.fps}};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];if(c){c.duration=b;c.fps=(c.end-c.start)/c.duration}};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];if(c)c.weight=b};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];if(c)c.time=b};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];if(b){b.time=0;b.active=true}else console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=false};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var f=d.duration/d.length;d.time=d.time+d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||d.time<0){d.direction=d.direction*-1;if(d.time>d.duration){d.time=d.duration;d.directionBackwards=true}if(d.time<0){d.time=0;d.directionBackwards=false}}}else{d.time=d.time%d.duration;if(d.time<0)d.time=d.time+d.duration}var e=d.startFrame+THREE.Math.clamp(Math.floor(d.time/
f),0,d.length-1),g=d.weight;if(e!==d.currentFrame){this.morphTargetInfluences[d.lastFrame]=0;this.morphTargetInfluences[d.currentFrame]=1*g;this.morphTargetInfluences[e]=0;d.lastFrame=d.currentFrame;d.currentFrame=e}f=d.time%f/f;d.directionBackwards&&(f=1-f);this.morphTargetInfluences[d.currentFrame]=f*g;this.morphTargetInfluences[d.lastFrame]=(1-f)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,f,e,g,h,i,k,j,n,m,q;this.init=function(o){b=o.context;c=o;d=new Float32Array(16);f=new Uint16Array(6);o=0;d[o++]=-1;d[o++]=-1;d[o++]=0;d[o++]=0;d[o++]=1;d[o++]=-1;d[o++]=1;d[o++]=
0;d[o++]=1;d[o++]=1;d[o++]=1;d[o++]=1;d[o++]=-1;d[o++]=1;d[o++]=0;d[o++]=1;o=0;f[o++]=0;f[o++]=1;f[o++]=2;f[o++]=0;f[o++]=2;f[o++]=3;e=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);h=b.createTexture();i=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,i);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);if(b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0){k=false;j=a(THREE.ShaderFlares.lensFlare)}else{k=true;j=a(THREE.ShaderFlares.lensFlareVertexTexture)}n={};m={};n.vertex=b.getAttribLocation(j,"position");n.uv=b.getAttribLocation(j,"uv");m.renderType=b.getUniformLocation(j,"renderType");m.map=b.getUniformLocation(j,"map");m.occlusionMap=b.getUniformLocation(j,"occlusionMap");m.opacity=b.getUniformLocation(j,"opacity");m.color=b.getUniformLocation(j,
"color");m.scale=b.getUniformLocation(j,"scale");m.rotation=b.getUniformLocation(j,"rotation");m.screenPosition=b.getUniformLocation(j,"screenPosition");q=false};this.render=function(a,d,f,t){var a=a.__webglFlares,u=a.length;if(u){var w=new THREE.Vector3,s=t/f,B=f*0.5,v=t*0.5,x=16/t,E=new THREE.Vector2(x*s,x),z=new THREE.Vector3(1,1,0),M=new THREE.Vector2(1,1),D=m,x=n;b.useProgram(j);if(!q){b.enableVertexAttribArray(n.vertex);b.enableVertexAttribArray(n.uv);q=true}b.uniform1i(D.occlusionMap,0);b.uniform1i(D.map,
1);b.bindBuffer(b.ARRAY_BUFFER,e);b.vertexAttribPointer(x.vertex,2,b.FLOAT,false,16,0);b.vertexAttribPointer(x.uv,2,b.FLOAT,false,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(false);var I,J,P,K,L;for(I=0;I<u;I++){x=16/t;E.set(x*s,x);K=a[I];w.set(K.matrixWorld.elements[12],K.matrixWorld.elements[13],K.matrixWorld.elements[14]);d.matrixWorldInverse.multiplyVector3(w);d.projectionMatrix.multiplyVector3(w);z.copy(w);M.x=z.x*B+B;M.y=z.y*v+v;if(k||M.x>0&&M.x<f&&M.y>0&&
M.y<t){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,M.x-8,M.y-8,16,16,0);b.uniform1i(D.renderType,0);b.uniform2f(D.scale,E.x,E.y);b.uniform3f(D.screenPosition,z.x,z.y,z.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,i);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,M.x-8,M.y-8,16,16,0);b.uniform1i(D.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);K.positionScreen.copy(z);K.customUpdateCallback?K.customUpdateCallback(K):K.updateLensFlares();b.uniform1i(D.renderType,2);b.enable(b.BLEND);J=0;for(P=K.lensFlares.length;J<P;J++){L=K.lensFlares[J];if(L.opacity>0.001&&L.scale>0.001){z.x=L.x;z.y=L.y;z.z=L.z;x=L.size*L.scale/t;E.x=x*s;E.y=x;b.uniform3f(D.screenPosition,z.x,z.y,z.z);b.uniform2f(D.scale,E.x,E.y);b.uniform1f(D.rotation,L.rotation);b.uniform1f(D.opacity,L.opacity);
b.uniform3f(D.color,L.color.r,L.color.g,L.color.b);c.setBlending(L.blending,L.blendEquation,L.blendSrc,L.blendDst);c.setTexture(L.texture,1);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,f,e,g=new THREE.Frustum,h=new THREE.Matrix4,i=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;var g=THREE.ShaderLib.depthRGBA,h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:true});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:true,skinning:true});c._shadowPass=true;d._shadowPass=true;f._shadowPass=true;e._shadowPass=true};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(j,n){var m,q,o,r,p,t,u,w,s,B=[];r=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(true);m=0;for(q=j.__lights.length;m<q;m++){o=j.__lights[m];if(o.castShadow)if(o instanceof THREE.DirectionalLight&&o.shadowCascade)for(p=0;p<o.shadowCascadeCount;p++){var v;if(o.shadowCascadeArray[p])v=o.shadowCascadeArray[p];else{s=o;u=p;v=new THREE.DirectionalLight;v.isVirtual=true;v.onlyShadow=true;v.castShadow=true;v.shadowCameraNear=s.shadowCameraNear;v.shadowCameraFar=s.shadowCameraFar;v.shadowCameraLeft=s.shadowCameraLeft;v.shadowCameraRight=
s.shadowCameraRight;v.shadowCameraBottom=s.shadowCameraBottom;v.shadowCameraTop=s.shadowCameraTop;v.shadowCameraVisible=s.shadowCameraVisible;v.shadowDarkness=s.shadowDarkness;v.shadowBias=s.shadowCascadeBias[u];v.shadowMapWidth=s.shadowCascadeWidth[u];v.shadowMapHeight=s.shadowCascadeHeight[u];v.pointsWorld=[];v.pointsFrustum=[];w=v.pointsWorld;t=v.pointsFrustum;for(var x=0;x<8;x++){w[x]=new THREE.Vector3;t[x]=new THREE.Vector3}w=s.shadowCascadeNearZ[u];s=s.shadowCascadeFarZ[u];t[0].set(-1,-1,w);
t[1].set(1,-1,w);t[2].set(-1,1,w);t[3].set(1,1,w);t[4].set(-1,-1,s);t[5].set(1,-1,s);t[6].set(-1,1,s);t[7].set(1,1,s);v.originalCamera=n;t=new THREE.Gyroscope;t.position=o.shadowCascadeOffset;t.add(v);t.add(v.target);n.add(t);o.shadowCascadeArray[p]=v;console.log("Created virtualLight",v)}u=o;w=p;s=u.shadowCascadeArray[w];s.position.copy(u.position);s.target.position.copy(u.target.position);s.lookAt(s.target);s.shadowCameraVisible=u.shadowCameraVisible;s.shadowDarkness=u.shadowDarkness;s.shadowBias=
u.shadowCascadeBias[w];t=u.shadowCascadeNearZ[w];u=u.shadowCascadeFarZ[w];s=s.pointsFrustum;s[0].z=t;s[1].z=t;s[2].z=t;s[3].z=t;s[4].z=u;s[5].z=u;s[6].z=u;s[7].z=u;B[r]=v;r++}else{B[r]=o;r++}}m=0;for(q=B.length;m<q;m++){o=B[m];if(!o.shadowMap){o.shadowMap=new THREE.WebGLRenderTarget(o.shadowMapWidth,o.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat});o.shadowMapSize=new THREE.Vector2(o.shadowMapWidth,o.shadowMapHeight);o.shadowMatrix=new THREE.Matrix4}if(!o.shadowCamera){if(o instanceof
THREE.SpotLight)o.shadowCamera=new THREE.PerspectiveCamera(o.shadowCameraFov,o.shadowMapWidth/o.shadowMapHeight,o.shadowCameraNear,o.shadowCameraFar);else if(o instanceof THREE.DirectionalLight)o.shadowCamera=new THREE.OrthographicCamera(o.shadowCameraLeft,o.shadowCameraRight,o.shadowCameraTop,o.shadowCameraBottom,o.shadowCameraNear,o.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}j.add(o.shadowCamera);b.autoUpdateScene&&j.updateMatrixWorld()}if(o.shadowCameraVisible&&
!o.cameraHelper){o.cameraHelper=new THREE.CameraHelper(o.shadowCamera);o.shadowCamera.add(o.cameraHelper)}if(o.isVirtual&&v.originalCamera==n){p=n;r=o.shadowCamera;t=o.pointsFrustum;s=o.pointsWorld;i.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(u=0;u<8;u++){w=s[u];w.copy(t[u]);THREE.ShadowMapPlugin.__projector.unprojectVector(w,p);r.matrixWorldInverse.multiplyVector3(w);if(w.x<i.x)i.x=w.x;if(w.x>k.x)k.x=w.x;if(w.y<i.y)i.y=w.y;if(w.y>k.y)k.y=w.y;if(w.z<i.z)i.z=w.z;if(w.z>
k.z)k.z=w.z}r.left=i.x;r.right=k.x;r.top=k.y;r.bottom=i.y;r.updateProjectionMatrix()}r=o.shadowMap;t=o.shadowMatrix;p=o.shadowCamera;p.position.copy(o.matrixWorld.getPosition());p.lookAt(o.target.matrixWorld.getPosition());p.updateMatrixWorld();p.matrixWorldInverse.getInverse(p.matrixWorld);if(o.cameraHelper)o.cameraHelper.visible=o.shadowCameraVisible;o.shadowCameraVisible&&o.cameraHelper.update();t.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);t.multiplySelf(p.projectionMatrix);t.multiplySelf(p.matrixWorldInverse);
if(!p._viewMatrixArray)p._viewMatrixArray=new Float32Array(16);if(!p._projectionMatrixArray)p._projectionMatrixArray=new Float32Array(16);p.matrixWorldInverse.flattenToArray(p._viewMatrixArray);p.projectionMatrix.flattenToArray(p._projectionMatrixArray);h.multiply(p.projectionMatrix,p.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(r);b.clear();s=j.__webglObjects;o=0;for(r=s.length;o<r;o++){u=s[o];t=u.object;u.render=false;if(t.visible&&t.castShadow&&(!(t instanceof THREE.Mesh)||!t.frustumCulled||
g.contains(t))){t._modelViewMatrix.multiply(p.matrixWorldInverse,t.matrixWorld);u.render=true}}o=0;for(r=s.length;o<r;o++){u=s[o];if(u.render){t=u.object;u=u.buffer;w=t.customDepthMaterial?t.customDepthMaterial:t instanceof THREE.SkinnedMesh?t.geometry.morphTargets.length?e:f:t.geometry.morphTargets.length?d:c;u instanceof THREE.BufferGeometry?b.renderBufferDirect(p,j.__lights,null,w,u,t):b.renderBuffer(p,j.__lights,null,w,u,t)}}s=j.__webglObjectsImmediate;o=0;for(r=s.length;o<r;o++){u=s[o];t=u.object;
if(t.visible&&t.castShadow){t._modelViewMatrix.multiply(p.matrixWorldInverse,t.matrixWorld);b.renderImmediateObject(p,j.__lights,null,c,t)}}}m=b.getClearColor();q=b.getClearAlpha();a.clearColor(m.r,m.g,m.b,q);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,f,e,g,h,i,k,j;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);f=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;f[a++]=0;f[a++]=1;f[a++]=2;f[a++]=0;f[a++]=2;f[a++]=3;e=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,e);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,f,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,m=b.createProgram(),q=b.createShader(b.FRAGMENT_SHADER),o=b.createShader(b.VERTEX_SHADER);b.shaderSource(q,a.fragmentShader);b.shaderSource(o,a.vertexShader);b.compileShader(q);b.compileShader(o);b.attachShader(m,q);b.attachShader(m,o);b.linkProgram(m);h=m;i={};k={};i.position=b.getAttribLocation(h,"position");i.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,
"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");j=false};this.render=function(d,f,q,o){var d=d.__webglSprites,r=d.length;if(r){var p=i,t=k,u=o/q,q=q*0.5,w=o*0.5,s=true;b.useProgram(h);if(!j){b.enableVertexAttribArray(p.position);b.enableVertexAttribArray(p.uv);j=true}b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(true);b.bindBuffer(b.ARRAY_BUFFER,e);b.vertexAttribPointer(p.position,2,b.FLOAT,false,16,0);b.vertexAttribPointer(p.uv,2,b.FLOAT,false,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.uniformMatrix4fv(t.projectionMatrix,false,f._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(t.map,0);for(var B,v=[],p=0;p<r;p++){B=d[p];if(B.visible&&B.opacity!==0)if(B.useScreenCoordinates)B.z=-B.position.z;else{B._modelViewMatrix.multiply(f.matrixWorldInverse,B.matrixWorld);B.z=-B._modelViewMatrix.elements[14]}}d.sort(a);for(p=0;p<r;p++){B=d[p];if(B.visible&&B.opacity!==0&&B.map&&B.map.image&&B.map.image.width){if(B.useScreenCoordinates){b.uniform1i(t.useScreenCoordinates,1);
b.uniform3f(t.screenPosition,(B.position.x-q)/q,(w-B.position.y)/w,Math.max(0,Math.min(1,B.position.z)))}else{b.uniform1i(t.useScreenCoordinates,0);b.uniform1i(t.affectedByDistance,B.affectedByDistance?1:0);b.uniformMatrix4fv(t.modelViewMatrix,false,B._modelViewMatrix.elements)}f=B.map.image.width/(B.scaleByViewport?o:1);v[0]=f*u*B.scale.x;v[1]=f*B.scale.y;b.uniform2f(t.uvScale,B.uvScale.x,B.uvScale.y);b.uniform2f(t.uvOffset,B.uvOffset.x,B.uvOffset.y);b.uniform2f(t.alignment,B.alignment.x,B.alignment.y);
b.uniform1f(t.opacity,B.opacity);b.uniform3f(t.color,B.color.r,B.color.g,B.color.b);b.uniform1f(t.rotation,B.rotation);b.uniform2fv(t.scale,v);if(B.mergeWith3D&&!s){b.enable(b.DEPTH_TEST);s=true}else if(!B.mergeWith3D&&s){b.disable(b.DEPTH_TEST);s=false}c.setBlending(B.blending,B.blendEquation,B.blendSrc,B.blendDst);c.setTexture(B.map,0);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0)}}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(true)}}};
THREE.DepthPassPlugin=function(){this.enabled=false;this.renderTarget=null;var a,b,c,d,f=new THREE.Frustum,e=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;var e=THREE.ShaderLib.depthRGBA,f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:true});c._shadowPass=true;d._shadowPass=true};this.render=
function(a,b){this.enabled&&this.update(a,b)};this.update=function(g,h){var i,k,j,n,m,q;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(true);b.autoUpdateScene&&g.updateMatrixWorld();if(!h._viewMatrixArray)h._viewMatrixArray=new Float32Array(16);if(!h._projectionMatrixArray)h._projectionMatrixArray=new Float32Array(16);h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);e.multiply(h.projectionMatrix,
h.matrixWorldInverse);f.setFromMatrix(e);b.setRenderTarget(this.renderTarget);b.clear();q=g.__webglObjects;i=0;for(k=q.length;i<k;i++){j=q[i];m=j.object;j.render=false;if(m.visible&&(!(m instanceof THREE.Mesh)||!m.frustumCulled||f.contains(m))){m._modelViewMatrix.multiply(h.matrixWorldInverse,m.matrixWorld);j.render=true}}i=0;for(k=q.length;i<k;i++){j=q[i];if(j.render){m=j.object;j=j.buffer;m.material&&b.setMaterialFaces(m.material);n=m.customDepthMaterial?m.customDepthMaterial:m.geometry.morphTargets.length?
d:c;j instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,n,j,m):b.renderBuffer(h,g.__lights,null,n,j,m)}}q=g.__webglObjectsImmediate;i=0;for(k=q.length;i<k;i++){j=q[i];m=j.object;if(m.visible&&m.castShadow){m._modelViewMatrix.multiply(h.matrixWorldInverse,m.matrixWorld);b.renderImmediateObject(h,g.__lights,null,c,m)}}i=b.getClearColor();k=b.getClearAlpha();a.clearColor(i.r,i.g,i.b,k);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
THREE.SceneLoaderEx=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoaderEx.prototype.constructor=THREE.SceneLoaderEx;
THREE.SceneLoaderEx.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState===4)if(d.status===200||d.status===0){var f=JSON.parse(d.responseText);c.parse(f,b,a)}else console.error("THREE.SceneLoaderEx: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,true);d.send(null)};THREE.SceneLoaderEx.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoaderEx.prototype.parse=function(a,b,c){function d(a,b){return b=="relativeToHTML"?a:k+a}function f(a,b){for(var c in b)if(C.objects[c]===void 0){var d=b[c],e=null;if(d.geometry!==void 0){if(z=C.geometries[d.geometry]){e=false;if(d.materials===void 0)d.materials=[];M=C.materials[d.materials[0]];(e=M instanceof THREE.ShaderMaterial)&&z.computeTangents();w=d.position===void 0?[0,0,0]:d.position;s=d.rotation===void 0?[0,0,0]:d.rotation;B=d.quaternion===void 0?[1,0,0,0]:d.quaternion;v=d.scale===
void 0?[1,1,1]:d.scale;p=d.matrix;B=0;d.materials.length===0&&(M=new THREE.MeshFaceMaterial);d.materials.length>1&&(M=new THREE.MeshFaceMaterial);if(d.morph){e=new THREE.MorphAnimMesh(z,M);if(d.duration!==void 0)e.duration=d.duration;if(d.time!==void 0)e.time=d.time;if(d.mirroredLoop!==void 0)e.mirroredLoop=d.mirroredLoop;M.morphNormals&&z.computeMorphNormals()}else e=new THREE.Mesh(z,M);e.name=c;if(p){e.matrixAutoUpdate=false;e.matrix.set(p[0],p[1],p[2],p[3],p[4],p[5],p[6],p[7],p[8],p[9],p[10],p[11],
p[12],p[13],p[14],p[15])}else{e.position.set(w[0],w[1],w[2]);if(B){e.quaternion.set(B[0],B[1],B[2],B[3]);e.useQuaternion=true}else e.rotation.set(s[0],s[1],s[2]);e.scale.set(v[0],v[1],v[2])}e.visible=d.visible===void 0?true:d.visible;e.castShadow=d.castShadow;e.receiveShadow=d.receiveShadow;if(d.groups)for(var g=d.groups.length,h=0;h<g;h++){var i=d.groups[h];null==C.groups[i]&&(C.groups[i]=[]);C.groups[i].push(e)}a.add(e);C.objects[c]=e}}else{w=d.position===void 0?[0,0,0]:d.position;s=d.rotation===
void 0?[0,0,0]:d.rotation;B=d.quaternion===void 0?[1,0,0,0]:d.quaternion;v=d.scale===void 0?[1,1,1]:d.scale;B=0;e=new THREE.Object3D;e.name=c;e.position.set(w[0],w[1],w[2]);if(B){e.quaternion.set(B[0],B[1],B[2],B[3]);e.useQuaternion=true}else e.rotation.set(s[0],s[1],s[2]);e.scale.set(v[0],v[1],v[2]);e.visible=d.visible===void 0?true:d.visible;a.add(e);C.objects[c]=e;C.empties[c]=e}if(e){if(d.properties!==void 0)for(var j in d.properties)e.properties[j]=d.properties[j];d.children!==void 0&&f(e,d.children)}}}
function e(a){return function(b){void 0!==F.geometries[a].subdivisionModifier&&(new THREE.SubdivisionModifier(F.geometries[a].subdivisionModifier)).modify(b);C.geometries[a]=b;f(C.scene,F.objects);J=J-1;i.onLoadComplete();h()}}function g(a){return function(b){C.geometries[a]=b}}function h(){i.callbackProgress({totalModels:K,totalTextures:L,loadedModels:K-J,loadedTextures:L-P},C);i.onLoadProgress();J===0&&P===0&&b(C)}var i=this,k=THREE.Loader.prototype.extractUrlBase(c),j,n,m,q,o,r,p,t,u,w,s,B,v,x,
E,z,M,D,I,J,P,K,L,C,F=a;if(F.urlBaseType===void 0)F.urlBaseType="relativeToScene";if(F.type===void 0)F.type="scene";for(t in this.geometryHandlerMap)this.geometryHandlerMap[t].loaderObject=new this.geometryHandlerMap[t].loaderClass;P=J=0;C={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{},appData:{}};if(F.transform){a=F.transform.position;t=F.transform.rotation;x=F.transform.scale;a&&C.scene.position.set(a[0],a[1],a[2]);t&&C.scene.rotation.set(t[0],
t[1],t[2]);x&&C.scene.scale.set(x[0],x[1],x[2]);if(a||t||x){C.scene.updateMatrix();C.scene.updateMatrixWorld()}}if(F.appData)C.appData=F.appData;a=function(a){return function(){P=P-a;h();i.onLoadComplete()}};for(q in F.cameras){x=F.cameras[q];x.type==="perspective"?D=new THREE.PerspectiveCamera(x.fov,x.aspect,x.near,x.far):x.type==="ortho"&&(D=new THREE.OrthographicCamera(x.left,x.right,x.top,x.bottom,x.near,x.far));w=x.position;t=x.target;x=x.up;D.position.set(w[0],w[1],w[2]);D.target=new THREE.Vector3(t[0],
t[1],t[2]);x&&D.up.set(x[0],x[1],x[2]);C.cameras[q]=D}for(m in F.lights){t=F.lights[m];q=t.color!==void 0?t.color:16777215;D=t.intensity!==void 0?t.intensity:1;if(t.type==="directional"){w=t.direction;u=new THREE.DirectionalLight(q,D);u.position.set(w[0],w[1],w[2]);u.position.normalize()}else if(t.type==="point"){w=t.position;u=t.distance;u=new THREE.PointLight(q,D,u);u.position.set(w[0],w[1],w[2])}else t.type==="ambient"&&(u=new THREE.AmbientLight(q));C.scene.add(u);C.lights[m]=u}for(o in F.fogs){m=
F.fogs[o];m.type==="linear"?I=new THREE.Fog(0,m.near,m.far):m.type==="exp2"&&(I=new THREE.FogExp2(0,m.density));x=m.color;I.color.setRGB(x[0],x[1],x[2]);C.fogs[o]=I}if(F.defaults===void 0)F.defaults={};if(C.cameras&&F.defaults.camera)C.currentCamera=C.cameras[F.defaults.camera];if(C.fogs&&F.defaults.fog)C.scene.fog=C.fogs[F.defaults.fog];x=F.defaults.bgcolor===void 0?[0,0,0]:F.defaults.bgcolor;C.bgColor=new THREE.Color;C.bgColor.setRGB(x[0],x[1],x[2]);C.bgColorAlpha=F.defaults.bgalpha===void 0?1:
F.defaults.bgalpha;for(j in F.geometries){m=F.geometries[j];if(m.type in this.geometryHandlerMap){J=J+1;i.onLoadStart()}}K=J;for(j in F.geometries){m=F.geometries[j];if(m.type==="cube"){z=new THREE.CubeGeometry(m.width,m.height,m.depth,m.segmentsWidth,m.segmentsHeight,m.segmentsDepth,null,m.flipped,m.sides);C.geometries[j]=z}else if(m.type==="plane"){z=new THREE.PlaneGeometry(m.width,m.height,m.segmentsWidth,m.segmentsHeight);C.geometries[j]=z}else if(m.type==="sphere"){z=new THREE.SphereGeometry(m.radius,
m.segmentsWidth,m.segmentsHeight);C.geometries[j]=z}else if(m.type==="cylinder"){z=new THREE.CylinderGeometry(m.topRad,m.botRad,m.height,m.radSegs,m.heightSegs);C.geometries[j]=z}else if(m.type==="torus"){z=new THREE.TorusGeometry(m.radius,m.tube,m.segmentsR,m.segmentsT);C.geometries[j]=z}else if(m.type==="icosahedron"){z=new THREE.IcosahedronGeometry(m.radius,m.subdivisions);C.geometries[j]=z}else if(m.type in this.geometryHandlerMap){o={};for(var O in m)O!=="type"&&O!=="url"&&(o[O]=m[O]);I=this.geometryHandlerMap[m.type].loaderObject;
m=d(m.url,F.urlBaseType);u=e(j);I.load(m,u,o)}else if(m.type==="embedded"){o=F.embeds[m.id];o.metadata=F.metadata;o&&this.geometryHandlerMap.ascii.loaderObject.createModel(o,g(j),"")}else throw"Unknown Geometry type: "+m.type+" in "+c;}for(r in F.textures){c=F.textures[r];if(c.url instanceof Array){P=P+c.url.length;for(j=0;j<c.url.length;j++)i.onLoadStart()}else{P=P+1;i.onLoadStart()}}L=P;for(r in F.textures){c=F.textures[r];if(c.mapping!==void 0&&THREE[c.mapping]!==void 0)c.mapping=new THREE[c.mapping];
if(c.url instanceof Array){O=c.url.length;o=[];for(j=0;j<O;j++)o[j]=d(c.url[j],F.urlBaseType);j=(j=o[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(o,c.mapping,a(O)):THREE.ImageUtils.loadTextureCube(o,c.mapping,a(O))}else{j=c.url.toLowerCase().endsWith(".dds");O=d(c.url,F.urlBaseType);o=a(1);j=j?THREE.ImageUtils.loadCompressedTexture(O,c.mapping,o):THREE.ImageUtils.loadTexture(O,c.mapping,o);if(THREE[c.minFilter]!==void 0)j.minFilter=THREE[c.minFilter];if(THREE[c.magFilter]!==void 0)j.magFilter=
THREE[c.magFilter];if(c.anisotropy)j.anisotropy=c.anisotropy;if(c.repeat){j.repeat.set(c.repeat[0],c.repeat[1]);if(c.repeat[0]!==1)j.wrapS=THREE.RepeatWrapping;if(c.repeat[1]!==1)j.wrapT=THREE.RepeatWrapping}c.offset&&j.offset.set(c.offset[0],c.offset[1]);if(c.wrap){O={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(O[c.wrap[0]]!==void 0)j.wrapS=O[c.wrap[0]];if(O[c.wrap[1]]!==void 0)j.wrapT=O[c.wrap[1]]}}C.textures[r]=j}r=F.materials;for(n in r){p=r[n];if(p.type===void 0)p.type=
"MeshLambertMaterial";if(p.parameters.blending===void 0)p.parameters.blending="NormalBlending";for(E in p.parameters)if(E==="envMap"||E==="map"||E==="lightMap"||E==="bumpMap")p.parameters[E]=C.textures[p.parameters[E]];else if(E==="shading")p.parameters[E]=p.parameters[E]==="flat"?THREE.FlatShading:THREE.SmoothShading;else if(E==="side")p.parameters[E]=p.parameters[E]=="double"?THREE.DoubleSide:p.parameters[E]=="back"?THREE.BackSide:THREE.FrontSide;else if(E==="blending")p.parameters[E]=p.parameters[E]in
THREE?THREE[p.parameters[E]]:THREE.NormalBlending;else if(E==="combine")p.parameters[E]=p.parameters[E]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;else if(E==="vertexColors")if(p.parameters[E]=="face")p.parameters[E]=THREE.FaceColors;else{if(p.parameters[E])p.parameters[E]=THREE.VertexColors}else if(E==="wrapRGB"){a=p.parameters[E];p.parameters[E]=new THREE.Vector3(a[0],a[1],a[2])}if(p.parameters.opacity!==void 0&&p.parameters.opacity<1)p.parameters.transparent=true;if(p.parameters.normalMap){a=
THREE.ShaderUtils.lib.normal;c=THREE.UniformsUtils.clone(a.uniforms);j=p.parameters.color;O=p.parameters.specular;o=p.parameters.ambient;I=p.parameters.shininess;c.tNormal.value=C.textures[p.parameters.normalMap];p.parameters.normalScale&&c.uNormalScale.value.set(p.parameters.normalScale[0],p.parameters.normalScale[1]);if(p.parameters.map){c.tDiffuse.value=p.parameters.map;c.enableDiffuse.value=true}if(p.parameters.envMap){c.tCube.value=p.parameters.envMap;c.enableReflection.value=true;c.uReflectivity.value=
p.parameters.reflectivity}if(p.parameters.lightMap){c.tAO.value=p.parameters.lightMap;c.enableAO.value=true}if(p.parameters.specularMap){c.tSpecular.value=C.textures[p.parameters.specularMap];c.enableSpecular.value=true}if(p.parameters.displacementMap){c.tDisplacement.value=C.textures[p.parameters.displacementMap];c.enableDisplacement.value=true;c.uDisplacementBias.value=p.parameters.displacementBias;c.uDisplacementScale.value=p.parameters.displacementScale}c.uDiffuseColor.value.setHex(j);c.uSpecularColor.value.setHex(O);
c.uAmbientColor.value.setHex(o);c.uShininess.value=I;if(p.parameters.opacity)c.uOpacity.value=p.parameters.opacity;M=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:c,lights:true,fog:true})}else M=new THREE[p.type](p.parameters);C.materials[n]=M}f(C.scene,F.objects);i.callbackSync(C);h()};
THREE.ColladaLoader=function(){function a(a,d,f){na=a;d=d||Ga;if(f!==void 0){a=f.split("/");a.pop();za=(a.length<1?".":a.join("/"))+"/"}if((a=na.evaluate("//dae:asset",na,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(f=0;f<a.childNodes.length;f++){var i=a.childNodes[f];switch(i.nodeName){case "unit":(i=i.getAttribute("meter"))&&parseFloat(i);break;case "up_axis":Da=i.textContent.charAt(0)}}if(!la.convertUpAxis||Da===la.upAxis)$a=null;else switch(Da){case "X":$a=la.upAxis===
"Y"?"XtoY":"XtoZ";break;case "Y":$a=la.upAxis==="X"?"YtoX":"YtoZ";break;case "Z":$a=la.upAxis==="X"?"ZtoX":"ZtoY"}Qa=b("//dae:library_images/dae:image",g,"image");Ha=b("//dae:library_materials/dae:material",z,"material");kb=b("//dae:library_effects/dae:effect",P,"effect");Ba=b("//dae:library_geometries/dae:geometry",p,"geometry");fb=b(".//dae:library_cameras/dae:camera",ea,"camera");Xa=b("//dae:library_controllers/dae:controller",h,"controller");ja=b("//dae:library_animations/dae:animation",L,"animation");
Ca=b(".//dae:library_visual_scenes/dae:visual_scene",j,"visual_scene");eb=[];pa=[];if(a=na.evaluate(".//dae:scene/dae:instance_visual_scene",na,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext()){a=a.getAttribute("url").replace(/^#/,"");oa=Ca[a.length>0?a:"visual_scene0"]}else oa=null;sa=new THREE.Object3D;for(a=0;a<oa.nodes.length;a++)sa.add(e(oa.nodes[a]));db=[];c(sa);a={scene:sa,morphs:eb,skins:pa,animations:db,dae:{images:Qa,materials:Ha,cameras:fb,effects:kb,geometries:Ba,controllers:Xa,
animations:ja,visualScenes:Ca,scene:oa}};d&&d(a);return a}function b(a,b,c){for(var a=na.evaluate(a,na,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||e.id.length==0)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=oa.getChildById(a.name,true),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};db.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=Math.max(d.length,
b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function f(a,b,c){var e,
f=Xa[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var c=1E6,g=-c,h=0;for(e in ja)for(var i=ja[e],j=0;j<i.sampler.length;j++){var k=i.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);h=Math.max(h,k.input.length)}e=h;for(var b=oa.getChildById(b.skeleton[0],true)||oa.getChildBySid(b.skeleton[0],true),m,n,g=new THREE.Vector3,
o,j=0;j<a.vertices.length;j++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[j]);for(c=0;c<e;c++){h=[];i=[];for(j=0;j<a.vertices.length;j++)i.push(new THREE.Vector3);d(b,h,c);j=h;k=f.skin;for(n=0;n<j.length;n++){m=j[n];o=-1;if(m.type=="JOINT"){for(var q=0;q<k.joints.length;q++)if(m.sid==k.joints[q]){o=q;break}if(o>=0){q=k.invBindMatrices[o];m.invBindMatrix=q;m.skinningMatrix=new THREE.Matrix4;m.skinningMatrix.multiply(m.world,q);m.weights=[];for(q=0;q<k.weights.length;q++)for(var p=0;p<k.weights[q].length;p++){var r=
k.weights[q][p];r.joint==o&&m.weights.push(r)}}else throw"ColladaLoader: Could not find joint '"+m.sid+"'.";}}for(j=0;j<h.length;j++)if(h[j].type=="JOINT")for(k=0;k<h[j].weights.length;k++){m=h[j].weights[k];n=m.index;m=m.weight;o=a.vertices[n];n=i[n];g.x=o.x;g.y=o.y;g.z=o.z;h[j].skinningMatrix.multiplyVector3(g);n.x=n.x+g.x*m;n.y=n.y+g.y*m;n.z=n.z+g.z*m}a.morphTargets.push({name:"target_"+c,vertices:i})}}}function e(a){var b=new THREE.Object3D,c,d,g,h;for(g=0;g<a.controllers.length;g++){var i=Xa[a.controllers[g].url];
switch(i.type){case "skin":if(Ba[i.skin.source]){var j=new r;j.url=i.skin.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j);c=a.controllers[g]}else if(Xa[i.skin.source]){d=i=Xa[i.skin.source];if(i.morph&&Ba[i.morph.source]){j=new r;j.url=i.morph.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j)}}break;case "morph":if(Ba[i.morph.source]){j=new r;j.url=i.morph.source;j.instance_material=a.controllers[g].instance_material;a.geometries.push(j);
d=a.controllers[g]}console.log("ColladaLoader: Morph-controller partially supported.")}}j={};for(g=0;g<a.geometries.length;g++){h=a.geometries[g];var i=h.instance_material,k=Ba[h.url],m={},n=[],o=0,p;if(k&&k.mesh&&k.mesh.primitives){if(b.name.length==0)b.name=k.id;if(i)for(h=0;h<i.length;h++){p=i[h];var t=Ha[p.target],s=kb[t.instance_effect.url].shader.material;if(k.doubleSided){if(!(s in j)){var u=s.clone();u.side=THREE.DoubleSide;j[s]=u}s=j[s]}s.opacity=!s.opacity?1:s.opacity;m[p.symbol]=o;n.push(s);
p=s;p.name=t.name==null||t.name===""?t.id:t.name;o++}i=p||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide});k=k.mesh.geometry3js;if(o>1){i=new THREE.MeshFaceMaterial;k.materials=n;for(h=0;h<k.faces.length;h++){n=k.faces[h];n.materialIndex=m[n.daeMaterial]}}if(c!==void 0){f(k,c);i.morphTargets=true;i=new THREE.SkinnedMesh(k,i,false);i.skeleton=c.skeleton;i.skinController=Xa[c.url];i.skinInstanceController=c;i.name="skin_"+
pa.length;pa.push(i)}else if(d!==void 0){h=k;m=d instanceof q?Xa[d.url]:d;if(!m||!m.morph)console.log("could not find morph controller!");else{m=m.morph;for(n=0;n<m.targets.length;n++){o=Ba[m.targets[n]];if(o.mesh&&o.mesh.primitives&&o.mesh.primitives.length){o=o.mesh.primitives[0].geometry;o.vertices.length===h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:o.vertices})}}h.morphTargets.push({name:"target_Z",vertices:h.vertices})}i.morphTargets=true;i=new THREE.Mesh(k,i);i.name="morph_"+
eb.length;eb.push(i)}else i=new THREE.Mesh(k,i);a.geometries.length>1?b.add(i):b=i}}for(g=0;g<a.cameras.length;g++){b=fb[a.cameras[g].url];b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar)}b.name=a.id||"";b.matrix=a.matrix;g=a.matrix.decompose();b.position=g[0];b.quaternion=g[1];b.useQuaternion=true;b.scale=g[2];if(la.centerGeometry&&b.geometry){g=THREE.GeometryUtils.center(b.geometry);b.quaternion.multiplyVector3(g.multiplySelf(b.scale));b.position.subSelf(g)}for(g=0;g<a.nodes.length;g++)b.add(e(a.nodes[g],
a));return b}function g(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=null}function i(){this.weights=this.targets=this.source=this.method=null}function k(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function j(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function n(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function m(){this.type=this.sid="";this.data=[];this.obj=null}function q(){this.url="";this.skeleton=[];this.instance_material=[]}function o(){this.target=this.symbol=""}function r(){this.url="";this.instance_material=[]}function p(){this.id="";this.mesh=null}function t(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function u(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function w(){u.call(this);
this.vcount=[]}function s(){u.call(this);this.vcount=3}function B(){this.source="";this.stride=this.count=0;this.params=[]}function v(){this.input={}}function x(){this.semantic="";this.offset=0;this.source="";this.set=0}function E(a){this.id=a;this.type=null}function z(){this.name=this.id="";this.instance_effect=null}function M(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function D(a,b){this.type=
a;this.effect=b;this.material=null}function I(a){this.effect=a;this.format=this.init_from=null}function J(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function P(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function K(){this.url=""}function L(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function C(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function F(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function O(a){this.targets=[];this.time=a}function ea(){this.technique=this.name=this.id=""}function ha(){this.url=""}function N(a){return a=="dae"?"http://www.collada.org/2005/11/COLLADASchema":null}function ba(a){for(var a=qa(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function Q(a){for(var a=
qa(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function qa(a){return a.length>0?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function xa(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function da(a,b){a.doubleSided=false;var c=na.evaluate(".//dae:extra//dae:double_sided",b,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c)if((c=c.iterateNext())&&parseInt(c.textContent,10)===1)a.doubleSided=true}function Y(a,b){if(la.convertUpAxis&&Da!==la.upAxis)switch($a){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1];a[1]=a[2];a[2]=b*c}}function S(a,b){var c=[a[b],a[b+1],a[b+2]];Y(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function R(a){if(la.convertUpAxis){var b=[a[0],a[4],a[8]];Y(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];Y(b,-1);a[1]=b[0];a[5]=b[1];a[9]=
b[2];b=[a[2],a[6],a[10]];Y(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];Y(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];Y(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];Y(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];Y(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function ia(a){if(la.convertUpAxis)switch(a){case "X":switch($a){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch($a){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch($a){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var na=null,sa=null,oa,Ga=null,va={},Qa={},ja={},Xa={},Ba={},Ha={},kb={},fb={},db,Ca,za,eb,pa,Ta=THREE.SmoothShading,la={centerGeometry:false,convertUpAxis:false,subdivideFaces:true,upAxis:"Y",defaultEnvMap:null},Da="Y",$a=null,gb=Math.PI/180;g.prototype.parse=
function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeName=="init_from")this.init_from=c.textContent}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new k).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new i).parse(c);this.type=c.nodeName}}return this};
i.prototype.parse=function(a){var b={},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(e.nodeType==1)switch(e.nodeName){case "source":e=(new E).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++){a=c[d];e=b[a.source];switch(a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}}return this};
i.prototype.parseInputs=function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "input":b.push((new x).parse(d))}}return b};k.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(f.nodeType==1)switch(f.nodeName){case "bind_shape_matrix":f=ba(f.textContent);this.bindShapeMatrix=
R(f);break;case "source":f=(new E).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};k.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "input":var d=(new x).parse(d),e=b[d.source];if(d.semantic=="JOINT")this.joints=e.read();else if(d.semantic=="INV_BIND_MATRIX")this.invBindMatrices=e.read()}}};
k.prototype.parseWeights=function(a,b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(g.nodeType==1)switch(g.nodeName){case "input":e.push((new x).parse(g));break;case "v":c=Q(g.textContent);break;case "vcount":d=Q(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],i=[],j=0;j<h;j++){for(var k={},m=0;m<e.length;m++){var n=e[m],o=c[g+n.offset];switch(n.semantic){case "JOINT":k.joint=o;break;case "WEIGHT":k.weight=b[n.source].data[o]}}i.push(k);g=g+e.length}for(j=0;j<
i.length;j++)i[j].index=f;this.weights.push(i)}};j.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};j.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};j.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==
1)switch(c.nodeName){case "node":this.nodes.push((new n).parse(c))}}return this};n.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=e.indexOf(".")>=0,g=e.indexOf("(")>=0,h;if(f){d=e.split(".");e=d.shift();d.shift()}else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a){c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h};return c}}return null};
n.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};n.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};n.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};n.prototype.parse=
function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type=this.type=="JOINT"?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++){b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "node":this.nodes.push((new n).parse(b));break;case "instance_camera":this.cameras.push((new ha).parse(b));
break;case "instance_controller":this.controllers.push((new q).parse(b));break;case "instance_geometry":this.geometries.push((new r).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=na.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",na,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new n).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new m).parse(b));
break;case "extra":break;default:console.log(b.nodeName)}}a=[];c=1E6;b=-1E6;for(var d in ja)for(var e=ja[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];if(d==this.id){h.create();g.sampler=h;c=Math.min(c,h.startTime);b=Math.max(b,h.endTime);a.push(g)}}if(a.length){this.startTime=c;this.endTime=b}if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var i=this.channels[c],f=i.fullSid,g=i.sampler,h=g.input,j=this.getTransformBySid(i.sid),
k;if(i.arrIndices){k=[];b=0;for(var o=i.arrIndices.length;b<o;b++){var p=k,t=b,s=i.arrIndices[b];if(s>-1&&s<3){s=ia(["X","Y","Z"][s]);s={X:0,Y:1,Z:2}[s]}p[t]=s}}else k=ia(i.member);if(j){a.indexOf(f)===-1&&a.push(f);b=0;for(o=h.length;b<o;b++){for(var p=h[b],i=g.getData(j.type,b),t=null,s=0,u=d.length;s<u&&t==null;s++){var v=d[s];if(v.time===p)t=v;else if(v.time>p)break}if(!t){t=new O(p);s=-1;u=0;for(v=d.length;u<v&&s==-1;u++)d[u].time>=p&&(s=u);p=s;d.splice(p==-1?d.length:p,0,t)}t.addTarget(f,j,
k,i)}}else console.log('Could not find transform "'+i.sid+'" in node '+this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++){t=d[b];if(!t.hasTarget(e)){h=d;f=t;k=b;g=e;j=void 0;a:{j=k?k-1:0;for(j=j>=0?j:j+h.length;j>=0;j--){o=h[j];if(o.hasTarget(g)){j=o;break a}}j=null}o=void 0;a:{for(k=k+1;k<h.length;k++){o=h[k];if(o.hasTarget(g))break a}o=null}if(j&&o){h=(f.time-j.time)/(o.time-j.time);j=j.getTarget(g);k=o.getTarget(g).data;o=j.data;i=void 0;if(j.type==="matrix")i=o;else if(o.length){i=
[];for(p=0;p<o.length;++p)i[p]=o[p]+(k[p]-o[p])*h}else i=o+(k-o)*h;f.addTarget(g,j.transform,j.member,i)}}}}this.keys=d;this.sids=a}this.updateMatrix();return this};n.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};m.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=ba(a.textContent);this.convert();return this};m.prototype.convert=function(){switch(this.type){case "matrix":this.obj=
R(this.data);break;case "rotate":this.angle=this.data[3]*gb;case "translate":Y(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":Y(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};m.prototype.apply=function(a){switch(this.type){case "matrix":a.multiplySelf(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,
this.angle);break;case "scale":a.scale(this.obj)}};m.prototype.update=function(a,b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(b.length===1)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0];this.obj.n24=a[1];this.obj.n34=a[2];this.obj.n44=
a[3]}else b.length===2?this.obj["n"+(b[0]+1)+(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(a);break;case "translate":case "scale":Object.prototype.toString.call(b)==="[object Array]"&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0];this.obj.y=a[1];this.obj.z=a[2]}break;case "rotate":Object.prototype.toString.call(b)==="[object Array]"&&(b=c[b[0]]);switch(b){case "X":this.obj.x=
a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;case "ANGLE":this.angle=a*gb;break;default:this.obj.x=a[0];this.obj.y=a[1];this.obj.z=a[2];this.angle=a[3]*gb}}};q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType===1)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=na.evaluate(".//dae:instance_material",
c,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;){this.instance_material.push((new o).parse(d));d=c.iterateNext()}}}return this};o.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};r.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1&&c.nodeName=="bind_material"){if(a=
na.evaluate(".//dae:instance_material",c,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;){this.instance_material.push((new o).parse(b));b=a.iterateNext()}break}}return this};p.prototype.parse=function(a){this.id=a.getAttribute("id");da(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new t(this)).parse(c)}}return this};t.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");va[d]==void 0&&(va[d]=(new E(d)).parse(c));break;case "vertices":this.vertices=(new v).parse(c);break;case "triangles":this.primitives.push((new s).parse(c));break;case "polygons":this.primitives.push((new u).parse(c));break;case "polylist":this.primitives.push((new w).parse(c))}}this.geometry3js=new THREE.Geometry;a=va[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b=b+3)this.geometry3js.vertices.push(S(a,b).clone());
for(b=0;b<this.primitives.length;b++){a=this.primitives[b];a.setVertices(this.vertices);this.handlePrimitive(a,this.geometry3js)}this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();if(this.geometry3js.calcNormals){this.geometry3js.computeVertexNormals();delete this.geometry3js.calcNormals}this.geometry3js.computeBoundingBox();return this};t.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,i,j,k,m=0,n=3,o=0,p=[];for(c=0;c<f.length;c++){g=f[c];n=g.offset+1;
o=o<n?n:o;switch(g.semantic){case "TEXCOORD":p.push(g.set)}}for(var q=0;q<e.length;++q)for(var r=e[q],t=0;t<r.length;){var s=[],u=[],v=null,w=[],n=a.vcount?a.vcount.length?a.vcount[m++]:a.vcount:r.length/o;for(c=0;c<n;c++)for(d=0;d<f.length;d++){g=f[d];j=va[g.source];h=r[t+c*o+g.offset];k=j.accessor.params.length;i=h*k;switch(g.semantic){case "VERTEX":s.push(h);break;case "NORMAL":u.push(S(j.data,i));break;case "TEXCOORD":v=v||{};v[g.set]===void 0&&(v[g.set]=[]);v[g.set].push(new THREE.UV(j.data[i],
j.data[i+1]));break;case "COLOR":w.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}}if(u.length==0)if(g=this.vertices.input.NORMAL){j=va[g.source];k=j.accessor.params.length;c=0;for(h=s.length;c<h;c++)u.push(S(j.data,s[c]*k))}else b.calcNormals=true;if(!v){v={};if(g=this.vertices.input.TEXCOORD){p.push(g.set);j=va[g.source];k=j.accessor.params.length;c=0;for(h=s.length;c<h;c++){i=s[c]*k;v[g.set]===void 0&&(v[g.set]=[]);v[g.set].push(new THREE.UV(j.data[i],1-j.data[i+1]))}}}if(w.length==
0)if(g=this.vertices.input.COLOR){j=va[g.source];k=j.accessor.params.length;c=0;for(h=s.length;c<h;c++){i=s[c]*k;w.push((new THREE.Color).setRGB(j.data[i],j.data[i+1],j.data[i+2]))}}d=null;g=[];if(n===3)g.push(new THREE.Face3(s[0],s[1],s[2],u,w.length?w:new THREE.Color));else if(n===4)g.push(new THREE.Face4(s[0],s[1],s[2],s[3],u,w.length?w:new THREE.Color));else if(n>4&&la.subdivideFaces){w=w.length?w:new THREE.Color;for(d=1;d<n-1;)g.push(new THREE.Face3(s[0],s[d],s[d+1],[u[0],u[d++],u[d]],w))}if(g.length){c=
0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<p.length;d++){s=v[p[d]];s=n>4?[s[0],s[c+1],s[c+2]]:n===4?[s[0],s[1],s[2],s[3]]:[s[0],s[1],s[2]];b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]);b.faceVertexUvs[d].push(s)}}}else console.log("dropped face with vcount "+n+" for geometry with id: "+b.id);t=t+o*n}};u.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)if(this.inputs[b].source==a.id)this.inputs[b].source=a.input.POSITION.source};u.prototype.parse=
function(a){this.material=a.getAttribute("material");this.count=xa(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new x).parse(a.childNodes[b]));break;case "vcount":this.vcount=Q(c.textContent);break;case "p":this.p.push(Q(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};w.prototype=Object.create(u.prototype);s.prototype=Object.create(u.prototype);B.prototype.parse=function(a){this.params=
[];this.source=a.getAttribute("source");this.count=xa(a,"count",0);this.stride=xa(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeName=="param"){var d={};d.name=c.getAttribute("name");d.type=c.getAttribute("type");this.params.push(d)}}return this};v.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="input"){var c=(new x).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};x.prototype.parse=
function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=xa(a,"set",-1);this.offset=xa(a,"offset",0);if(this.semantic=="TEXCOORD"&&this.set<0)this.set=0;return this};E.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=qa(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push(d[f]=="true"||d[f]=="1"?true:false);this.data=e;this.type=
c.nodeName;break;case "float_array":this.data=ba(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=Q(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=qa(c.textContent);this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if(c.childNodes[d].nodeName=="accessor"){this.accessor=(new B).parse(c.childNodes[d]);break}}}return this};E.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;
case "float4x4":for(b=0;b<this.data.length;b=b+16){var c=this.data.slice(b,b+16),c=R(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+b.type+".")}return a};z.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="instance_effect"){this.instance_effect=(new K).parse(a.childNodes[b]);break}return this};M.prototype.isColor=function(){return this.texture==null};
M.prototype.isTexture=function(){return this.texture!=null};M.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "color":c=ba(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture");this.texcoord=c.getAttribute("texcoord");this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1};this.parseTexture(c)}}return this};
M.prototype.parseTexture=function(a){if(!a.childNodes)return this;if(a.childNodes[1]&&a.childNodes[1].nodeName==="extra"){a=a.childNodes[1];a.childNodes[1]&&a.childNodes[1].nodeName==="technique"&&(a=a.childNodes[1])}for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=
c.textContent}}return this};D.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=(new M).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=na.evaluate(".//dae:float",c,N,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;){f.push(e);e=d.iterateNext()}d=
f;d.length>0&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};D.prototype.create=function(){var a={},b=this.transparency!==void 0&&this.transparency<1,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=this[c];if(d instanceof M)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=Qa[this.effect.surface.init_from];if(e){e=THREE.ImageUtils.loadTexture(za+e.init_from);
e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping;e.offset.x=d.texOpts.offsetU;e.offset.y=d.texOpts.offsetV;e.repeat.x=d.texOpts.repeatU;e.repeat.y=d.texOpts.repeatV;a.map=e;c==="emission"&&(a.emissive=16777215)}}}else if(c==="diffuse"||!b)c==="emission"?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];if(a[c]>0)a.envMap=la.defaultEnvMap;
a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=this[c];if(this[c]!==1)a.envMap=la.defaultEnvMap;break;case "transparency":if(b){a.transparent=true;a.opacity=this[c];b=true}}a.shading=Ta;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case "constant":a.color=a.emission;this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":a.color=a.diffuse;this.material=new THREE.MeshPhongMaterial(a);break;default:a.color=a.diffuse;
this.material=new THREE.MeshLambertMaterial(a)}return this.material};I.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};J.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "source":this.source=
c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+c.nodeName)}}return this};P.prototype.create=function(){if(this.shader==null)return null};P.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");da(this,
a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};P.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "surface":this.surface=(new I(this)).parse(d);this.surface.sid=b;break;case "sampler2D":this.sampler=(new J(this)).parse(d);this.sampler.sid=
b;break;case "extra":break;default:console.log(d.nodeName)}}};P.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(d.nodeType==1)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);break;case "image":d=(new g).parse(d);Qa[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};P.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=(new D(c.nodeName,this)).parse(c)}}};K.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};L.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "animation":var c=(new L).parse(c),d;for(d in c.source)this.source[d]=
c.source[d];for(var e=0;e<c.channel.length;e++){this.channel.push(c.channel[e]);this.sampler.push(c.sampler[e])}break;case "source":d=(new E).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new F(this)).parse(c));break;case "channel":this.channel.push((new C(this)).parse(c))}}return this};C.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=b.shift(),c=a.indexOf(".")>=
0,d=a.indexOf("(")>=0;if(c){b=a.split(".");this.sid=b.shift();this.member=b.shift()}else if(d){b=a.split("(");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};F.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "input":this.inputs.push((new x).parse(c))}}return this};
F.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=
0;a<this.input.length;a++){this.startTime=Math.min(this.startTime,this.input[a]);this.endTime=Math.max(this.endTime,this.input[a])}this.duration=this.endTime-this.startTime}};F.prototype.getData=function(a,b){var c;if(a==="matrix"&&this.strideOut===16)c=this.output[b];else if(this.strideOut>1){c=[];for(var b=b*this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(this.strideOut===3)switch(a){case "rotate":case "translate":Y(c,-1);break;case "scale":Y(c,1)}else this.strideOut===4&&a==="matrix"&&
Y(c,-1)}else c=this.output[b];return c};O.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};O.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};O.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};O.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===
a)return true;return false};O.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if(d.transform.type!=="matrix"&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(f<0||f>1){console.log("Key.interpolate: Warning! Scale out of bounds:"+f);f=f<0?0:1}if(h.length)for(var e=[],i=0;i<h.length;++i)e[i]=h[i]+(g[i]-h[i])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};ea.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(c.nodeType==1)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};ea.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if(a.childNodes[b].nodeName=="technique_common")for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++){this.technique=c.childNodes[d].nodeName;if(this.technique=="perspective")for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];
switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if(this.technique=="orthographic"){e=c.childNodes[d];for(f=0;f<e.childNodes.length;f++){g=e.childNodes[f];switch(g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=
g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}}}return this};ha.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=new XMLHttpRequest;f.onreadystatechange=function(){if(f.readyState==4){if(f.status==0||f.status==200)if(f.responseXML){Ga=c;a(f.responseXML,void 0,b)}else if(f.responseText){Ga=c;var g=(new DOMParser).parseFromString(f.responseText,
"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+b+")")}else if(f.readyState==3&&d){e==0&&(e=f.getResponseHeader("Content-Length"));d({total:e,loaded:f.responseText.length})}};f.open("GET",b,true);f.send(null)}else alert("Don't know how to parse XML!")},parse:a,setPreferredShading:function(a){Ta=a},applySkin:f,geometries:Ba,options:la}};
THREE.Mesh.prototype.bakeTransformsIntoGeometry=function(){this.updateMatrix();var a=THREE.GeometryUtils.clone(this.geometry);a.applyMatrix(this.matrix);this.geometry=a;this.geometry.computeBoundingSphere();this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.quaternion=new THREE.Quaternion};
THREE.Mesh.prototype.cloneEx=function(a,b){var c;c=b?THREE.GeometryUtils.clone(this.geometry):this.geometry;c=new THREE.Mesh(c,this.material);this.cloneBuilder_(c);if(a)for(var d=this.children.length,f=0;f<d;f++){var e=this.children[f].cloneEx(a,b);c.add(e)}return c};THREE.Mesh.prototype.clone=function(){return this.cloneEx(false,false)};
THREE.Mesh.prototype.extractPositionFromGeometry=function(){var a=THREE.GeometryUtils.clone(this.geometry),b=a.getDimensions();a.mergeVertices();for(var c=-1*b.x/2-a.boundingBox.x[0],d=-1*b.y/2-a.boundingBox.y[0],b=-1*b.z/2-a.boundingBox.z[0],f=a.vertices.length,e=0;e<f;e++){a.vertices[e].position.x=a.vertices[e].position.x+c;a.vertices[e].position.y=a.vertices[e].position.y+d;a.vertices[e].position.z=a.vertices[e].position.z+b}a.computeBoundingBox();a.computeBoundingSphere();this.geometry=a;this.position.x=
this.position.x-c;this.position.y=this.position.y-d;this.position.z=this.position.z-b};THREE.Object3D.prototype.removeAllChildren=function(){for(var a=this.children.length,b=[],c=0;c<a;c++){var d=this.children[c];b.push(d)}for(c=0;c<a;c++){d=b.pop();this.remove(d)}};THREE.Object3D.prototype.getDescendantsBoundingBox=function(){};
THREE.Object3D.prototype.cloneBuilder_=function(a){a.name=this.name;a.properties=this.properties;a.parent=this.parent;a.up=this.up.clone();a.position=this.position.clone();a.rotation=this.rotation.clone();a.eulerOrder=this.eulerOrder;a.scale=this.scale.clone();a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.renderDepth=this.renderDepth;a.matrix=this.matrix.clone();a.matrixWorld=this.matrixWorld.clone();a.matrixRotationWorld=this.matrixRotationWorld.clone();a.matrixAutoUpdate=
this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion=this.quaternion.clone();a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a._vector=this._vector.clone()};
THREE.Object3D.prototype.cloneEx=function(a,b){var c=new THREE.Object3D;this.cloneBuilder_(c);if(a)for(var d=this.children.length,f=0;f<d;f++){var e=this.children[f].cloneEx(a,b);c.add(e)}return c};THREE.Object3D.prototype.addChildren=function(a){if(void 0===a||null==a)throw"you passed an invalid object3d as an argument";this.addArray(a.children)};THREE.Object3D.prototype.addArray=function(a){var b=a.length;if(1>b)throw"Array is empty";for(var c=0;c<b;c++){var d=a.pop();this.add(d)}};
THREE.Geometry.prototype.getDimensions=function(){this.computeBoundingBox();var a=this.boundingBox;return new THREE.Vector3(a.max.x-a.min.x,a.max.y-a.min.y,a.max.z-a.min.z)};THREE.Geometry.prototype.getBoundingBoxPoints=function(){this.computeBoundingBox();return[this.boundingBox.min,this.boundingBox.max]};
THREE.TrackballControlsEx=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=b!==void 0?b:document;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=false;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68,84];this.target=
new THREE.Vector3(0,0,0);var d=false,f=this.STATE.NONE,e=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector2,k=new THREE.Vector2,j=new THREE.Vector2,n=new THREE.Vector2;this.isDirty=true;this.zoomNow=function(a){a=-1*a/40;i=new THREE.Vector2(0,0);k=new THREE.Vector2(0,a);this.isDirty=true};this.resetZoom=function(){i=new THREE.Vector2;k=new THREE.Vector2;this.isDirty=true};this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.getMouseOnScreen=
function(a,b){return new THREE.Vector2((a-this.screen.offsetLeft)/this.radius*0.5,(b-this.screen.offsetTop)/this.radius*0.5)};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-this.screen.width*0.5-this.screen.offsetLeft)/this.radius,(this.screen.height*0.5+this.screen.offsetTop-b)/this.radius,0),d=c.length();d>1?c.normalize():c.z=Math.sqrt(1-d*d);e.copy(this.object.position).subSelf(this.target);d=this.object.up.clone().setLength(c.y);d.addSelf(this.object.up.clone().crossSelf(e).setLength(c.x));
d.addSelf(e.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(g.dot(h)/g.length()/h.length());if(a){var b=(new THREE.Vector3).cross(g,h).normalize(),c=new THREE.Quaternion,a=a*this.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(e);c.multiplyVector3(this.object.up);c.multiplyVector3(h);if(this.staticMoving)g=h;else{c.setFromAxisAngle(b,a*(this.dynamicDampingFactor-1));c.multiplyVector3(g)}}};this.zoomCamera=function(){var a=1+(k.y-i.y)*this.zoomSpeed;if(a!==1&&a>0){e.multiplyScalar(a);
this.staticMoving?i=k:i.y=i.y+(k.y-i.y)*this.dynamicDampingFactor}};this.panCamera=function(){var a=n.clone().subSelf(j);if(a.lengthSq()){a.multiplyScalar(e.length()*this.panSpeed);var b=e.clone().crossSelf(this.object.up).setLength(a.x);b.addSelf(this.object.up.clone().setLength(a.y));this.object.position.addSelf(b);this.target.addSelf(b);this.staticMoving?j=n:j.addSelf(a.sub(n,j).multiplyScalar(this.dynamicDampingFactor))}};this.checkDistances=function(){if(!this.noZoom||!this.noPan){this.object.position.lengthSq()>
this.maxDistance*this.maxDistance&&this.object.position.setLength(this.maxDistance);e.lengthSq()<this.minDistance*this.minDistance&&this.object.position.add(this.target,e.setLength(this.minDistance))}};this.update=function(){if(this.isDirty){this.isDirty=false;e.copy(this.object.position).subSelf(this.target);this.rotateCamera();this.noZoom||this.zoomCamera();this.noPan||this.panCamera();this.object.position.add(this.target,e);this.checkDistances();this.object.lookAt(this.target)}};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},false);this.domElement.addEventListener("mousemove",c(this,function(a){if(d){g=h=this.getMouseProjectionOnBall(a.clientX,a.clientY);i=k=this.getMouseOnScreen(a.clientX,a.clientY);j=n=this.getMouseOnScreen(a.clientX,a.clientY);d=false}if(f!==this.STATE.NONE){f===this.STATE.ROTATE?h=this.getMouseProjectionOnBall(a.clientX,a.clientY):f===this.STATE.ZOOM&&!this.noZoom?k=this.getMouseOnScreen(a.clientX,a.clientY):f===this.STATE.PAN&&!this.noPan&&(n=this.getMouseOnScreen(a.clientX,
a.clientY));this.isDirty=true}}),false);this.domElement.addEventListener("mousedown",c(this,function(a){this.isDirty=true;a.preventDefault();if(f===this.STATE.NONE){f=a.button;f===this.STATE.ROTATE?g=h=this.getMouseProjectionOnBall(a.clientX,a.clientY):f===this.STATE.ZOOM&&!this.noZoom?i=k=this.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(j=n=this.getMouseOnScreen(a.clientX,a.clientY))}}),false);this.domElement.addEventListener("mouseup",c(this,function(a){this.isDirty=true;a.preventDefault();
a.stopPropagation();f=this.STATE.NONE}),false);window.addEventListener("keydown",c(this,function(a){this.isDirty=true;if(f===this.STATE.NONE){if(a.keyCode===this.keys[this.STATE.ROTATE])f=this.STATE.ROTATE;else if(a.keyCode===this.keys[this.STATE.ZOOM]&&!this.noZoom)f=this.STATE.ZOOM;else if(a.keyCode===this.keys[this.STATE.DEBUG]){console.log("position: "+this.object.matrixWorld.getPosition().toString());console.log("rotation: "+this.object.rotation.toString())}else if(a.keyCode===this.keys[this.STATE.PAN]&&
!this.noPan)f=this.STATE.PAN;f!==this.STATE.NONE&&(d=true)}}),false);window.addEventListener("keyup",c(this,function(){this.isDirty=true;if(f!==this.STATE.NONE)f=this.STATE.NONE}),false)};THREE.TrackballControlsEx.prototype.STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,DEBUG:3};THREE.BoundingBox=function(a,b){this.min=a||new THREE.Vector3;this.max=b||new THREE.Vector3};
THREE.BoundingBox.prototype={constructor:THREE.BoundingBox,set:function(a,b){this.min=a;this.max=b;return this},setMin:function(a){this.min=a;return this},setMax:function(a){this.max=a;return this},copy:function(a){this.min=a.min.clone();this.max=a.max.clone();return this},clone:function(){return new THREE.BoundingBox(this.min.clone(),this.max.clone())}};
THREE.BinaryLoader.prototype.load=function(a,b,c){var d=c.texturePath?c.texturePath:this.extractUrlBase(a),c=c.binaryPath?c.binaryPath:this.extractUrlBase(a),f=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,d,c,f)};
