var THREE=THREE||{REVISION:"51"};void 0===self.console&&(self.console={info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}});void 0===self.Int32Array&&(self.Int32Array=Array,self.Float32Array=Array);void 0===String.prototype.startsWith&&(String.prototype.startsWith=function(a){return this.slice(0,a.length)===a});void 0===String.prototype.endsWith&&(String.prototype.endsWith=function(a){a=String(a);var b=this.lastIndexOf(a);return 0<=b&&b===this.length-a.length});
void 0===!String.prototype.trim&&(String.prototype.trim=function(){return this.replace(/^\s+|\s+$/g,"")});
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b,c){var f=Date.now(),g=Math.max(0,16-(f-a)),h=window.setTimeout(function(){b(f+g)},g);a=f+g;return h});void 0===window.cancelAnimationFrame&&(window.cancelAnimationFrame=
function(a){clearTimeout(a)})})();THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;
THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};
THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;
THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};
THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta()};THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.001*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};
THREE.Color=function(a){void 0!==a&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);
this.b=Math.sqrt(this.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,f;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),f=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===d?(this.r=f,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=f,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=f));return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&
255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},lerpSelf:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getContextStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,
0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x;a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,
b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},
sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):
this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=
(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){this.x=a.elements[12];
this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,e=d[0],f=d[4],g=d[8],h=d[1],l=d[5],k=d[9],m=d[2],q=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(-k,d),this.z=Math.atan2(-f,e)):(this.x=Math.atan2(q,l),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(k)),0.99999>Math.abs(k)?(this.y=Math.atan2(g,d),this.z=Math.atan2(h,l)):(this.y=Math.atan2(-m,
e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(q)),0.99999>Math.abs(q)?(this.y=Math.atan2(-m,d),this.z=Math.atan2(-f,l)):(this.y=0,this.z=Math.atan2(h,e))):"ZYX"===b?(this.y=Math.asin(-c(m)),0.99999>Math.abs(m)?(this.x=Math.atan2(q,d),this.z=Math.atan2(h,e)):(this.x=0,this.z=Math.atan2(-f,l))):"YZX"===b?(this.z=Math.asin(c(h)),0.99999>Math.abs(h)?(this.x=Math.atan2(-k,l),this.y=Math.atan2(-m,e)):(this.x=0,this.y=Math.atan2(g,d))):"XZY"===b&&(this.z=Math.asin(-c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(q,
l),this.y=Math.atan2(g,e)):(this.x=Math.atan2(-k,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.x*a.x,e=a.y*a.y,f=a.z*a.z,g=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),g-d-e+f),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g+d-e-f)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g-d-e+f),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),
g-d+e-f)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),g-d-e+f),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),g-d+e-f)):"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),g-d-e+f),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),g+d-e-f)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),g-d+e-f),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),g+d-e-f),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),
g-d+e-f),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),g+d-e-f),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length();a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return 1E-4>this.lengthSq()},clone:function(){return new THREE.Vector3(this.x,
this.y,this.z)}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=
a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+
Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):
(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d;a=a.elements;var e=a[0];d=a[4];var f=a[8],g=a[1],h=a[5],l=a[9];c=a[2];b=a[6];var k=a[10];if(0.01>Math.abs(d-g)&&0.01>Math.abs(f-c)&&0.01>Math.abs(l-b)){if(0.1>Math.abs(d+g)&&0.1>Math.abs(f+c)&&0.1>Math.abs(l+b)&&0.1>Math.abs(e+h+k-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;h=(h+1)/2;k=(k+1)/2;d=(d+g)/4;f=(f+c)/4;l=(l+b)/4;e>h&&e>k?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,
d=f/b):h>k?0.01>h?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(h),b=d/c,d=l/c):0.01>k?(c=b=0.707106781,d=0):(d=Math.sqrt(k),b=f/d,c=l/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-l)*(b-l)+(f-c)*(f-c)+(g-d)*(g-d));0.001>Math.abs(a)&&(a=1);this.x=(b-l)/a;this.y=(f-c)/a;this.z=(g-d)/a;this.w=Math.acos((e+h+k-1)/2);return this}};THREE.Matrix3=function(){this.elements=new Float32Array(9)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements;a=b[10]*b[5]-b[6]*b[9];var c=-b[10]*b[1]+b[2]*b[9],d=b[6]*b[1]-b[2]*b[5],e=-b[10]*b[4]+b[6]*b[8],f=b[10]*b[0]-b[2]*b[8],g=-b[6]*b[0]+b[2]*b[4],h=b[9]*b[4]-b[5]*b[8],l=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],b=b[0]*a+b[1]*e+b[2]*h;0===b&&console.warn("Matrix3.getInverse(): determinant == 0");var b=1/b,m=this.elements;m[0]=b*a;m[1]=b*c;m[2]=b*d;m[3]=b*e;m[4]=b*f;m[5]=b*g;m[6]=b*h;m[7]=b*l;m[8]=b*k;return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};THREE.Matrix4=function(a,b,c,d,e,f,g,h,l,k,m,q,p,t,r,u){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==f?f:1,g||0,h||0,l||0,k||0,void 0!==m?m:1,q||0,p||0,t||0,r||0,void 0!==u?u:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,l,k,m,q,p,t,r,u){var s=this.elements;s[0]=a;s[4]=b;s[8]=c;s[12]=d;s[1]=e;s[5]=f;s[9]=g;s[13]=h;s[2]=l;s[6]=k;s[10]=m;s[14]=q;s[3]=p;s[7]=t;s[11]=r;s[15]=u;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},lookAt:function(a,b,c){var d=this.elements,
e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();0===g.length()&&(g.z=1);e.cross(c,g).normalize();0===e.length()&&(g.x+=1E-4,e.cross(c,g).normalize());f.cross(g,e);d[0]=e.x;d[4]=f.x;d[8]=g.x;d[1]=e.y;d[5]=f.y;d[9]=g.y;d[2]=e.z;d[6]=f.z;d[10]=g.z;return this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],l=c[12],k=c[1],m=c[5],q=c[9],p=c[13],t=c[2],r=c[6],u=c[10],s=c[14],v=c[3],y=c[7],x=c[11],c=c[15],w=d[0],G=d[4],E=d[8],
A=d[12],D=d[1],C=d[5],M=d[9],H=d[13],L=d[2],O=d[6],R=d[10],S=d[14],P=d[3],F=d[7],I=d[11],d=d[15];e[0]=f*w+g*D+h*L+l*P;e[4]=f*G+g*C+h*O+l*F;e[8]=f*E+g*M+h*R+l*I;e[12]=f*A+g*H+h*S+l*d;e[1]=k*w+m*D+q*L+p*P;e[5]=k*G+m*C+q*O+p*F;e[9]=k*E+m*M+q*R+p*I;e[13]=k*A+m*H+q*S+p*d;e[2]=t*w+r*D+u*L+s*P;e[6]=t*G+r*C+u*O+s*F;e[10]=t*E+r*M+u*R+s*I;e[14]=t*A+r*H+u*S+s*d;e[3]=v*w+y*D+x*L+c*P;e[7]=v*G+y*C+x*O+c*F;e[11]=v*E+y*M+x*R+c*I;e[15]=v*A+y*H+x*S+c*d;return this},multiplySelf:function(a){return this.multiply(this,
a)},multiplyToArray:function(a,b,c){var d=this.elements;this.multiply(a,b);c[0]=d[0];c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){var b=this.elements,
c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f;a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f;a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f;return a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f;a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f;a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f;a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f;return a},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],
this.multiplyVector3(b),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=
this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],l=a[13],k=a[2],m=a[6],q=a[10],p=a[14],t=a[3],r=a[7],u=a[11],a=a[15];return e*h*m*t-d*l*m*t-e*g*q*t+c*l*q*t+d*g*p*t-c*h*p*t-e*h*k*r+d*l*k*r+e*f*q*r-b*l*q*r-d*f*p*r+b*h*p*r+e*g*k*u-c*l*k*u-e*f*m*u+b*l*m*u+c*f*p*u-b*g*p*u-d*g*k*a+c*h*k*a+d*f*m*a-b*h*m*a-c*f*q*a+b*g*q*a},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=
a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+
14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=
this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],l=c[5],k=c[9],m=c[13],q=c[2],p=c[6],t=c[10],r=c[14],u=c[3],s=c[7],v=c[11],c=c[15];b[0]=k*r*s-m*t*s+m*p*v-l*r*v-k*p*c+l*t*c;b[4]=g*t*s-f*r*s-g*p*v+e*r*v+f*p*c-e*t*c;b[8]=f*m*s-g*k*s+g*l*v-e*m*v-f*l*c+e*k*c;b[12]=g*k*p-f*m*p-g*l*t+e*m*t+f*l*r-e*k*r;b[1]=m*t*u-k*r*u-m*q*v+h*r*v+k*q*c-h*t*c;b[5]=f*r*u-g*t*u+g*q*v-d*r*v-f*q*c+d*t*c;b[9]=g*k*u-f*m*u-g*h*v+d*m*v+f*h*c-d*k*c;b[13]=f*m*q-g*k*q+g*h*t-d*m*t-f*h*r+d*k*r;b[2]=l*r*u-m*p*u+m*q*s-h*r*
s-l*q*c+h*p*c;b[6]=g*p*u-e*r*u-g*q*s+d*r*s+e*q*c-d*p*c;b[10]=e*m*u-g*l*u+g*h*s-d*m*s-e*h*c+d*l*c;b[14]=g*l*q-e*m*q-g*h*p+d*m*p+e*h*r-d*l*r;b[3]=k*p*u-l*t*u-k*q*s+h*t*s+l*q*v-h*p*v;b[7]=e*t*u-f*p*u+f*q*s-d*t*s-e*q*v+d*p*v;b[11]=f*l*u-e*k*u-f*h*s+d*k*s+e*h*v-d*l*v;b[15]=e*k*q-f*l*q+f*h*p-d*k*p-e*h*t+d*l*t;this.multiplyScalar(1/a.determinant());return this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e),l=Math.cos(f),f=
Math.sin(f);if(void 0===b||"XYZ"===b){var k=g*l,m=g*f,q=d*l,p=d*f;c[0]=h*l;c[4]=-h*f;c[8]=e;c[1]=m+q*e;c[5]=k-p*e;c[9]=-d*h;c[2]=p-k*e;c[6]=q+m*e;c[10]=g*h}else"YXZ"===b?(k=h*l,m=h*f,q=e*l,p=e*f,c[0]=k+p*d,c[4]=q*d-m,c[8]=g*e,c[1]=g*f,c[5]=g*l,c[9]=-d,c[2]=m*d-q,c[6]=p+k*d,c[10]=g*h):"ZXY"===b?(k=h*l,m=h*f,q=e*l,p=e*f,c[0]=k-p*d,c[4]=-g*f,c[8]=q+m*d,c[1]=m+q*d,c[5]=g*l,c[9]=p-k*d,c[2]=-g*e,c[6]=d,c[10]=g*h):"ZYX"===b?(k=g*l,m=g*f,q=d*l,p=d*f,c[0]=h*l,c[4]=q*e-m,c[8]=k*e+p,c[1]=h*f,c[5]=p*e+k,c[9]=
m*e-q,c[2]=-e,c[6]=d*h,c[10]=g*h):"YZX"===b?(k=g*h,m=g*e,q=d*h,p=d*e,c[0]=h*l,c[4]=p-k*f,c[8]=q*f+m,c[1]=f,c[5]=g*l,c[9]=-d*l,c[2]=-e*l,c[6]=m*f+q,c[10]=k-p*f):"XZY"===b&&(k=g*h,m=g*e,q=d*h,p=d*e,c[0]=h*l,c[4]=-f,c[8]=e*l,c[1]=k*f+p,c[5]=g*l,c[9]=m*f-q,c[2]=q*f-m,c[6]=d*l,c[10]=p*f+k);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,l=e+e;a=c*g;var k=c*h,c=c*l,m=d*h,d=d*l,e=e*l,g=f*g,h=f*h,f=f*l;b[0]=1-(m+e);b[4]=k-f;b[8]=c+h;b[1]=k+f;b[5]=
1-(a+e);b[9]=d-g;b[2]=c-h;b[6]=d+g;b[10]=1-(a+m);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);f.makeScale(c.x,c.y,c.z);this.multiply(e,f);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);f.set(d[4],d[5],d[6]);g.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;
b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=f.length();c.z=g.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements;a=a.elements;b[12]=a[12];b[13]=
a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements;a=a.elements;var c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];
b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],l=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[4]=m*c+a*g;b[5]=m*d+a*h;b[6]=m*e+a*l;b[7]=m*f+a*k;b[8]=m*g-a*c;b[9]=m*h-a*d;b[10]=m*l-a*e;b[11]=m*k-a*f;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],l=b[10],k=b[11],m=Math.cos(a);a=Math.sin(a);b[0]=m*c-a*g;b[1]=m*d-a*h;b[2]=m*e-a*l;b[3]=m*f-a*k;b[8]=m*g+a*c;b[9]=m*h+a*d;b[10]=
m*l+a*e;b[11]=m*k+a*f;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],l=b[6],k=b[7],m=Math.cos(a);a=Math.sin(a);b[0]=m*c+a*g;b[1]=m*d+a*h;b[2]=m*e+a*l;b[3]=m*f+a*k;b[4]=m*g-a*c;b[5]=m*h-a*d;b[6]=m*l-a*e;b[7]=m*k-a*f;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,f=a.z,
g=Math.sqrt(d*d+e*e+f*f),d=d/g,e=e/g,f=f/g,g=d*d,h=e*e,l=f*f,k=Math.cos(b),m=Math.sin(b),q=1-k,p=d*e*q,t=d*f*q,q=e*f*q,d=d*m,r=e*m,m=f*m,f=g+(1-g)*k,g=p+m,e=t-r,p=p-m,h=h+(1-h)*k,m=q+d,t=t+r,q=q-d,l=l+(1-l)*k,k=c[0],d=c[1],r=c[2],u=c[3],s=c[4],v=c[5],y=c[6],x=c[7],w=c[8],G=c[9],E=c[10],A=c[11];c[0]=f*k+g*s+e*w;c[1]=f*d+g*v+e*G;c[2]=f*r+g*y+e*E;c[3]=f*u+g*x+e*A;c[4]=p*k+h*s+m*w;c[5]=p*d+h*v+m*G;c[6]=p*r+h*y+m*E;c[7]=p*u+h*x+m*A;c[8]=t*k+q*s+l*w;c[9]=t*d+q*v+l*G;c[10]=t*r+q*y+l*E;c[11]=t*u+q*x+l*A;
return this},scale:function(a){var b=this.elements,c=a.x,d=a.y;a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a);a=Math.sin(a);
this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,l=e*f,k=e*g;this.set(l*f+c,l*g-d*h,l*h+d*g,0,l*g+d*h,k*g+c,k*h-d*f,0,l*h-d*g,k*h+d*f,e*h*h+c,0,0,0,0,1);return this},makeScale:function(a,
b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements;g[0]=2*e/(b-a);g[4]=0;g[8]=(b+a)/(b-a);g[12]=0;g[1]=0;g[5]=2*e/(d-c);g[9]=(d+c)/(d-c);g[13]=0;g[2]=0;g[6]=0;g[10]=-(f+e)/(f-e);g[14]=-2*f*e/(f-e);g[3]=0;g[7]=0;g[11]=-1;g[15]=0;return this},makePerspective:function(a,b,c,d){a=c*Math.tan(a*Math.PI/360);var e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,l=c-d,k=f-e;g[0]=2/
h;g[4]=0;g[8]=0;g[12]=-((b+a)/h);g[1]=0;g[5]=2/l;g[9]=0;g[13]=-((c+d)/l);g[2]=0;g[6]=0;g[10]=-2/k;g[14]=-((f+e)/k);g[3]=0;g[7]=0;g[11]=0;g[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)}};THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]};
THREE.Frustum.prototype.setFromMatrix=function(a){var b=this.planes,c=a.elements;a=c[0];var d=c[1],e=c[2],f=c[3],g=c[4],h=c[5],l=c[6],k=c[7],m=c[8],q=c[9],p=c[10],t=c[11],r=c[12],u=c[13],s=c[14],c=c[15];b[0].set(f-a,k-g,t-m,c-r);b[1].set(f+a,k+g,t+m,c+r);b[2].set(f+d,k+h,t+q,c+u);b[3].set(f-d,k-h,t-q,c-u);b[4].set(f-e,k-l,t-p,c-s);b[5].set(f+e,k+l,t+p,c+s);for(d=0;6>d;d++)a=b[d],a.divideScalar(Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z))};
THREE.Frustum.prototype.contains=function(a){var b=0,c=this.planes,b=a.matrixWorld,d=b.elements;a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis();for(var e=0;6>e;e++)if(b=c[e].x*d[12]+c[e].y*d[13]+c[e].z*d[14]+c[e].w,b<=a)return!1;return!0};THREE.Frustum.__v1=new THREE.Vector3;
(function(a){a.Ray=function(b,c,d,e){this.origin=b||new a.Vector3;this.direction=c||new a.Vector3;this.near=d||0;this.far=e||Infinity};var b=new a.Vector3,c=new a.Vector3,d=new a.Vector3,e=new a.Vector3,f=new a.Vector3,g=new a.Vector3,h=new a.Matrix4,l=function(a,b){return a.distance-b.distance},k=new a.Vector3,m=new a.Vector3,q=new a.Vector3,p=function(a,b,c){k.sub(c,a);var d=k.dot(b);a=m.add(a,q.copy(b).multiplyScalar(d));return c.distanceTo(a)},t=function(a,b,c,d){k.sub(d,b);m.sub(c,b);q.sub(a,
b);a=k.dot(k);b=k.dot(m);c=k.dot(q);var e=m.dot(m);d=m.dot(q);var f=1/(a*e-b*b),e=(e*c-b*d)*f;a=(a*d-b*c)*f;return 0<=e&&0<=a&&1>e+a},r=function(l,k,m){var q,r;if(l instanceof a.Particle){q=p(k.origin,k.direction,l.matrixWorld.getPosition());if(q>l.scale.x)return m;r={distance:q,point:l.position,face:null,object:l};m.push(r)}else if(l instanceof a.Mesh){var u=l.geometry.boundingSphere.radius*l.matrixWorld.getMaxScaleOnAxis();q=p(k.origin,k.direction,l.matrixWorld.getPosition());if(q>u)return m;var E,
A,D=l.geometry,C=D.vertices,M,H,L;M=l.geometry.materials;H=l.material instanceof a.MeshFaceMaterial;var O,R=k.precision;l.matrixRotationWorld.extractRotation(l.matrixWorld);b.copy(k.origin);h.getInverse(l.matrixWorld);c.copy(b);h.multiplyVector3(c);d.copy(k.direction);h.rotateAxis(d).normalize();u=0;for(E=D.faces.length;u<E;u++)if(r=D.faces[u],q=!0===H?M[r.materialIndex]:l.material,void 0!==q&&(L=q.side,e.sub(r.centroid,c),f=r.normal,q=d.dot(f),!(Math.abs(q)<R)&&(A=f.dot(e)/q,!(0>A)&&(L===a.DoubleSide||
(L===a.FrontSide?0>q:0<q)))))if(g.add(c,d.multiplyScalar(A)),r instanceof a.Face3)q=C[r.a],A=C[r.b],L=C[r.c],t(g,q,A,L)&&(A=l.matrixWorld.multiplyVector3(g.clone()),q=b.distanceTo(A),q<k.near||q>k.far||(r={distance:q,point:A,face:r,faceIndex:u,object:l},m.push(r)));else if(r instanceof a.Face4&&(q=C[r.a],A=C[r.b],L=C[r.c],O=C[r.d],t(g,q,A,O)||t(g,A,L,O)))A=l.matrixWorld.multiplyVector3(g.clone()),q=b.distanceTo(A),q<k.near||q>k.far||(r={distance:q,point:A,face:r,faceIndex:u,object:l},m.push(r))}},
u=function(a,b,c){a=a.getDescendants();for(var d=0,e=a.length;d<e;d++)r(a[d],b,c)};a.Ray.prototype.precision=1E-4;a.Ray.prototype.set=function(a,b){this.origin=a;this.direction=b};a.Ray.prototype.intersectObject=function(a,b){var c=[];!0===b&&u(a,this,c);r(a,this,c);c.sort(l);return c};a.Ray.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)r(a[d],this,c),!0===b&&u(a[d],this,c);c.sort(l);return c}})(THREE);
THREE.Rectangle=function(){function a(){f=d-b;g=e-c}var b=0,c=0,d=0,e=0,f=0,g=0,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return f};this.getHeight=function(){return g};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(f,g,m,q){h=!1;b=f;c=g;d=m;e=q;a()};this.addPoint=function(f,g){!0===h?(h=!1,b=f,c=g,d=f,e=g):(b=b<f?b:f,c=c<g?c:g,d=d>f?d:f,e=e>
g?e:g);a()};this.add3Points=function(f,g,m,q,p,t){!0===h?(h=!1,b=f<m?f<p?f:p:m<p?m:p,c=g<q?g<t?g:t:q<t?q:t,d=f>m?f>p?f:p:m>p?m:p,e=g>q?g>t?g:t:q>t?q:t):(b=f<m?f<p?f<b?f:b:p<b?p:b:m<p?m<b?m:b:p<b?p:b,c=g<q?g<t?g<c?g:c:t<c?t:c:q<t?q<c?q:c:t<c?t:c,d=f>m?f>p?f>d?f:d:p>d?p:d:m>p?m>d?m:d:p>d?p:d,e=g>q?g>t?g>e?g:e:t>e?t:e:q>t?q>e?q:e:t>e?t:e);a()};this.addRectangle=function(f){!0===h?(h=!1,b=f.getLeft(),c=f.getTop(),d=f.getRight(),e=f.getBottom()):(b=b<f.getLeft()?b:f.getLeft(),c=c<f.getTop()?c:f.getTop(),
d=d>f.getRight()?d:f.getRight(),e=e>f.getBottom()?e:f.getBottom());a()};this.inflate=function(f){b-=f;c-=f;d+=f;e+=f;a()};this.minSelf=function(f){b=b>f.getLeft()?b:f.getLeft();c=c>f.getTop()?c:f.getTop();d=d<f.getRight()?d:f.getRight();e=e<f.getBottom()?e:f.getBottom();a()};this.intersects=function(a){return d<a.getLeft()||b>a.getRight()||e<a.getTop()||c>a.getBottom()?!1:!0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0}};
THREE.Object3D=function(){this.id=THREE.Object3DCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=
new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiply(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return this.matrixWorld.multiplyVector3(a)},worldToLocal:function(a){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(a)},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)},add:function(a){if(a===this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");
else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},getChildByName:function(a,b){var c,d,e;c=0;for(d=this.children.length;c<d;c++)if(e=this.children[c],
e.name===a||b&&(e=e.getChildByName(a,b),void 0!==e))return e},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);if(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)this.matrix.scale(this.scale),
this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(){}};
THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3DCount=0;
THREE.Projector=function(){function a(){if(f===h){var a=new THREE.RenderableObject;g.push(a);h++;f++;return a}return g[f++]}function b(){if(k===q){var a=new THREE.RenderableVertex;m.push(a);q++;k++;return a}return m[k++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=h)return!0;if(0>e&&0>f||0>g&&0>h)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h)));if(d<
c)return!1;a.lerpSelf(b,c);b.lerpSelf(a,1-d);return!0}var e,f,g=[],h=0,l,k,m=[],q=0,p,t,r=[],u=0,s,v=[],y=0,x,w,G=[],E=0,A,D,C=[],M=0,H={objects:[],sprites:[],lights:[],elements:[]},L=new THREE.Vector3,O=new THREE.Vector4,R=new THREE.Matrix4,S=new THREE.Matrix4,P=new THREE.Frustum,F=new THREE.Vector4,I=new THREE.Vector4;this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);R.multiply(b.projectionMatrix,b.matrixWorldInverse);R.multiplyVector3(a);return a};this.unprojectVector=
function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);R.multiply(b.matrixWorld,b.projectionMatrixInverse);R.multiplyVector3(a);return a};this.pickingRay=function(a,b){var c;a.z=-1;c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.subSelf(a).normalize();return new THREE.Ray(a,c)};var ba=function(b,d){f=0;H.objects.length=0;H.sprites.length=0;H.lights.length=0;var g=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof
THREE.Light)H.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===P.contains(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(L.copy(f.matrixWorld.getPosition()),R.multiplyVector3(L),e.z=L.z),H.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(L.copy(f.matrixWorld.getPosition()),R.multiplyVector3(L),e.z=L.z),H.sprites.push(e)):(e=a(),e.object=f,null!==f.renderDepth?
e.z=f.renderDepth:(L.copy(f.matrixWorld.getPosition()),R.multiplyVector3(L),e.z=L.z),H.objects.push(e));g(f)}}};g(b);!0===d&&H.objects.sort(c);return H};this.projectScene=function(a,e,f,g){var h=e.near,q=e.far,L=!1,Z,Y,$,Q,fa,na,ra,ha,ua,sa,ya,cb,oa,Sa,Ga,Za;D=w=s=t=0;H.elements.length=0;a.updateMatrixWorld();void 0===e.parent&&e.updateMatrixWorld();e.matrixWorldInverse.getInverse(e.matrixWorld);R.multiply(e.projectionMatrix,e.matrixWorldInverse);P.setFromMatrix(R);H=ba(a,f);a=0;for(f=H.objects.length;a<
f;a++)if(ha=H.objects[a].object,ua=ha.matrixWorld,k=0,ha instanceof THREE.Mesh){sa=ha.geometry;ya=ha.geometry.materials;$=sa.vertices;cb=sa.faces;Sa=sa.faceVertexUvs;sa=ha.matrixRotationWorld.extractRotation(ua);Za=ha.material instanceof THREE.MeshFaceMaterial;Z=0;for(Y=$.length;Z<Y;Z++)l=b(),l.positionWorld.copy($[Z]),ua.multiplyVector3(l.positionWorld),l.positionScreen.copy(l.positionWorld),R.multiplyVector4(l.positionScreen),l.positionScreen.x/=l.positionScreen.w,l.positionScreen.y/=l.positionScreen.w,
l.visible=l.positionScreen.z>h&&l.positionScreen.z<q;$=0;for(Z=cb.length;$<Z;$++)if(ra=cb[$],Y=!0===Za?ya[ra.materialIndex]:ha.material,void 0!==Y){na=Y.side;if(ra instanceof THREE.Face3)if(Q=m[ra.a],fa=m[ra.b],oa=m[ra.c],!0===Q.visible&&!0===fa.visible&&!0===oa.visible)if(L=0>(oa.positionScreen.x-Q.positionScreen.x)*(fa.positionScreen.y-Q.positionScreen.y)-(oa.positionScreen.y-Q.positionScreen.y)*(fa.positionScreen.x-Q.positionScreen.x),na===THREE.DoubleSide||L===(na===THREE.FrontSide))t===u?(Ga=
new THREE.RenderableFace3,r.push(Ga),u++,t++,p=Ga):p=r[t++],p.v1.copy(Q),p.v2.copy(fa),p.v3.copy(oa);else continue;else continue;else if(ra instanceof THREE.Face4)if(Q=m[ra.a],fa=m[ra.b],oa=m[ra.c],Ga=m[ra.d],!0===Q.visible&&!0===fa.visible&&!0===oa.visible&&!0===Ga.visible)if(L=0>(Ga.positionScreen.x-Q.positionScreen.x)*(fa.positionScreen.y-Q.positionScreen.y)-(Ga.positionScreen.y-Q.positionScreen.y)*(fa.positionScreen.x-Q.positionScreen.x)||0>(fa.positionScreen.x-oa.positionScreen.x)*(Ga.positionScreen.y-
oa.positionScreen.y)-(fa.positionScreen.y-oa.positionScreen.y)*(Ga.positionScreen.x-oa.positionScreen.x),na===THREE.DoubleSide||L===(na===THREE.FrontSide)){if(s===y){var gb=new THREE.RenderableFace4;v.push(gb);y++;s++;p=gb}else p=v[s++];p.v1.copy(Q);p.v2.copy(fa);p.v3.copy(oa);p.v4.copy(Ga)}else continue;else continue;p.normalWorld.copy(ra.normal);!1===L&&(na===THREE.BackSide||na===THREE.DoubleSide)&&p.normalWorld.negate();sa.multiplyVector3(p.normalWorld);p.centroidWorld.copy(ra.centroid);ua.multiplyVector3(p.centroidWorld);
p.centroidScreen.copy(p.centroidWorld);R.multiplyVector3(p.centroidScreen);ra=ra.vertexNormals;Q=0;for(fa=ra.length;Q<fa;Q++)oa=p.vertexNormalsWorld[Q],oa.copy(ra[Q]),!1===L&&(na===THREE.BackSide||na===THREE.DoubleSide)&&oa.negate(),sa.multiplyVector3(oa);p.vertexNormalsLength=ra.length;Q=0;for(fa=Sa.length;Q<fa;Q++)if(oa=Sa[Q][$],void 0!==oa){na=0;for(ra=oa.length;na<ra;na++)p.uvs[Q][na]=oa[na]}p.material=Y;p.z=p.centroidScreen.z;H.elements.push(p)}}else if(ha instanceof THREE.Line){S.multiply(R,
ua);$=ha.geometry.vertices;Q=b();Q.positionScreen.copy($[0]);S.multiplyVector4(Q.positionScreen);ua=ha.type===THREE.LinePieces?2:1;Z=1;for(Y=$.length;Z<Y;Z++)Q=b(),Q.positionScreen.copy($[Z]),S.multiplyVector4(Q.positionScreen),0<(Z+1)%ua||(fa=m[k-2],F.copy(Q.positionScreen),I.copy(fa.positionScreen),!0===d(F,I)&&(F.multiplyScalar(1/F.w),I.multiplyScalar(1/I.w),w===E?(ya=new THREE.RenderableLine,G.push(ya),E++,w++,x=ya):x=G[w++],x.v1.positionScreen.copy(F),x.v2.positionScreen.copy(I),x.z=Math.max(F.z,
I.z),x.material=ha.material,H.elements.push(x)))}a=0;for(f=H.sprites.length;a<f;a++)ha=H.sprites[a].object,ua=ha.matrixWorld,ha instanceof THREE.Particle&&(O.set(ua.elements[12],ua.elements[13],ua.elements[14],1),R.multiplyVector4(O),O.z/=O.w,0<O.z&&1>O.z&&(D===M?(h=new THREE.RenderableParticle,C.push(h),M++,D++,A=h):A=C[D++],A.object=ha,A.x=O.x/O.w,A.y=O.y/O.w,A.z=O.z,A.rotation=ha.rotation.z,A.scale.x=ha.scale.x*Math.abs(A.x-(O.x+e.projectionMatrix.elements[0])/(O.w+e.projectionMatrix.elements[12])),
A.scale.y=ha.scale.y*Math.abs(A.y-(O.y+e.projectionMatrix.elements[5])/(O.w+e.projectionMatrix.elements[13])),A.material=ha.material,H.elements.push(A)));!0===g&&H.elements.sort(c);return H}};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),f=Math.sin(a.x/2),g=Math.sin(a.y/2),h=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"YXZ"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*
h-f*g*e,this.w=c*d*e+f*g*h):"ZXY"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e-f*g*h):"ZYX"===b?(this.x=f*d*e-c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e+f*g*h):"YZX"===b?(this.x=f*d*e+c*g*h,this.y=c*g*e+f*d*h,this.z=c*d*h-f*g*e,this.w=c*d*e-f*g*h):"XZY"===b&&(this.x=f*d*e-c*g*h,this.y=c*g*e-f*d*h,this.z=c*d*h+f*g*e,this.w=c*d*e+f*g*h);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0];a=b[4];var d=b[8],e=b[1],f=b[5],g=b[9],h=b[2],l=b[6],b=b[10],k=c+f+b;0<k?(c=0.5/Math.sqrt(k+1),this.w=0.25/c,this.x=(l-g)*c,this.y=(d-h)*c,this.z=(e-a)*c):c>f&&c>b?(c=2*Math.sqrt(1+c-f-b),this.w=(l-g)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+h)/c):f>b?(c=2*Math.sqrt(1+f-c-b),this.w=(d-h)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(g+l)/c):(c=2*Math.sqrt(1+b-c-f),this.w=(e-a)/c,this.x=(d+h)/c,this.y=(g+l)/c,this.z=0.25*c);return this},
calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);0===a?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){var c=a.x,d=a.y,e=a.z,
f=a.w,g=b.x,h=b.y,l=b.z,k=b.w;this.x=c*k+d*l-e*h+f*g;this.y=-c*l+d*k+e*g+f*h;this.z=c*h-d*g+e*k+f*l;this.w=-c*g-d*h-e*l+f*k;return this},multiplySelf:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.x,g=a.y,h=a.z;a=a.w;this.x=b*a+e*f+c*h-d*g;this.y=c*a+e*g+d*f-b*h;this.z=d*a+e*h+b*g-c*f;this.w=e*a-b*f-c*g-d*h;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,f=this.x,g=this.y,h=this.z,l=this.w,k=l*c+g*e-h*d,m=l*d+h*c-f*e,q=l*e+f*d-g*c,c=-f*c-g*d-h*e;b.x=k*l+c*-f+m*-h-
q*-g;b.y=m*l+c*-g+q*-f-k*-h;b.z=q*l+c*-h+k*-g-m*-f;return b},slerpSelf:function(a,b){var c=this.x,d=this.y,e=this.z,f=this.w,g=f*a.w+c*a.x+d*a.y+e*a.z;0>g?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,g=-g):this.copy(a);if(1<=g)return this.w=f,this.x=c,this.y=d,this.z=e,this;var h=Math.acos(g),l=Math.sqrt(1-g*g);if(0.001>Math.abs(l))return this.w=0.5*(f+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;g=Math.sin((1-b)*h)/l;h=Math.sin(b*h)/l;this.w=f*g+this.w*h;this.x=
c*g+this.x*h;this.y=d*g+this.y*h;this.z=e*g+this.z*h;return this},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;0>e?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(1<=Math.abs(e))return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;b=Math.acos(e);var f=Math.sqrt(1-e*e);if(0.001>Math.abs(f))return c.w=0.5*(a.w+c.w),c.x=0.5*(a.x+c.x),c.y=0.5*(a.y+c.y),c.z=0.5*(a.z+c.z),c;e=Math.sin((1-d)*b)/f;d=Math.sin(d*b)/f;c.w=a.w*e+c.w*d;c.x=a.x*e+c.x*d;c.y=a.y*e+c.y*d;c.z=a.z*e+c.z*d;return c};
THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.Face3=function(a,b,c,d,e,f){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,f,g){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=f instanceof THREE.Color?f:new THREE.Color;this.vertexColors=f instanceof Array?f:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},lerpSelf:function(a,b){this.u+=(a.u-this.u)*b;this.v+=(a.v-this.v)*b;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.name="";this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a);for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c]);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var f=0,g=e.vertexNormals.length;f<g;f++)b.multiplyVector3(e.vertexNormals[f]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c.centroid.set(0,
0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a]),c.centroid.addSelf(this.vertices[c.b]),c.centroid.addSelf(this.vertices[c.c]),c.centroid.addSelf(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,f,g=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],f=this.vertices[c.c],g.sub(f,e),h.sub(d,e),g.crossSelf(h),g.isZero()||g.normalize(),c.normal.copy(g)},computeVertexNormals:function(){var a,b,c,d;if(void 0===this.__tmpVertices){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:
c instanceof THREE.Face4&&(c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<
b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):
e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var f=new THREE.Geometry;f.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]={};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var g=this.morphNormals[a].faceNormals,
h=this.morphNormals[a].vertexNormals,l,k;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],l=new THREE.Vector3,k=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},g.push(l),h.push(k)}g=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices;f.computeFaceNormals();f.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],l=g.faceNormals[c],k=g.vertexNormals[c],
l.copy(e.normal),e instanceof THREE.Face3?(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2])):(k.a.copy(e.vertexNormals[0]),k.b.copy(e.vertexNormals[1]),k.c.copy(e.vertexNormals[2]),k.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,D){h=a.vertices[b];l=a.vertices[c];k=a.vertices[d];m=g[e];q=g[f];p=g[D];t=l.x-
h.x;r=k.x-h.x;u=l.y-h.y;s=k.y-h.y;v=l.z-h.z;y=k.z-h.z;x=q.u-m.u;w=p.u-m.u;G=q.v-m.v;E=p.v-m.v;A=1/(x*E-w*G);H.set((E*t-G*r)*A,(E*u-G*s)*A,(E*v-G*y)*A);L.set((x*r-w*t)*A,(x*s-w*u)*A,(x*y-w*v)*A);C[b].addSelf(H);C[c].addSelf(H);C[d].addSelf(H);M[b].addSelf(L);M[c].addSelf(L);M[d].addSelf(L)}var b,c,d,e,f,g,h,l,k,m,q,p,t,r,u,s,v,y,x,w,G,E,A,D,C=[],M=[],H=new THREE.Vector3,L=new THREE.Vector3,O=new THREE.Vector3,R=new THREE.Vector3,S=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)C[b]=new THREE.Vector3,
M[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)f=this.faces[b],g=this.faceVertexUvs[0][b],f instanceof THREE.Face3?a(this,f.a,f.b,f.c,0,1,2):f instanceof THREE.Face4&&(a(this,f.a,f.b,f.d,0,1,3),a(this,f.b,f.c,f.d,1,2,3));var P=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){f=this.faces[b];for(d=0;d<f.vertexNormals.length;d++)S.copy(f.vertexNormals[d]),e=f[P[d]],D=C[e],O.copy(D),O.subSelf(S.multiplyScalar(S.dot(D))).normalize(),R.cross(f.vertexNormals[d],D),e=R.dot(M[e]),e=0>e?
-1:1,f.vertexTangents[d]=new THREE.Vector4(O.x,O.y,O.z,e)}this.hasTangents=!0},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(0<this.vertices.length){var a;a=this.vertices[0];this.boundingBox.min.copy(a);this.boundingBox.max.copy(a);for(var b=this.boundingBox.min,c=this.boundingBox.max,d=1,e=this.vertices.length;d<e;d++)a=this.vertices[d],a.x<b.x?b.x=a.x:a.x>c.x&&(c.x=a.x),a.y<b.y?b.y=a.y:a.y>c.y&&(c.y=a.y),a.z<b.z?b.z=a.z:a.z>c.z&&
(c.z=a.z)}else this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=0;null===this.boundingSphere&&(this.boundingSphere={radius:0});for(var b=0,c=this.vertices.length;b<c;b++){var d=this.vertices[b].lengthSq();d>a&&(a=d)}this.boundingSphere.radius=Math.sqrt(a)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),f,g,h,l;f=0;for(g=this.vertices.length;f<g;f++)d=this.vertices[f],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),
void 0===a[d]?(a[d]=f,b.push(this.vertices[f]),c[f]=b.length-1):c[f]=c[a[d]];f=0;for(g=this.faces.length;f<g;f++)if(a=this.faces[f],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c];else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];d=[a.a,a.b,a.c,a.d];for(e=3;0<e;e--)if(d.indexOf(a["abcd"[e]])!==e){d.splice(e,1);this.faces[f]=new THREE.Face3(d[0],d[1],d[2],a.normal,a.color,a.materialIndex);d=0;for(h=this.faceVertexUvs.length;d<h;d++)(l=this.faceVertexUvs[d][f])&&
l.splice(e,1);this.faces[f].vertexColors=a.vertexColors;break}}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){}};THREE.GeometryCount=0;THREE.BufferGeometry=function(){this.id=THREE.GeometryCount++;this.attributes={};this.dynamic=!1;this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix4,b.extractRotation(a),b.multiplyVector3Array(c),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){this.boundingBox||(this.boundingBox={min:new THREE.Vector3(Infinity,Infinity,Infinity),
max:new THREE.Vector3(-Infinity,-Infinity,-Infinity)});var a=this.attributes.position.array;if(a)for(var b=this.boundingBox,c,d,e,f=0,g=a.length;f<g;f+=3)c=a[f],d=a[f+1],e=a[f+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e);if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){this.boundingSphere||(this.boundingSphere={radius:0});var a=this.attributes.position.array;
if(a){for(var b,c=0,d,e,f=0,g=a.length;f<g;f+=3)b=a[f],d=a[f+1],e=a[f+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position&&this.attributes.index){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=0}var e=this.offsets,f=this.attributes.index.array,
g=this.attributes.position.array,h=this.attributes.normal.array,l,k,m,q,p,t,r=new THREE.Vector3,u=new THREE.Vector3,s=new THREE.Vector3,v=new THREE.Vector3,y=new THREE.Vector3;c=0;for(d=e.length;c<d;++c){b=e[c].start;l=e[c].count;var x=e[c].index;a=b;for(b+=l;a<b;a+=3)l=x+f[a],k=x+f[a+1],m=x+f[a+2],q=g[3*l],p=g[3*l+1],t=g[3*l+2],r.set(q,p,t),q=g[3*k],p=g[3*k+1],t=g[3*k+2],u.set(q,p,t),q=g[3*m],p=g[3*m+1],t=g[3*m+2],s.set(q,p,t),v.sub(s,u),y.sub(r,u),v.crossSelf(y),h[3*l]+=v.x,h[3*l+1]+=v.y,h[3*l+
2]+=v.z,h[3*k]+=v.x,h[3*k+1]+=v.y,h[3*k+2]+=v.z,h[3*m]+=v.x,h[3*m+1]+=v.y,h[3*m+2]+=v.z}a=0;for(b=h.length;a<b;a+=3)q=h[a],p=h[a+1],t=h[a+2],c=1/Math.sqrt(q*q+p*p+t*t),h[a]*=c,h[a+1]*=c,h[a+2]*=c;this.normalsNeedUpdate=!0}},computeTangents:function(){function a(a,b,c){q=d[3*a];p=d[3*a+1];t=d[3*a+2];r=d[3*b];u=d[3*b+1];s=d[3*b+2];v=d[3*c];y=d[3*c+1];x=d[3*c+2];w=f[2*a];G=f[2*a+1];E=f[2*b];A=f[2*b+1];D=f[2*c];C=f[2*c+1];M=r-q;H=v-q;L=u-p;O=y-p;R=s-t;S=x-t;P=E-w;F=D-w;I=A-G;ba=C-G;ca=1/(P*ba-F*I);ia.set((ba*
M-I*H)*ca,(ba*L-I*O)*ca,(ba*R-I*S)*ca);aa.set((P*H-F*M)*ca,(P*O-F*L)*ca,(P*S-F*R)*ca);k[a].addSelf(ia);k[b].addSelf(ia);k[c].addSelf(ia);m[a].addSelf(aa);m[b].addSelf(aa);m[c].addSelf(aa)}function b(a){na.x=e[3*a];na.y=e[3*a+1];na.z=e[3*a+2];ra.copy(na);ua=k[a];Q.copy(ua);Q.subSelf(na.multiplyScalar(na.dot(ua))).normalize();fa.cross(ra,ua);sa=fa.dot(m[a]);ha=0>sa?-1:1;l[4*a]=Q.x;l[4*a+1]=Q.y;l[4*a+2]=Q.z;l[4*a+3]=ha}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||
void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;if(void 0===this.attributes.tangent){var h=4*g;this.attributes.tangent={itemSize:4,array:new Float32Array(h),numItems:h}}for(var l=this.attributes.tangent.array,k=[],m=[],h=0;h<g;h++)k[h]=new THREE.Vector3,m[h]=new THREE.Vector3;
var q,p,t,r,u,s,v,y,x,w,G,E,A,D,C,M,H,L,O,R,S,P,F,I,ba,ca,ia=new THREE.Vector3,aa=new THREE.Vector3,la,K,qa,Fa,Z,Y=this.offsets,h=0;for(K=Y.length;h<K;++h){la=Y[h].start;qa=Y[h].count;var $=Y[h].index,g=la;for(la+=qa;g<la;g+=3)qa=$+c[g],Fa=$+c[g+1],Z=$+c[g+2],a(qa,Fa,Z)}var Q=new THREE.Vector3,fa=new THREE.Vector3,na=new THREE.Vector3,ra=new THREE.Vector3,ha,ua,sa,h=0;for(K=Y.length;h<K;++h){la=Y[h].start;qa=Y[h].count;$=Y[h].index;g=la;for(la+=qa;g<la;g+=3)qa=$+c[g],Fa=$+c[g+1],Z=$+c[g+2],b(qa),
b(Fa),b(Z)}this.tangentsNeedUpdate=this.hasTangents=!0}}};
THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,l,k,m,q,p;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;f=Math.floor(e);g=e-f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>this.points.length-2?this.points.length-1:f+1;c[3]=f>this.points.length-3?this.points.length-1:
f+2;k=this.points[c[0]];m=this.points[c[1]];q=this.points[c[2]];p=this.points[c[3]];h=g*g;l=g*h;d.x=b(k.x,m.x,q.x,p.x,g,h,l);d.y=b(k.y,m.y,q.y,p.y,g,h,l);d.z=b(k.z,m.z,q.z,p.z,g,h,l);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,h=[],l=0;h[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),l+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(h[b]=l,e=b);h[h.length]=l;return{chunks:h,total:l}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h=[],l=new THREE.Vector3,k=this.getLength();h.push(l.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=k.chunks[b]-k.chunks[b-1];g=Math.ceil(a*c/k.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
h.push(l.copy(d).clone());h.push(l.copy(this.points[b]).clone())}this.points=h}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};
THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==f?f:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};
THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*Math.atan(b/(2*a))*(180/Math.PI);this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=f;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};
THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=
!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);
THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);
THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=
Math.log(a)/Math.LN2;return Math.floor(a)==a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,b){var e=new Image;e.onload=function(){if(!c(this.width)||!c(this.height)){var b=d(this.width),e=d(this.height);a.image.width=b;a.image.height=e;a.image.getContext("2d").drawImage(this,0,0,b,e)}else a.image=this;a.needsUpdate=!0};e.crossOrigin=h.crossOrigin;e.src=b}function f(a,c,d,f,g,h,l){var k=d.toLowerCase().endsWith(".dds"),m=b+"/"+d;if(k){var w=THREE.ImageUtils.loadCompressedTexture(m);
a[c]=w}else w=document.createElement("canvas"),a[c]=new THREE.Texture(w);a[c].sourceFile=d;f&&(a[c].repeat.set(f[0],f[1]),1!==f[0]&&(a[c].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[c].wrapT=THREE.RepeatWrapping));g&&a[c].offset.set(g[0],g[1]);h&&(d={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==d[h[0]]&&(a[c].wrapS=d[h[0]]),void 0!==d[h[1]]&&(a[c].wrapT=d[h[1]]));l&&(a[c].anisotropy=l);k||e(a[c],m)}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var h=this,l="MeshLambertMaterial",
k={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var m=a.shading.toLowerCase();"phong"===m?l="MeshPhongMaterial":"basic"===m&&(l="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(k.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)k.transparent=a.transparent;void 0!==a.depthTest&&(k.depthTest=a.depthTest);void 0!==a.depthWrite&&(k.depthWrite=a.depthWrite);void 0!==a.visible&&(k.visible=a.visible);void 0!==
a.flipSided&&(k.side=THREE.BackSide);void 0!==a.doubleSided&&(k.side=THREE.DoubleSide);void 0!==a.wireframe&&(k.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?k.vertexColors=THREE.FaceColors:a.vertexColors&&(k.vertexColors=THREE.VertexColors));a.colorDiffuse?k.color=g(a.colorDiffuse):a.DbgColor&&(k.color=a.DbgColor);a.colorSpecular&&(k.specular=g(a.colorSpecular));a.colorAmbient&&(k.ambient=g(a.colorAmbient));a.transparency&&(k.opacity=a.transparency);a.specularCoef&&(k.shininess=
a.specularCoef);a.mapDiffuse&&b&&f(k,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&f(k,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&f(k,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&f(k,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&f(k,"specularMap",
a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(k.bumpScale=a.mapBumpScale);a.mapNormal?(l=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(l.uniforms),m.tNormal.value=k.normalMap,a.mapNormalFactor&&m.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),k.map&&(m.tDiffuse.value=k.map,m.enableDiffuse.value=!0),k.specularMap&&(m.tSpecular.value=k.specularMap,m.enableSpecular.value=!0),k.lightMap&&(m.tAO.value=k.lightMap,
m.enableAO.value=!0),m.uDiffuseColor.value.setHex(k.color),m.uSpecularColor.value.setHex(k.specular),m.uAmbientColor.value.setHex(k.ambient),m.uShininess.value=k.shininess,void 0!==k.opacity&&(m.uOpacity.value=k.opacity),k=new THREE.ShaderMaterial({fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:m,lights:!0,fog:!0})):k=new THREE[l](k);void 0!==a.DbgName&&(k.name=a.DbgName);return k}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.BinaryLoader.prototype.load=function(a,b,c,d){c=c?c:this.extractUrlBase(a);d=d?d:this.extractUrlBase(a);var e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(4==g.readyState)if(200==g.status||0==g.status){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")};g.open("GET",b,!0);g.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){if(4==f.readyState)if(200==f.status||0==f.status){var c=f.response;void 0===c&&(c=(new Uint8Array(f.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(c,b,d,a.materials)}else console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]");else 3==f.readyState?e&&(0==h&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):
2==f.readyState&&(h=f.getResponseHeader("Content-Length"))};f.open("GET",g,!0);f.responseType="arraybuffer";f.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(b){function c(a){return a%4?4-a%4:0}function e(a,b){return(new Uint8Array(a,b,1))[0]}function l(a,b){return(new Uint32Array(a,b,1))[0]}function k(b,c){var d,e,f,g,h,l,k,m,p=new Uint32Array(a,c,3*b);for(d=0;d<b;d++){e=p[3*d];f=p[3*d+1];g=p[3*d+2];h=x[2*e];e=x[2*e+1];l=x[2*f];k=x[2*f+1];f=x[2*g];m=x[2*g+1];g=u.faceVertexUvs[0];var q=[];q.push(new THREE.UV(h,e));q.push(new THREE.UV(l,k));q.push(new THREE.UV(f,m));g.push(q)}}
function m(b,c){var d,e,f,g,h,l,k,m,p,q,r=new Uint32Array(a,c,4*b);for(d=0;d<b;d++){e=r[4*d];f=r[4*d+1];g=r[4*d+2];h=r[4*d+3];l=x[2*e];e=x[2*e+1];k=x[2*f];p=x[2*f+1];m=x[2*g];q=x[2*g+1];g=x[2*h];f=x[2*h+1];h=u.faceVertexUvs[0];var s=[];s.push(new THREE.UV(l,e));s.push(new THREE.UV(k,p));s.push(new THREE.UV(m,q));s.push(new THREE.UV(g,f));h.push(s)}}function q(b,c,d){var e,f,g,h;c=new Uint32Array(a,c,3*b);var l=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[3*d],f=c[3*d+1],g=c[3*d+2],h=l[d],u.faces.push(new THREE.Face3(e,
f,g,null,null,h))}function p(b,c,d){var e,f,g,h,l;c=new Uint32Array(a,c,4*b);var k=new Uint16Array(a,d,b);for(d=0;d<b;d++)e=c[4*d],f=c[4*d+1],g=c[4*d+2],h=c[4*d+3],l=k[d],u.faces.push(new THREE.Face4(e,f,g,h,null,null,l))}function t(b,c,d,e){var f,g,h,l,k,m,p;c=new Uint32Array(a,c,3*b);d=new Uint32Array(a,d,3*b);var q=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[3*e];g=c[3*e+1];h=c[3*e+2];k=d[3*e];m=d[3*e+1];p=d[3*e+2];l=q[e];var r=y[3*m],s=y[3*m+1];m=y[3*m+2];var t=y[3*p],v=y[3*p+1];p=y[3*p+2];u.faces.push(new THREE.Face3(f,
g,h,[new THREE.Vector3(y[3*k],y[3*k+1],y[3*k+2]),new THREE.Vector3(r,s,m),new THREE.Vector3(t,v,p)],null,l))}}function r(b,c,d,e){var f,g,h,l,k,m,p,q,r;c=new Uint32Array(a,c,4*b);d=new Uint32Array(a,d,4*b);var s=new Uint16Array(a,e,b);for(e=0;e<b;e++){f=c[4*e];g=c[4*e+1];h=c[4*e+2];l=c[4*e+3];m=d[4*e];p=d[4*e+1];q=d[4*e+2];r=d[4*e+3];k=s[e];var t=y[3*p],v=y[3*p+1];p=y[3*p+2];var w=y[3*q],x=y[3*q+1];q=y[3*q+2];var D=y[3*r],C=y[3*r+1];r=y[3*r+2];u.faces.push(new THREE.Face4(f,g,h,l,[new THREE.Vector3(y[3*
m],y[3*m+1],y[3*m+2]),new THREE.Vector3(t,v,p),new THREE.Vector3(w,x,q),new THREE.Vector3(D,C,r)],null,k))}}var u=this,s=0,v,y=[],x=[],w,G,E,A,D,C;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(u,d,b);v=function(a,b){for(var c=new Uint8Array(a,b,12),d="",f=0;12>f;f++)d+=String.fromCharCode(c[b+f]);return{signature:d,header_bytes:e(a,b+12),vertex_coordinate_bytes:e(a,b+13),normal_coordinate_bytes:e(a,b+14),uv_coordinate_bytes:e(a,b+15),vertex_index_bytes:e(a,b+16),normal_index_bytes:e(a,
b+17),uv_index_bytes:e(a,b+18),material_index_bytes:e(a,b+19),nvertices:l(a,b+20),nnormals:l(a,b+20+4),nuvs:l(a,b+20+8),ntri_flat:l(a,b+20+12),ntri_smooth:l(a,b+20+16),ntri_flat_uv:l(a,b+20+20),ntri_smooth_uv:l(a,b+20+24),nquad_flat:l(a,b+20+28),nquad_smooth:l(a,b+20+32),nquad_flat_uv:l(a,b+20+36),nquad_smooth_uv:l(a,b+20+40)}}(a,s);s+=v.header_bytes;b=3*v.vertex_index_bytes+v.material_index_bytes;C=4*v.vertex_index_bytes+v.material_index_bytes;w=v.ntri_flat*b;G=v.ntri_smooth*(b+3*v.normal_index_bytes);
E=v.ntri_flat_uv*(b+3*v.uv_index_bytes);A=v.ntri_smooth_uv*(b+3*v.normal_index_bytes+3*v.uv_index_bytes);D=v.nquad_flat*C;b=v.nquad_smooth*(C+4*v.normal_index_bytes);C=v.nquad_flat_uv*(C+4*v.uv_index_bytes);s+=function(b){var c=v.nvertices;b=new Float32Array(a,b,3*c);var d,e,f,g;for(d=0;d<c;d++)e=b[3*d],f=b[3*d+1],g=b[3*d+2],u.vertices.push(new THREE.Vector3(e,f,g));return 3*c*Float32Array.BYTES_PER_ELEMENT}(s);s+=function(b){var c=v.nnormals;if(c){b=new Int8Array(a,b,3*c);var d,e,f,g;for(d=0;d<c;d++)e=
b[3*d],f=b[3*d+1],g=b[3*d+2],y.push(e/127,f/127,g/127)}return 3*c*Int8Array.BYTES_PER_ELEMENT}(s);s+=c(3*v.nnormals);s+=function(b){var c=v.nuvs;if(c){b=new Float32Array(a,b,2*c);var d,e,f;for(d=0;d<c;d++)e=b[2*d],f=b[2*d+1],x.push(e,f)}return 2*c*Float32Array.BYTES_PER_ELEMENT}(s);w=s+w+c(2*v.ntri_flat);G=w+G+c(2*v.ntri_smooth);E=G+E+c(2*v.ntri_flat_uv);A=E+A+c(2*v.ntri_smooth_uv);D=A+D+c(2*v.nquad_flat);b=D+b+c(2*v.nquad_smooth);C=b+C+c(2*v.nquad_flat_uv);(function(a){var b=v.ntri_flat_uv;if(b){var c=
a+3*b*Uint32Array.BYTES_PER_ELEMENT;q(b,a,c+3*b*Uint32Array.BYTES_PER_ELEMENT);k(b,c)}})(G);(function(a){var b=v.ntri_smooth_uv;if(b){var c=a+3*b*Uint32Array.BYTES_PER_ELEMENT,d=c+3*b*Uint32Array.BYTES_PER_ELEMENT;t(b,a,c,d+3*b*Uint32Array.BYTES_PER_ELEMENT);k(b,d)}})(E);(function(a){var b=v.nquad_flat_uv;if(b){var c=a+4*b*Uint32Array.BYTES_PER_ELEMENT;p(b,a,c+4*b*Uint32Array.BYTES_PER_ELEMENT);m(b,c)}})(b);(function(a){var b=v.nquad_smooth_uv;if(b){var c=a+4*b*Uint32Array.BYTES_PER_ELEMENT,d=c+4*
b*Uint32Array.BYTES_PER_ELEMENT;r(b,a,c,d+4*b*Uint32Array.BYTES_PER_ELEMENT);m(b,d)}})(C);(function(a){var b=v.ntri_flat;b&&q(b,a,a+3*b*Uint32Array.BYTES_PER_ELEMENT)})(s);(function(a){var b=v.ntri_smooth;if(b){var c=a+3*b*Uint32Array.BYTES_PER_ELEMENT;t(b,a,c,c+3*b*Uint32Array.BYTES_PER_ELEMENT)}})(w);(function(a){var b=v.nquad_flat;b&&p(b,a,a+4*b*Uint32Array.BYTES_PER_ELEMENT)})(A);(function(a){var b=v.nquad_smooth;if(b){var c=a+4*b*Uint32Array.BYTES_PER_ELEMENT;r(b,a,c,c+4*b*Uint32Array.BYTES_PER_ELEMENT)}})(D);
this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};e.prototype=Object.create(THREE.Geometry.prototype);b(new e(c))};THREE.ImageLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.JSONLoader.prototype.load=function(a,b,c){c=c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),
e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))};f.open("GET",b,!0);f.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;this.initMaterials(d,a.materials,c);(function(b){var c,e,l,k,m,q,p,t,r,u,s,v,y,x,w=a.faces;q=a.vertices;var G=a.normals,E=a.colors,A=0;for(c=0;c<a.uvs.length;c++)a.uvs[c].length&&A++;for(c=0;c<A;c++)d.faceUvs[c]=[],d.faceVertexUvs[c]=[];k=0;for(m=q.length;k<m;)p=new THREE.Vector3,p.x=q[k++]*b,p.y=q[k++]*b,p.z=q[k++]*b,d.vertices.push(p);k=0;for(m=w.length;k<m;){b=w[k++];q=b&1;l=b&2;c=b&4;
e=b&8;t=b&16;p=b&32;u=b&64;b&=128;q?(s=new THREE.Face4,s.a=w[k++],s.b=w[k++],s.c=w[k++],s.d=w[k++],q=4):(s=new THREE.Face3,s.a=w[k++],s.b=w[k++],s.c=w[k++],q=3);l&&(l=w[k++],s.materialIndex=l);l=d.faces.length;if(c)for(c=0;c<A;c++)v=a.uvs[c],r=w[k++],x=v[2*r],r=v[2*r+1],d.faceUvs[c][l]=new THREE.UV(x,r);if(e)for(c=0;c<A;c++){v=a.uvs[c];y=[];for(e=0;e<q;e++)r=w[k++],x=v[2*r],r=v[2*r+1],y[e]=new THREE.UV(x,r);d.faceVertexUvs[c][l]=y}t&&(t=3*w[k++],e=new THREE.Vector3,e.x=G[t++],e.y=G[t++],e.z=G[t],
s.normal=e);if(p)for(c=0;c<q;c++)t=3*w[k++],e=new THREE.Vector3,e.x=G[t++],e.y=G[t++],e.z=G[t],s.vertexNormals.push(e);u&&(p=w[k++],p=new THREE.Color(E[p]),s.color=p);if(b)for(c=0;c<q;c++)p=w[k++],p=new THREE.Color(E[p]),s.vertexColors.push(p);d.faces.push(s)}})(e);(function(){var b,c,e,l;if(a.skinWeights){b=0;for(c=a.skinWeights.length;b<c;b+=2)e=a.skinWeights[b],l=a.skinWeights[b+1],d.skinWeights.push(new THREE.Vector4(e,l,0,0))}if(a.skinIndices){b=0;for(c=a.skinIndices.length;b<c;b+=2)e=a.skinIndices[b],
l=a.skinIndices[b+1],d.skinIndices.push(new THREE.Vector4(e,l,0,0))}d.bones=a.bones;d.animation=a.animation})();(function(b){if(void 0!==a.morphTargets){var c,e,l,k,m,q;c=0;for(e=a.morphTargets.length;c<e;c++){d.morphTargets[c]={};d.morphTargets[c].name=a.morphTargets[c].name;d.morphTargets[c].vertices=[];m=d.morphTargets[c].vertices;q=a.morphTargets[c].vertices;l=0;for(k=q.length;l<k;l+=3){var p=new THREE.Vector3;p.x=q[l]*b;p.y=q[l+1]*b;p.z=q[l+2]*b;m.push(p)}}}if(void 0!==a.morphColors){c=0;for(e=
a.morphColors.length;c<e;c++){d.morphColors[c]={};d.morphColors[c].name=a.morphColors[c].name;d.morphColors[c].colors=[];k=d.morphColors[c].colors;m=a.morphColors[c].colors;b=0;for(l=m.length;b<l;b+=3)q=new THREE.Color(16755200),q.setRGB(m[b],m[b+1],m[b+2]),k.push(q)}}})(e);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&d.computeTangents();b(d)};
THREE.LoadingMonitor=function(){THREE.EventTarget.call(this);var a=this,b=0,c=0,d=function(d){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};THREE.GeometryLoader=function(){THREE.EventTarget.call(this);this.path=this.crossOrigin=null};
THREE.GeometryLoader.prototype={constructor:THREE.GeometryLoader,load:function(a){var b=this,c=null;if(null===b.path){var d=a.split("/");d.pop();b.path=1>d.length?".":d.join("/")}d=new XMLHttpRequest;d.addEventListener("load",function(d){d.target.responseText?c=b.parse(JSON.parse(d.target.responseText),e):b.dispatchEvent({type:"error",message:"Invalid file ["+a+"]"})},!1);d.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,
!0);d.send(null);var e=new THREE.LoadingMonitor;e.addEventListener("load",function(a){b.dispatchEvent({type:"load",content:c})});e.add(d)},parse:function(a,b){var c=this,d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1;if(a.materials){d.materials=[];for(var f=0;f<a.materials.length;++f){var g=a.materials[f],h=function(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==a},l=function(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))},k=function(a,d,e,f,g,k){a[d]=new THREE.Texture;a[d].sourceFile=
e;f&&(a[d].repeat.set(f[0],f[1]),1!==f[0]&&(a[d].wrapS=THREE.RepeatWrapping),1!==f[1]&&(a[d].wrapT=THREE.RepeatWrapping));g&&a[d].offset.set(g[0],g[1]);k&&(f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==f[k[0]]&&(a[d].wrapS=f[k[0]]),void 0!==f[k[1]]&&(a[d].wrapT=f[k[1]]));var m=a[d];a=new THREE.ImageLoader;a.addEventListener("load",function(a){a=a.content;if(!h(a.width)||!h(a.height)){var b=l(a.width),c=l(a.height);m.image=document.createElement("canvas");m.image.width=
b;m.image.height=c;m.image.getContext("2d").drawImage(a,0,0,b,c)}else m.image=a;m.needsUpdate=!0});a.crossOrigin=c.crossOrigin;a.load(c.path+"/"+e);b&&b.add(a)},m=function(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]},q="MeshLambertMaterial",p={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(g.shading){var t=g.shading.toLowerCase();"phong"===t?q="MeshPhongMaterial":"basic"===t&&(q="MeshBasicMaterial")}void 0!==g.blending&&void 0!==THREE[g.blending]&&
(p.blending=THREE[g.blending]);if(void 0!==g.transparent||1>g.opacity)p.transparent=g.transparent;void 0!==g.depthTest&&(p.depthTest=g.depthTest);void 0!==g.depthWrite&&(p.depthWrite=g.depthWrite);void 0!==g.vertexColors&&("face"==g.vertexColors?p.vertexColors=THREE.FaceColors:g.vertexColors&&(p.vertexColors=THREE.VertexColors));g.colorDiffuse?p.color=m(g.colorDiffuse):g.DbgColor&&(p.color=g.DbgColor);g.colorSpecular&&(p.specular=m(g.colorSpecular));g.colorAmbient&&(p.ambient=m(g.colorAmbient));g.transparency&&
(p.opacity=g.transparency);g.specularCoef&&(p.shininess=g.specularCoef);void 0!==g.visible&&(p.visible=g.visible);void 0!==g.flipSided&&(p.side=THREE.BackSide);void 0!==g.doubleSided&&(p.side=THREE.DoubleSide);void 0!==g.wireframe&&(p.wireframe=g.wireframe);g.mapDiffuse&&k(p,"map",g.mapDiffuse,g.mapDiffuseRepeat,g.mapDiffuseOffset,g.mapDiffuseWrap);g.mapLight&&k(p,"lightMap",g.mapLight,g.mapLightRepeat,g.mapLightOffset,g.mapLightWrap);g.mapBump&&k(p,"bumpMap",g.mapBump,g.mapBumpRepeat,g.mapBumpOffset,
g.mapBumpWrap);g.mapNormal&&k(p,"normalMap",g.mapNormal,g.mapNormalRepeat,g.mapNormalOffset,g.mapNormalWrap);g.mapSpecular&&k(p,"specularMap",g.mapSpecular,g.mapSpecularRepeat,g.mapSpecularOffset,g.mapSpecularWrap);g.mapNormal?(k=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(k.uniforms),m.tNormal.value=p.normalMap,g.mapNormalFactor&&m.uNormalScale.value.set(g.mapNormalFactor,g.mapNormalFactor),p.map&&(m.tDiffuse.value=p.map,m.enableDiffuse.value=!0),p.specularMap&&(m.tSpecular.value=p.specularMap,
m.enableSpecular.value=!0),p.lightMap&&(m.tAO.value=p.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(p.color),m.uSpecularColor.value.setHex(p.specular),m.uAmbientColor.value.setHex(p.ambient),m.uShininess.value=p.shininess,void 0!==p.opacity&&(m.uOpacity.value=p.opacity),p=new THREE.ShaderMaterial({fragmentShader:k.fragmentShader,vertexShader:k.vertexShader,uniforms:m,lights:!0,fog:!0})):p=new THREE[q](p);void 0!==g.DbgName&&(p.name=g.DbgName);d.materials[f]=p}}var g=a.faces,r=a.vertices,
p=a.normals,k=a.colors,m=0;if(a.uvs)for(f=0;f<a.uvs.length;f++)a.uvs[f].length&&m++;for(f=0;f<m;f++)d.faceUvs[f]=[],d.faceVertexUvs[f]=[];q=0;for(t=r.length;q<t;){var u=new THREE.Vector3;u.x=r[q++]*e;u.y=r[q++]*e;u.z=r[q++]*e;d.vertices.push(u)}q=0;for(t=g.length;q<t;){var s=g[q++],v=s&2,f=s&4,y=s&8,x=s&16,r=s&32,w=s&64,u=s&128;if(s&1){s=new THREE.Face4;s.a=g[q++];s.b=g[q++];s.c=g[q++];s.d=g[q++];var G=4}else s=new THREE.Face3,s.a=g[q++],s.b=g[q++],s.c=g[q++],G=3;v&&(v=g[q++],s.materialIndex=v);var E=
d.faces.length;if(f)for(f=0;f<m;f++){var A=a.uvs[f],v=g[q++],D=A[2*v],v=A[2*v+1];d.faceUvs[f][E]=new THREE.UV(D,v)}if(y)for(f=0;f<m;f++){for(var A=a.uvs[f],y=[],C=0;C<G;C++)v=g[q++],D=A[2*v],v=A[2*v+1],y[C]=new THREE.UV(D,v);d.faceVertexUvs[f][E]=y}x&&(x=3*g[q++],v=new THREE.Vector3,v.x=p[x++],v.y=p[x++],v.z=p[x],s.normal=v);if(r)for(f=0;f<G;f++)x=3*g[q++],v=new THREE.Vector3,v.x=p[x++],v.y=p[x++],v.z=p[x],s.vertexNormals.push(v);w&&(r=g[q++],s.color=new THREE.Color(k[r]));if(u)for(f=0;f<G;f++)r=
g[q++],s.vertexColors.push(new THREE.Color(k[r]));d.faces.push(s)}if(a.skinWeights){f=0;for(g=a.skinWeights.length;f<g;f+=2)d.skinWeights.push(new THREE.Vector4(a.skinWeights[f],a.skinWeights[f+1],0,0))}if(a.skinIndices){f=0;for(g=a.skinIndices.length;f<g;f+=2)p=0,d.skinIndices.push(new THREE.Vector4(a.skinIndices[f],a.skinIndices[f+1],p,0))}d.bones=a.bones;d.animation=a.animation;if(a.morphTargets){f=0;for(g=a.morphTargets.length;f<g;f++){d.morphTargets[f]={};d.morphTargets[f].name=a.morphTargets[f].name;
d.morphTargets[f].vertices=[];p=d.morphTargets[f].vertices;k=a.morphTargets[f].vertices;v=0;for(m=k.length;v<m;v+=3)u=new THREE.Vector3,u.x=k[v]*e,u.y=k[v+1]*e,u.z=k[v+2]*e,p.push(u)}}if(a.morphColors){f=0;for(g=a.morphColors.length;f<g;f++){d.morphColors[f]={};d.morphColors[f].name=a.morphColors[f].name;d.morphColors[f].colors=[];e=d.morphColors[f].colors;k=a.morphColors[f].colors;p=0;for(m=k.length;p<m;p+=3)q=new THREE.Color(16755200),q.setRGB(k[p],k[p+1],k[p+2]),e.push(q)}}d.computeCentroids();
d.computeFaceNormals();return d}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+"/"+a}function e(a,b){for(var c in b)if(void 0===F.objects[c]){var d=b[c],f=null;if(void 0!==d.geometry){if(D=F.geometries[d.geometry])f=!1,C=F.materials[d.materials[0]],(f=C instanceof THREE.ShaderMaterial)&&D.computeTangents(),y=d.position,x=d.rotation,w=d.quaternion,G=d.scale,s=d.matrix,w=0,0===d.materials.length&&(C=new THREE.MeshFaceMaterial),1<d.materials.length&&(C=new THREE.MeshFaceMaterial),d.morph?
(f=new THREE.MorphAnimMesh(D,C),void 0!==d.duration&&(f.duration=d.duration),void 0!==d.time&&(f.time=d.time),void 0!==d.mirroredLoop&&(f.mirroredLoop=d.mirroredLoop),C.morphNormals&&D.computeMorphNormals()):f=new THREE.Mesh(D,C),f.name=c,s?(f.matrixAutoUpdate=!1,f.matrix.set(s[0],s[1],s[2],s[3],s[4],s[5],s[6],s[7],s[8],s[9],s[10],s[11],s[12],s[13],s[14],s[15])):(f.position.set(y[0],y[1],y[2]),w?(f.quaternion.set(w[0],w[1],w[2],w[3]),f.useQuaternion=!0):f.rotation.set(x[0],x[1],x[2]),f.scale.set(G[0],
G[1],G[2])),f.visible=d.visible,f.castShadow=d.castShadow,f.receiveShadow=d.receiveShadow,a.add(f),F.objects[c]=f}else y=d.position,x=d.rotation,w=d.quaternion,G=d.scale,w=0,f=new THREE.Object3D,f.name=c,f.position.set(y[0],y[1],y[2]),w?(f.quaternion.set(w[0],w[1],w[2],w[3]),f.useQuaternion=!0):f.rotation.set(x[0],x[1],x[2]),f.scale.set(G[0],G[1],G[2]),f.visible=void 0!==d.visible?d.visible:!1,a.add(f),F.objects[c]=f,F.empties[c]=f;if(f){if(void 0!==d.properties)for(var g in d.properties)f.properties[g]=
d.properties[g];void 0!==d.children&&e(f,d.children)}}}function f(a){return function(b){F.geometries[a]=b;e(F.scene,I.objects);O-=1;l.onLoadComplete();h()}}function g(a){return function(b){F.geometries[a]=b}}function h(){l.callbackProgress({totalModels:S,totalTextures:P,loadedModels:S-O,loadedTextures:P-R},F);l.onLoadProgress();0===O&&0===R&&b(F)}var l=this,k=THREE.Loader.prototype.extractUrlBase(c),m,q,p,t,r,u,s,v,y,x,w,G,E,A,D,C,M,H,L,O,R,S,P,F,I=a;for(E in this.geometryHandlerMap)this.geometryHandlerMap[E].loaderObject=
new this.geometryHandlerMap[E].loaderClass;R=O=0;F={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(I.transform&&(a=I.transform.position,c=I.transform.rotation,E=I.transform.scale,a&&F.scene.position.set(a[0],a[1],a[2]),c&&F.scene.rotation.set(c[0],c[1],c[2]),E&&F.scene.scale.set(E[0],E[1],E[2]),a||c||E))F.scene.updateMatrix(),F.scene.updateMatrixWorld();a=function(a){return function(){R-=a;h();l.onLoadComplete()}};for(t in I.cameras)E=
I.cameras[t],"perspective"===E.type?M=new THREE.PerspectiveCamera(E.fov,E.aspect,E.near,E.far):"ortho"===E.type&&(M=new THREE.OrthographicCamera(E.left,E.right,E.top,E.bottom,E.near,E.far)),y=E.position,c=E.target,E=E.up,M.position.set(y[0],y[1],y[2]),M.target=new THREE.Vector3(c[0],c[1],c[2]),E&&M.up.set(E[0],E[1],E[2]),F.cameras[t]=M;for(p in I.lights)c=I.lights[p],t=void 0!==c.color?c.color:16777215,M=void 0!==c.intensity?c.intensity:1,"directional"===c.type?(y=c.direction,v=new THREE.DirectionalLight(t,
M),v.position.set(y[0],y[1],y[2]),v.position.normalize()):"point"===c.type?(y=c.position,v=c.distance,v=new THREE.PointLight(t,M,v),v.position.set(y[0],y[1],y[2])):"ambient"===c.type&&(v=new THREE.AmbientLight(t)),F.scene.add(v),F.lights[p]=v;for(r in I.fogs)p=I.fogs[r],"linear"===p.type?H=new THREE.Fog(0,p.near,p.far):"exp2"===p.type&&(H=new THREE.FogExp2(0,p.density)),E=p.color,H.color.setRGB(E[0],E[1],E[2]),F.fogs[r]=H;F.cameras&&I.defaults.camera&&(F.currentCamera=F.cameras[I.defaults.camera]);
F.fogs&&I.defaults.fog&&(F.scene.fog=F.fogs[I.defaults.fog]);E=I.defaults.bgcolor;F.bgColor=new THREE.Color;F.bgColor.setRGB(E[0],E[1],E[2]);F.bgColorAlpha=I.defaults.bgalpha;for(m in I.geometries)r=I.geometries[m],r.type in this.geometryHandlerMap&&(O+=1,l.onLoadStart());S=O;for(m in I.geometries)if(r=I.geometries[m],"cube"===r.type)D=new THREE.CubeGeometry(r.width,r.height,r.depth,r.segmentsWidth,r.segmentsHeight,r.segmentsDepth,null,r.flipped,r.sides),F.geometries[m]=D;else if("plane"===r.type)D=
new THREE.PlaneGeometry(r.width,r.height,r.segmentsWidth,r.segmentsHeight),F.geometries[m]=D;else if("sphere"===r.type)D=new THREE.SphereGeometry(r.radius,r.segmentsWidth,r.segmentsHeight),F.geometries[m]=D;else if("cylinder"===r.type)D=new THREE.CylinderGeometry(r.topRad,r.botRad,r.height,r.radSegs,r.heightSegs),F.geometries[m]=D;else if("torus"===r.type)D=new THREE.TorusGeometry(r.radius,r.tube,r.segmentsR,r.segmentsT),F.geometries[m]=D;else if("icosahedron"===r.type)D=new THREE.IcosahedronGeometry(r.radius,
r.subdivisions),F.geometries[m]=D;else if(r.type in this.geometryHandlerMap){H={};for(L in r)"type"!==L&&"url"!==L&&(H[L]=r[L]);this.geometryHandlerMap[r.type].loaderObject.load(d(r.url,I.urlBaseType),f(m),H)}else"embedded"===r.type&&(r=I.embeds[r.id],r.metadata=I.metadata,r&&this.geometryHandlerMap.ascii.loaderObject.createModel(r,g(m),""));for(u in I.textures)if(m=I.textures[u],m.url instanceof Array){R+=m.url.length;for(L=0;L<m.url.length;L++)l.onLoadStart()}else R+=1,l.onLoadStart();P=R;for(u in I.textures){m=
I.textures[u];void 0!==m.mapping&&void 0!==THREE[m.mapping]&&(m.mapping=new THREE[m.mapping]);if(m.url instanceof Array){r=m.url.length;H=[];for(L=0;L<r;L++)H[L]=d(m.url[L],I.urlBaseType);L=(L=H[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(H,m.mapping,a(r)):THREE.ImageUtils.loadTextureCube(H,m.mapping,a(r))}else L=m.url.toLowerCase().endsWith(".dds"),r=d(m.url,I.urlBaseType),H=a(1),L=L?THREE.ImageUtils.loadCompressedTexture(r,m.mapping,H):THREE.ImageUtils.loadTexture(r,m.mapping,
H),void 0!==THREE[m.minFilter]&&(L.minFilter=THREE[m.minFilter]),void 0!==THREE[m.magFilter]&&(L.magFilter=THREE[m.magFilter]),m.anisotropy&&(L.anisotropy=m.anisotropy),m.repeat&&(L.repeat.set(m.repeat[0],m.repeat[1]),1!==m.repeat[0]&&(L.wrapS=THREE.RepeatWrapping),1!==m.repeat[1]&&(L.wrapT=THREE.RepeatWrapping)),m.offset&&L.offset.set(m.offset[0],m.offset[1]),m.wrap&&(r={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==r[m.wrap[0]]&&(L.wrapS=r[m.wrap[0]]),void 0!==r[m.wrap[1]]&&
(L.wrapT=r[m.wrap[1]]));F.textures[u]=L}for(q in I.materials){s=I.materials[q];for(A in s.parameters)"envMap"===A||"map"===A||"lightMap"===A||"bumpMap"===A?s.parameters[A]=F.textures[s.parameters[A]]:"shading"===A?s.parameters[A]="flat"===s.parameters[A]?THREE.FlatShading:THREE.SmoothShading:"side"===A?s.parameters[A]="double"==s.parameters[A]?THREE.DoubleSide:"back"==s.parameters[A]?THREE.BackSide:THREE.FrontSide:"blending"===A?s.parameters[A]=s.parameters[A]in THREE?THREE[s.parameters[A]]:THREE.NormalBlending:
"combine"===A?s.parameters[A]="MixOperation"==s.parameters[A]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===A?"face"==s.parameters[A]?s.parameters[A]=THREE.FaceColors:s.parameters[A]&&(s.parameters[A]=THREE.VertexColors):"wrapRGB"===A&&(u=s.parameters[A],s.parameters[A]=new THREE.Vector3(u[0],u[1],u[2]));void 0!==s.parameters.opacity&&1>s.parameters.opacity&&(s.parameters.transparent=!0);s.parameters.normalMap?(u=THREE.ShaderUtils.lib.normal,a=THREE.UniformsUtils.clone(u.uniforms),m=
s.parameters.color,L=s.parameters.specular,r=s.parameters.ambient,H=s.parameters.shininess,a.tNormal.value=F.textures[s.parameters.normalMap],s.parameters.normalScale&&a.uNormalScale.value.set(s.parameters.normalScale[0],s.parameters.normalScale[1]),s.parameters.map&&(a.tDiffuse.value=s.parameters.map,a.enableDiffuse.value=!0),s.parameters.envMap&&(a.tCube.value=s.parameters.envMap,a.enableReflection.value=!0,a.uReflectivity.value=s.parameters.reflectivity),s.parameters.lightMap&&(a.tAO.value=s.parameters.lightMap,
a.enableAO.value=!0),s.parameters.specularMap&&(a.tSpecular.value=F.textures[s.parameters.specularMap],a.enableSpecular.value=!0),s.parameters.displacementMap&&(a.tDisplacement.value=F.textures[s.parameters.displacementMap],a.enableDisplacement.value=!0,a.uDisplacementBias.value=s.parameters.displacementBias,a.uDisplacementScale.value=s.parameters.displacementScale),a.uDiffuseColor.value.setHex(m),a.uSpecularColor.value.setHex(L),a.uAmbientColor.value.setHex(r),a.uShininess.value=H,s.parameters.opacity&&
(a.uOpacity.value=s.parameters.opacity),C=new THREE.ShaderMaterial({fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:a,lights:!0,fog:!0})):C=new THREE[s.type](s.parameters);F.materials[q]=C}e(F.scene,I.objects);l.callbackSync(F);h()};THREE.TextureLoader=function(){THREE.EventTarget.call(this);this.crossOrigin=null};
THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};
THREE.Material=function(){this.id=THREE.MaterialCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color&&"number"===typeof c?d.setHex(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.MaterialCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.wrapAround=this.perPixel=this.metal=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=
1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(){};
THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(a,c){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ParticleDOMMaterial=function(a){this.element=a};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};
THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=this.uniforms;a.attributes=this.attributes;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;
return a};
THREE.Texture=function(a,b,c,d,e,f,g,h,l){this.id=THREE.TextureCount++;this.image=a;this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==l?l:1;this.format=void 0!==g?g:THREE.RGBAFormat;this.type=void 0!==h?h:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,
1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture;a.image=this.image;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;return a}};THREE.TextureCount=0;
THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,l,k){THREE.Texture.call(this,null,f,g,h,l,k,d,e);this.image={width:b,height:c};this.mipmaps=a};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);
THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;a.image=this.image;a.mipmaps=this.mipmaps;a.format=this.format;a.type=this.type;a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.DataTexture=function(a,b,c,d,e,f,g,h,l,k){THREE.Texture.call(this,null,f,g,h,l,k,d,e);this.image={data:a,width:b,height:c}};
THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.image.data,this.image.width,this.image.height,this.format,this.type,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius);this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),
this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,f;if(void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,f=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==f?b.scale.set(f[0],f[1],f[2]):b.scale.set(1,1,1);for(a=0;a<this.bones.length;a++)c=
this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=
THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;a=0;for(var b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e].name.match(d);if(g&&1<g.length){g=g[1];c[g]||(c[g]={start:Infinity,end:-Infinity});var h=c[g];e<h.start&&(h.start=e);e>h.end&&(h.end=e);b||(b=g)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);
THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);b=Math.abs(b);for(var c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=void 0!==a.color?new THREE.Color(a.color):new THREE.Color(16777215);this.map=void 0!==a.map?a.map:new THREE.Texture;this.blending=void 0!==a.blending?a.blending:THREE.NormalBlending;this.blendSrc=void 0!==a.blendSrc?a.blendSrc:THREE.SrcAlphaFactor;this.blendDst=void 0!==a.blendDst?a.blendDst:THREE.OneMinusSrcAlphaFactor;this.blendEquation=void 0!==a.blendEquation?a.blendEquation:THREE.AddEquation;this.useScreenCoordinates=void 0!==a.useScreenCoordinates?
a.useScreenCoordinates:!0;this.mergeWith3D=void 0!==a.mergeWith3D?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=void 0!==a.affectedByDistance?a.affectedByDistance:!this.useScreenCoordinates;this.scaleByViewport=void 0!==a.scaleByViewport?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=
new THREE.Vector2(1,1)};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(1!==this.scale.x||1!==this.scale.y)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};
THREE.CanvasRenderer=function(a){function b(a){y!==a&&(y=u.globalAlpha=a)}function c(a){x!==a&&(a===THREE.NormalBlending?u.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?u.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(u.globalCompositeOperation="darker"),x=a)}function d(a){w!==a&&(w=u.strokeStyle=a)}function e(a){G!==a&&(G=u.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);a=a||{};var f=this,g,h,l,k=new THREE.Projector,m=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),q,p,t,r,u=m.getContext("2d"),s=new THREE.Color(0),v=0,y=1,x=0,w=null,G=null,E=null,A=null,D=null,C,M,H,L,O=new THREE.RenderableVertex,R=new THREE.RenderableVertex,S,P,F,I,ba,ca,ia,aa,la,K,qa,Fa,Z=new THREE.Color,Y=new THREE.Color,$=new THREE.Color,Q=new THREE.Color,fa=new THREE.Color,na={},ra={},ha,ua,sa,ya,cb,oa,Sa,Ga,Za,gb,hb=new THREE.Rectangle,ma=new THREE.Rectangle,Ba=new THREE.Rectangle,kb=!1,Ha=new THREE.Color,ib=new THREE.Color,Ka=new THREE.Color,za=new THREE.Vector3,
Da,eb,N,xa,ja,qb;a=16;Da=document.createElement("canvas");Da.width=Da.height=2;eb=Da.getContext("2d");eb.fillStyle="rgba(0,0,0,1)";eb.fillRect(0,0,2,2);N=eb.getImageData(0,0,2,2);xa=N.data;ja=document.createElement("canvas");ja.width=ja.height=a;qb=ja.getContext("2d");qb.translate(-a/2,-a/2);qb.scale(a,a);a--;this.domElement=m;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,b){q=a;p=b;t=Math.floor(q/2);r=Math.floor(p/2);m.width=
q;m.height=p;hb.set(-t,-r,t,r);ma.set(-t,-r,t,r);y=1;x=0;D=A=E=G=w=null};this.setClearColor=function(a,b){s.copy(a);v=void 0!==b?b:1;ma.set(-t,-r,t,r)};this.setClearColorHex=function(a,b){s.setHex(a);v=void 0!==b?b:1;ma.set(-t,-r,t,r)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){u.setTransform(1,0,0,-1,t,r);!1===ma.isEmpty()&&(ma.minSelf(hb),ma.inflate(2),1>v&&u.clearRect(Math.floor(ma.getX()),Math.floor(ma.getY()),Math.floor(ma.getWidth()),Math.floor(ma.getHeight())),0<v&&(c(THREE.NormalBlending),
b(1),e("rgba("+Math.floor(255*s.r)+","+Math.floor(255*s.g)+","+Math.floor(255*s.b)+","+v+")"),u.fillRect(Math.floor(ma.getX()),Math.floor(ma.getY()),Math.floor(ma.getWidth()),Math.floor(ma.getHeight()))),ma.empty())};this.render=function(a,n){function m(){Ha.setRGB(0,0,0);ib.setRGB(0,0,0);Ka.setRGB(0,0,0);for(var a=0,b=l.length;a<b;a++){var c=l[a],d=c.color;c instanceof THREE.AmbientLight?(Ha.r+=d.r,Ha.g+=d.g,Ha.b+=d.b):c instanceof THREE.DirectionalLight?(ib.r+=d.r,ib.g+=d.g,ib.b+=d.b):c instanceof
THREE.PointLight&&(Ka.r+=d.r,Ka.g+=d.g,Ka.b+=d.b)}}function p(a,b,c){for(var d=0,e=l.length;d<e;d++){var f=l[d],g=f.color;if(f instanceof THREE.DirectionalLight){var h=f.matrixWorld.getPosition().normalize(),n=b.dot(h);0>=n||(n*=f.intensity,c.r+=g.r*n,c.g+=g.g*n,c.b+=g.b*n)}else f instanceof THREE.PointLight&&(h=f.matrixWorld.getPosition(),n=b.dot(za.sub(h,a).normalize()),0>=n||(n*=0==f.distance?1:1-Math.min(a.distanceTo(h)/f.distance,1),0!=n&&(n*=f.intensity,c.r+=g.r*n,c.g+=g.g*n,c.b+=g.b*n)))}}
function q(a,f,g,h){b(g.opacity);c(g.blending);var n,l,k,m,p;g instanceof THREE.ParticleBasicMaterial?null===g.map?(l=f.object.scale.x,k=f.object.scale.y,l*=f.scale.x*t,k*=f.scale.y*r,Ba.set(a.x-l,a.y-k,a.x+l,a.y+k),!1!==hb.intersects(Ba)&&(e(g.color.getContextStyle()),u.save(),u.translate(a.x,a.y),u.rotate(-f.rotation),u.scale(l,k),u.fillRect(-1,-1,2,2),u.restore())):(g=g.map.image,m=g.width>>1,p=g.height>>1,l=f.scale.x*t,k=f.scale.y*r,h=l*m,n=k*p,Ba.set(a.x-h,a.y-n,a.x+h,a.y+n),!1!==hb.intersects(Ba)&&
(u.save(),u.translate(a.x,a.y),u.rotate(-f.rotation),u.scale(l,-k),u.translate(-m,-p),u.drawImage(g,0,0),u.restore())):g instanceof THREE.ParticleCanvasMaterial&&(h=f.scale.x*t,n=f.scale.y*r,Ba.set(a.x-h,a.y-n,a.x+h,a.y+n),!1!==hb.intersects(Ba)&&(d(g.color.getContextStyle()),e(g.color.getContextStyle()),u.save(),u.translate(a.x,a.y),u.rotate(-f.rotation),u.scale(h,n),g.program(u),u.restore()))}function s(a,e,f,g,h){b(g.opacity);c(g.blending);u.beginPath();u.moveTo(a.positionScreen.x,a.positionScreen.y);
u.lineTo(e.positionScreen.x,e.positionScreen.y);g instanceof THREE.LineBasicMaterial&&(a=g.linewidth,E!==a&&(E=u.lineWidth=a),a=g.linecap,A!==a&&(A=u.lineCap=a),a=g.linejoin,D!==a&&(D=u.lineJoin=a),d(g.color.getContextStyle()),u.stroke(),Ba.inflate(2*g.linewidth))}function v(a,d,e,g,h,l,k,m,q){f.info.render.vertices+=3;f.info.render.faces++;b(m.opacity);c(m.blending);S=a.positionScreen.x;P=a.positionScreen.y;F=d.positionScreen.x;I=d.positionScreen.y;ba=e.positionScreen.x;ca=e.positionScreen.y;x(S,
P,F,I,ba,ca);(m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshPhongMaterial)&&null===m.map&&null===m.map?!0===kb?(g=m.color,h=m.emissive,!1===m.wireframe&&m.shading==THREE.SmoothShading&&3==k.vertexNormalsLength?(Y.r=$.r=Q.r=Ha.r,Y.g=$.g=Q.g=Ha.g,Y.b=$.b=Q.b=Ha.b,p(k.v1.positionWorld,k.vertexNormalsWorld[0],Y),p(k.v2.positionWorld,k.vertexNormalsWorld[1],$),p(k.v3.positionWorld,k.vertexNormalsWorld[2],Q),Y.r=g.r*Y.r+h.r,Y.g=g.g*Y.g+h.g,Y.b=g.b*Y.b+h.b,$.r=g.r*$.r+h.r,$.g=g.g*$.g+h.g,
$.b=g.b*$.b+h.b,Q.r=g.r*Q.r+h.r,Q.g=g.g*Q.g+h.g,Q.b=g.b*Q.b+h.b,fa.r=0.5*($.r+Q.r),fa.g=0.5*($.g+Q.g),fa.b=0.5*($.b+Q.b),sa=zc(Y,$,Q,fa),gc(S,P,F,I,ba,ca,0,0,1,0,0,1,sa)):(Z.r=Ha.r,Z.g=Ha.g,Z.b=Ha.b,p(k.centroidWorld,k.normalWorld,Z),Z.r=g.r*Z.r+h.r,Z.g=g.g*Z.g+h.g,Z.b=g.b*Z.b+h.b,!0===m.wireframe?mb(Z,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):Lb(Z))):!0===m.wireframe?mb(m.color,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):Lb(m.color):m instanceof THREE.MeshBasicMaterial||
m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshPhongMaterial?null!==m.map?m.map.mapping instanceof THREE.UVMapping&&(ya=k.uvs[0],Tc(S,P,F,I,ba,ca,ya[g].u,ya[g].v,ya[h].u,ya[h].v,ya[l].u,ya[l].v,m.map)):null!==m.envMap?m.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(a=n.matrixWorldInverse,za.copy(k.vertexNormalsWorld[g]),cb=0.5*(za.x*a.elements[0]+za.y*a.elements[4]+za.z*a.elements[8])+0.5,oa=0.5*(za.x*a.elements[1]+za.y*a.elements[5]+za.z*a.elements[9])+0.5,za.copy(k.vertexNormalsWorld[h]),
Sa=0.5*(za.x*a.elements[0]+za.y*a.elements[4]+za.z*a.elements[8])+0.5,Ga=0.5*(za.x*a.elements[1]+za.y*a.elements[5]+za.z*a.elements[9])+0.5,za.copy(k.vertexNormalsWorld[l]),Za=0.5*(za.x*a.elements[0]+za.y*a.elements[4]+za.z*a.elements[8])+0.5,gb=0.5*(za.x*a.elements[1]+za.y*a.elements[5]+za.z*a.elements[9])+0.5,Tc(S,P,F,I,ba,ca,cb,oa,Sa,Ga,Za,gb,m.envMap)):!0===m.wireframe?mb(m.color,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):Lb(m.color):m instanceof THREE.MeshDepthMaterial?(ha=
n.near,ua=n.far,Y.r=Y.g=Y.b=1-cc(a.positionScreen.z,ha,ua),$.r=$.g=$.b=1-cc(d.positionScreen.z,ha,ua),Q.r=Q.g=Q.b=1-cc(e.positionScreen.z,ha,ua),fa.r=0.5*($.r+Q.r),fa.g=0.5*($.g+Q.g),fa.b=0.5*($.b+Q.b),sa=zc(Y,$,Q,fa),gc(S,P,F,I,ba,ca,0,0,1,0,0,1,sa)):m instanceof THREE.MeshNormalMaterial&&(Z.r=G(k.normalWorld.x),Z.g=G(k.normalWorld.y),Z.b=G(k.normalWorld.z),!0===m.wireframe?mb(Z,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):Lb(Z))}function w(a,d,e,g,h,m,l,k,q){f.info.render.vertices+=
4;f.info.render.faces++;b(k.opacity);c(k.blending);void 0!==k.map&&null!==k.map||void 0!==k.envMap&&null!==k.envMap?(v(a,d,g,0,1,3,l,k,q),v(h,e,m,1,2,3,l,k,q)):(S=a.positionScreen.x,P=a.positionScreen.y,F=d.positionScreen.x,I=d.positionScreen.y,ba=e.positionScreen.x,ca=e.positionScreen.y,ia=g.positionScreen.x,aa=g.positionScreen.y,la=h.positionScreen.x,K=h.positionScreen.y,qa=m.positionScreen.x,Fa=m.positionScreen.y,k instanceof THREE.MeshLambertMaterial||k instanceof THREE.MeshPhongMaterial?!0===
kb?(a=k.color,d=k.emissive,!1===k.wireframe&&k.shading==THREE.SmoothShading&&4==l.vertexNormalsLength?(Y.r=$.r=Q.r=fa.r=Ha.r,Y.g=$.g=Q.g=fa.g=Ha.g,Y.b=$.b=Q.b=fa.b=Ha.b,p(l.v1.positionWorld,l.vertexNormalsWorld[0],Y),p(l.v2.positionWorld,l.vertexNormalsWorld[1],$),p(l.v4.positionWorld,l.vertexNormalsWorld[3],Q),p(l.v3.positionWorld,l.vertexNormalsWorld[2],fa),Y.r=a.r*Y.r+d.r,Y.g=a.g*Y.g+d.g,Y.b=a.b*Y.b+d.b,$.r=a.r*$.r+d.r,$.g=a.g*$.g+d.g,$.b=a.b*$.b+d.b,Q.r=a.r*Q.r+d.r,Q.g=a.g*Q.g+d.g,Q.b=a.b*Q.b+
d.b,fa.r=a.r*fa.r+d.r,fa.g=a.g*fa.g+d.g,fa.b=a.b*fa.b+d.b,sa=zc(Y,$,Q,fa),x(S,P,F,I,ia,aa),gc(S,P,F,I,ia,aa,0,0,1,0,0,1,sa),x(la,K,ba,ca,qa,Fa),gc(la,K,ba,ca,qa,Fa,1,0,1,1,0,1,sa)):(Z.r=Ha.r,Z.g=Ha.g,Z.b=Ha.b,p(l.centroidWorld,l.normalWorld,Z),Z.r=a.r*Z.r+d.r,Z.g=a.g*Z.g+d.g,Z.b=a.b*Z.b+d.b,y(S,P,F,I,ba,ca,ia,aa),!0===k.wireframe?mb(Z,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):Lb(Z))):(y(S,P,F,I,ba,ca,ia,aa),!0===k.wireframe?mb(k.color,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):
Lb(k.color)):k instanceof THREE.MeshBasicMaterial?(y(S,P,F,I,ba,ca,ia,aa),!0===k.wireframe?mb(k.color,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):Lb(k.color)):k instanceof THREE.MeshNormalMaterial?(Z.r=G(l.normalWorld.x),Z.g=G(l.normalWorld.y),Z.b=G(l.normalWorld.z),y(S,P,F,I,ba,ca,ia,aa),!0===k.wireframe?mb(Z,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):Lb(Z)):k instanceof THREE.MeshDepthMaterial&&(ha=n.near,ua=n.far,Y.r=Y.g=Y.b=1-cc(a.positionScreen.z,ha,ua),$.r=
$.g=$.b=1-cc(d.positionScreen.z,ha,ua),Q.r=Q.g=Q.b=1-cc(g.positionScreen.z,ha,ua),fa.r=fa.g=fa.b=1-cc(e.positionScreen.z,ha,ua),sa=zc(Y,$,Q,fa),x(S,P,F,I,ia,aa),gc(S,P,F,I,ia,aa,0,0,1,0,0,1,sa),x(la,K,ba,ca,qa,Fa),gc(la,K,ba,ca,qa,Fa,1,0,1,1,0,1,sa)))}function x(a,b,c,d,e,f){u.beginPath();u.moveTo(a,b);u.lineTo(c,d);u.lineTo(e,f);u.closePath()}function y(a,b,c,d,e,f,g,h){u.beginPath();u.moveTo(a,b);u.lineTo(c,d);u.lineTo(e,f);u.lineTo(g,h);u.closePath()}function mb(a,b,c,e){E!==b&&(E=u.lineWidth=
b);A!==c&&(A=u.lineCap=c);D!==e&&(D=u.lineJoin=e);d(a.getContextStyle());u.stroke();Ba.inflate(2*b)}function Lb(a){e(a.getContextStyle());u.fill()}function Tc(a,b,c,d,f,g,h,n,k,l,m,p,q){if(!(q instanceof THREE.DataTexture||void 0===q.image||0==q.image.width)){if(!0===q.needsUpdate){var N=q.wrapS==THREE.RepeatWrapping,mb=q.wrapT==THREE.RepeatWrapping;na[q.id]=u.createPattern(q.image,!0===N&&!0===mb?"repeat":!0===N&&!1===mb?"repeat-x":!1===N&&!0===mb?"repeat-y":"no-repeat");q.needsUpdate=!1}void 0===
na[q.id]?e("rgba(0,0,0,1)"):e(na[q.id]);var N=q.offset.x/q.repeat.x,mb=q.offset.y/q.repeat.y,r=q.image.width*q.repeat.x,s=q.image.height*q.repeat.y;h=(h+N)*r;n=(1-n+mb)*s;c-=a;d-=b;f-=a;g-=b;k=(k+N)*r-h;l=(1-l+mb)*s-n;m=(m+N)*r-h;p=(1-p+mb)*s-n;N=k*p-m*l;0===N?(void 0===ra[q.id]&&(b=document.createElement("canvas"),b.width=q.image.width,b.height=q.image.height,b=b.getContext("2d"),b.drawImage(q.image,0,0),ra[q.id]=b.getImageData(0,0,q.image.width,q.image.height).data),b=ra[q.id],h=4*(Math.floor(h)+
Math.floor(n)*q.image.width),Z.setRGB(b[h]/255,b[h+1]/255,b[h+2]/255),Lb(Z)):(N=1/N,q=(p*c-l*f)*N,l=(p*d-l*g)*N,c=(k*f-m*c)*N,d=(k*g-m*d)*N,a=a-q*h-c*n,h=b-l*h-d*n,u.save(),u.transform(q,l,c,d,a,h),u.fill(),u.restore())}}function gc(a,b,c,d,e,f,g,h,n,k,l,m,p){var q,N;q=p.width-1;N=p.height-1;g*=q;h*=N;c-=a;d-=b;e-=a;f-=b;n=n*q-g;k=k*N-h;l=l*q-g;m=m*N-h;N=1/(n*m-l*k);q=(m*c-k*e)*N;k=(m*d-k*f)*N;c=(n*e-l*c)*N;d=(n*f-l*d)*N;a=a-q*g-c*h;b=b-k*g-d*h;u.save();u.transform(q,k,c,d,a,b);u.clip();u.drawImage(p,
0,0);u.restore()}function zc(a,b,c,d){xa[0]=255*a.r|0;xa[1]=255*a.g|0;xa[2]=255*a.b|0;xa[4]=255*b.r|0;xa[5]=255*b.g|0;xa[6]=255*b.b|0;xa[8]=255*c.r|0;xa[9]=255*c.g|0;xa[10]=255*c.b|0;xa[12]=255*d.r|0;xa[13]=255*d.g|0;xa[14]=255*d.b|0;eb.putImageData(N,0,0);qb.drawImage(Da,0,0);return ja}function cc(a,b,c){a=(a-b)/(c-b);return a*a*(3-2*a)}function G(a){a=0.5*(a+1);return 0>a?0:1<a?1:a}function Sb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}
if(!1===n instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{var Ac,Uc,$a,Mb;!0===this.autoClear?this.clear():u.setTransform(1,0,0,-1,t,r);f.info.render.vertices=0;f.info.render.faces=0;g=k.projectScene(a,n,this.sortObjects,this.sortElements);h=g.elements;l=g.lights;kb=0<l.length;!0===kb&&m();Ac=0;for(Uc=h.length;Ac<Uc;Ac++)$a=h[Ac],Mb=$a.material,void 0===Mb||!1===Mb.visible||(Ba.empty(),$a instanceof THREE.RenderableParticle?(C=
$a,C.x*=t,C.y*=r,q(C,$a,Mb,a)):$a instanceof THREE.RenderableLine?(C=$a.v1,M=$a.v2,C.positionScreen.x*=t,C.positionScreen.y*=r,M.positionScreen.x*=t,M.positionScreen.y*=r,Ba.addPoint(C.positionScreen.x,C.positionScreen.y),Ba.addPoint(M.positionScreen.x,M.positionScreen.y),!0===hb.intersects(Ba)&&s(C,M,$a,Mb,a)):$a instanceof THREE.RenderableFace3?(C=$a.v1,M=$a.v2,H=$a.v3,C.positionScreen.x*=t,C.positionScreen.y*=r,M.positionScreen.x*=t,M.positionScreen.y*=r,H.positionScreen.x*=t,H.positionScreen.y*=
r,!0===Mb.overdraw&&(Sb(C.positionScreen,M.positionScreen),Sb(M.positionScreen,H.positionScreen),Sb(H.positionScreen,C.positionScreen)),Ba.add3Points(C.positionScreen.x,C.positionScreen.y,M.positionScreen.x,M.positionScreen.y,H.positionScreen.x,H.positionScreen.y),!0===hb.intersects(Ba)&&v(C,M,H,0,1,2,$a,Mb,a)):$a instanceof THREE.RenderableFace4&&(C=$a.v1,M=$a.v2,H=$a.v3,L=$a.v4,C.positionScreen.x*=t,C.positionScreen.y*=r,M.positionScreen.x*=t,M.positionScreen.y*=r,H.positionScreen.x*=t,H.positionScreen.y*=
r,L.positionScreen.x*=t,L.positionScreen.y*=r,O.positionScreen.copy(M.positionScreen),R.positionScreen.copy(L.positionScreen),!0===Mb.overdraw&&(Sb(C.positionScreen,M.positionScreen),Sb(M.positionScreen,L.positionScreen),Sb(L.positionScreen,C.positionScreen),Sb(H.positionScreen,O.positionScreen),Sb(H.positionScreen,R.positionScreen)),Ba.addPoint(C.positionScreen.x,C.positionScreen.y),Ba.addPoint(M.positionScreen.x,M.positionScreen.y),Ba.addPoint(H.positionScreen.x,H.positionScreen.y),Ba.addPoint(L.positionScreen.x,
L.positionScreen.y),!0===hb.intersects(Ba)&&w(C,M,H,L,O,R,$a,Mb,a)),ma.addRectangle(Ba));u.setTransform(1,0,0,1,0,0)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 mPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 nWorld = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",
lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = mPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightPosition:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",
value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,
"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,
THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,
THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,
"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,
THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",
THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=n.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,b){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;if(0<=b.materialIndex)return a.geometry.materials[b.materialIndex]}function d(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function f(a){var b,
c,d;for(b in a.attributes)d="index"===b?n.ELEMENT_ARRAY_BUFFER:n.ARRAY_BUFFER,c=a.attributes[b],c.buffer=n.createBuffer(),n.bindBuffer(d,c.buffer),n.bufferData(d,c.array,n.STATIC_DRAW)}function g(a,b,c){var d,e,f,g,h=a.vertices;g=h.length;var k=a.colors,l=k.length,m=a.__vertexArray,p=a.__colorArray,q=a.__sortArray,r=a.verticesNeedUpdate,u=a.colorsNeedUpdate,s=a.__webglCustomAttributesList;if(c.sortParticles){N.copy(eb);N.multiplySelf(c.matrixWorld);for(d=0;d<g;d++)e=h[d],xa.copy(e),N.multiplyVector3(xa),
q[d]=[xa.z,d];q.sort(function(a,b){return b[0]-a[0]});for(d=0;d<g;d++)e=h[q[d][1]],f=3*d,m[f]=e.x,m[f+1]=e.y,m[f+2]=e.z;for(d=0;d<l;d++)f=3*d,e=k[q[d][1]],p[f]=e.r,p[f+1]=e.g,p[f+2]=e.b;if(s){k=0;for(l=s.length;k<l;k++)if(h=s[k],void 0===h.boundTo||"vertices"===h.boundTo)if(f=0,e=h.value.length,1===h.size)for(d=0;d<e;d++)g=q[d][1],h.array[d]=h.value[g];else if(2===h.size)for(d=0;d<e;d++)g=q[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=
q[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=q[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=q[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(r)for(d=0;d<g;d++)e=h[d],f=3*d,m[f]=e.x,m[f+1]=e.y,m[f+2]=e.z;if(u)for(d=0;d<l;d++)e=k[d],f=3*d,p[f]=e.r,p[f+1]=e.g,p[f+2]=e.b;if(s){k=0;for(l=s.length;k<l;k++)if(h=s[k],h.needsUpdate&&(void 0===
h.boundTo||"vertices"===h.boundTo))if(e=h.value.length,f=0,1===h.size)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(2===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(3===h.size)if("c"===h.type)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(4===h.size)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+
3]=g.w,f+=4}}if(r||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,m,b);if(u||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,p,b);if(s){k=0;for(l=s.length;k<l;k++)if(h=s[k],h.needsUpdate||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.bufferData(n.ARRAY_BUFFER,h.array,b)}}function h(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,h=d.uv,k=d.color,d=d.tangent;a.elementsNeedUpdate&&void 0!==
e&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.buffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(n.bindBuffer(n.ARRAY_BUFFER,f.buffer),n.bufferData(n.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(n.bindBuffer(n.ARRAY_BUFFER,g.buffer),n.bufferData(n.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==h&&(n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.bufferData(n.ARRAY_BUFFER,h.array,b));a.colorsNeedUpdate&&void 0!==k&&(n.bindBuffer(n.ARRAY_BUFFER,k.buffer),
n.bufferData(n.ARRAY_BUFFER,k.array,b));a.tangentsNeedUpdate&&void 0!==d&&(n.bindBuffer(n.ARRAY_BUFFER,d.buffer),n.bufferData(n.ARRAY_BUFFER,d.array,b));if(c)for(var l in a.attributes)delete a.attributes[l].array}function l(a,b){return b.z-a.z}function k(a,b){return b[1]-a[1]}function m(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)fa=Z=null,$=Q=ua=ha=Ga=Sa=sa=-1,qb=!0,a[d].render(b,c,Ka,za),fa=Z=null,$=Q=ua=ha=Ga=Sa=sa=-1,qb=!0}function q(a,b,c,d,e,f,g,h){var n,k,l,m;b?(k=a.length-1,m=b=-1):
(k=0,b=a.length,m=1);for(var p=k;p!==b;p+=m)if(n=a[p],n.render){k=n.object;l=n.buffer;if(h)n=h;else{n=n[c];if(!n)continue;g&&K.setBlending(n.blending,n.blendEquation,n.blendSrc,n.blendDst);K.setDepthTest(n.depthTest);K.setDepthWrite(n.depthWrite);A(n.polygonOffset,n.polygonOffsetFactor,n.polygonOffsetUnits)}K.setMaterialFaces(n);l instanceof THREE.BufferGeometry?K.renderBufferDirect(d,e,f,n,l,k):K.renderBuffer(d,e,f,n,l,k)}}function p(a,b,c,d,e,f,g){for(var h,n,k=0,l=a.length;k<l;k++)if(h=a[k],n=
h.object,n.visible){if(g)h=g;else{h=h[b];if(!h)continue;f&&K.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);K.setDepthTest(h.depthTest);K.setDepthWrite(h.depthWrite);A(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}K.renderImmediateObject(c,d,e,h,n)}}function t(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function r(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function u(a){for(var b in a.attributes)a.attributes[b].needsUpdate=
!1}function s(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function v(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function y(a,b,c,d,e){ra=0;d.needsUpdate&&(d.program&&K.deallocateMaterial(d),K.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(K.maxMorphTargets));var f=!1,g=d.program,h=g.uniforms,k=d.uniforms;g!==Z&&(n.useProgram(g),Z=g,f=!0);d.id!==$&&($=d.id,f=!0);if(f||a!==
fa)n.uniformMatrix4fv(h.projectionMatrix,!1,a._projectionMatrixArray),a!==fa&&(fa=a);if(d.skinning)if(jb&&e.useVertexTexture){if(null!==h.boneTexture){var l=x();n.uniform1i(h.boneTexture,l);K.setTexture(e.boneTexture,l)}}else null!==h.boneGlobalMatrices&&n.uniformMatrix4fv(h.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(k.fogColor.value=c.color,c instanceof THREE.Fog?(k.fogNear.value=c.near,k.fogFar.value=c.far):c instanceof THREE.FogExp2&&(k.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||
d instanceof THREE.MeshLambertMaterial||d.lights){if(qb){var m=0,p=0,q=0,N,r,u,s,t=fc,xa=t.directional.colors,v=t.directional.positions,w=t.point.colors,y=t.point.positions,D=t.point.distances,C=t.spot.colors,A=t.spot.positions,I=t.spot.distances,F=t.spot.directions,L=t.spot.angles,H=t.spot.exponents,Y=t.hemi.skyColors,Q=t.hemi.groundColors,rb=t.hemi.positions,la=0,P=0,db=0,aa=0;c=N=u=u=r=0;for(f=b.length;c<f;c++)l=b[c],!l.onlyShadow&&l.visible&&(N=l.color,s=l.intensity,r=l.distance,l instanceof THREE.AmbientLight?
K.gammaInput?(m+=N.r*N.r,p+=N.g*N.g,q+=N.b*N.b):(m+=N.r,p+=N.g,q+=N.b):l instanceof THREE.DirectionalLight?(r=3*la,K.gammaInput?G(xa,r,N,s*s):E(xa,r,N,s),ja.copy(l.matrixWorld.getPosition()),ja.subSelf(l.target.matrixWorld.getPosition()),ja.normalize(),v[r]=ja.x,v[r+1]=ja.y,v[r+2]=ja.z,la+=1):l instanceof THREE.PointLight?(u=3*P,K.gammaInput?G(w,u,N,s*s):E(w,u,N,s),s=l.matrixWorld.getPosition(),y[u]=s.x,y[u+1]=s.y,y[u+2]=s.z,D[P]=r,P+=1):l instanceof THREE.SpotLight?(u=3*db,K.gammaInput?G(C,u,N,s*
s):E(C,u,N,s),s=l.matrixWorld.getPosition(),A[u]=s.x,A[u+1]=s.y,A[u+2]=s.z,I[db]=r,ja.copy(s),ja.subSelf(l.target.matrixWorld.getPosition()),ja.normalize(),F[u]=ja.x,F[u+1]=ja.y,F[u+2]=ja.z,L[db]=Math.cos(l.angle),H[db]=l.exponent,db+=1):l instanceof THREE.HemisphereLight&&(r=l.color,u=l.groundColor,N=3*aa,K.gammaInput?(s*=s,G(Y,N,r,s),G(Q,N,u,s)):(E(Y,N,r,s),E(Q,N,u,s)),s=l.matrixWorld.getPosition(),rb[N]=s.x,rb[N+1]=s.y,rb[N+2]=s.z,aa+=1));c=3*la;for(f=xa.length;c<f;c++)xa[c]=0;c=3*P;for(f=w.length;c<
f;c++)w[c]=0;c=3*db;for(f=C.length;c<f;c++)C[c]=0;c=3*aa;for(f=Y.length;c<f;c++)Y[c]=0;c=3*aa;for(f=Q.length;c<f;c++)Q[c]=0;t.directional.length=la;t.point.length=P;t.spot.length=db;t.hemi.length=aa;t.ambient[0]=m;t.ambient[1]=p;t.ambient[2]=q;qb=!1}c=fc;k.ambientLightColor.value=c.ambient;k.directionalLightColor.value=c.directional.colors;k.directionalLightDirection.value=c.directional.positions;k.pointLightColor.value=c.point.colors;k.pointLightPosition.value=c.point.positions;k.pointLightDistance.value=
c.point.distances;k.spotLightColor.value=c.spot.colors;k.spotLightPosition.value=c.spot.positions;k.spotLightDistance.value=c.spot.distances;k.spotLightDirection.value=c.spot.directions;k.spotLightAngle.value=c.spot.angles;k.spotLightExponent.value=c.spot.exponents;k.hemisphereLightSkyColor.value=c.hemi.skyColors;k.hemisphereLightGroundColor.value=c.hemi.groundColors;k.hemisphereLightPosition.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof
THREE.MeshPhongMaterial){k.opacity.value=d.opacity;K.gammaInput?k.diffuse.value.copyGammaToLinear(d.color):k.diffuse.value=d.color;k.map.value=d.map;k.lightMap.value=d.lightMap;k.specularMap.value=d.specularMap;d.bumpMap&&(k.bumpMap.value=d.bumpMap,k.bumpScale.value=d.bumpScale);d.normalMap&&(k.normalMap.value=d.normalMap,k.normalScale.value.copy(d.normalScale));var Ia;d.map?Ia=d.map:d.specularMap?Ia=d.specularMap:d.normalMap?Ia=d.normalMap:d.bumpMap&&(Ia=d.bumpMap);void 0!==Ia&&(c=Ia.offset,Ia=Ia.repeat,
k.offsetRepeat.value.set(c.x,c.y,Ia.x,Ia.y));k.envMap.value=d.envMap;k.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;k.reflectivity.value=d.reflectivity;k.refractionRatio.value=d.refractionRatio;k.combine.value=d.combine;k.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(k.diffuse.value=d.color,k.opacity.value=d.opacity):d instanceof THREE.ParticleBasicMaterial?(k.psColor.value=d.color,k.opacity.value=
d.opacity,k.size.value=d.size,k.scale.value=R.height/2,k.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(k.shininess.value=d.shininess,K.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),k.emissive.value.copyGammaToLinear(d.emissive),k.specular.value.copyGammaToLinear(d.specular)):(k.ambient.value=d.ambient,k.emissive.value=d.emissive,k.specular.value=d.specular),d.wrapAround&&k.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?(K.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),
k.emissive.value.copyGammaToLinear(d.emissive)):(k.ambient.value=d.ambient,k.emissive.value=d.emissive),d.wrapAround&&k.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(k.mNear.value=a.near,k.mFar.value=a.far,k.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(k.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&k.shadowMatrix){c=Ia=0;for(f=b.length;c<f;c++)if(l=b[c],l.castShadow&&(l instanceof THREE.SpotLight||l instanceof THREE.DirectionalLight&&!l.shadowCascade))k.shadowMap.value[Ia]=
l.shadowMap,k.shadowMapSize.value[Ia]=l.shadowMapSize,k.shadowMatrix.value[Ia]=l.shadowMatrix,k.shadowDarkness.value[Ia]=l.shadowDarkness,k.shadowBias.value[Ia]=l.shadowBias,Ia++}b=d.uniformsList;k=0;for(Ia=b.length;k<Ia;k++)if(f=g.uniforms[b[k][1]])if(c=b[k][0],m=c.type,l=c.value,"i"===m)n.uniform1i(f,l);else if("f"===m)n.uniform1f(f,l);else if("v2"===m)n.uniform2f(f,l.x,l.y);else if("v3"===m)n.uniform3f(f,l.x,l.y,l.z);else if("v4"===m)n.uniform4f(f,l.x,l.y,l.z,l.w);else if("c"===m)n.uniform3f(f,
l.r,l.g,l.b);else if("iv1"===m)n.uniform1iv(f,l);else if("iv"===m)n.uniform3iv(f,l);else if("fv1"===m)n.uniform1fv(f,l);else if("fv"===m)n.uniform3fv(f,l);else if("v2v"===m){void 0===c._array&&(c._array=new Float32Array(2*l.length));m=0;for(p=l.length;m<p;m++)q=2*m,c._array[q]=l[m].x,c._array[q+1]=l[m].y;n.uniform2fv(f,c._array)}else if("v3v"===m){void 0===c._array&&(c._array=new Float32Array(3*l.length));m=0;for(p=l.length;m<p;m++)q=3*m,c._array[q]=l[m].x,c._array[q+1]=l[m].y,c._array[q+2]=l[m].z;
n.uniform3fv(f,c._array)}else if("v4v"===m){void 0===c._array&&(c._array=new Float32Array(4*l.length));m=0;for(p=l.length;m<p;m++)q=4*m,c._array[q]=l[m].x,c._array[q+1]=l[m].y,c._array[q+2]=l[m].z,c._array[q+3]=l[m].w;n.uniform4fv(f,c._array)}else if("m4"===m)void 0===c._array&&(c._array=new Float32Array(16)),l.flattenToArray(c._array),n.uniformMatrix4fv(f,!1,c._array);else if("m4v"===m){void 0===c._array&&(c._array=new Float32Array(16*l.length));m=0;for(p=l.length;m<p;m++)l[m].flattenToArrayOffset(c._array,
16*m);n.uniformMatrix4fv(f,!1,c._array)}else if("t"===m){if(q=l,l=x(),n.uniform1i(f,l),q)if(q.image instanceof Array&&6===q.image.length){if(c=q,f=l,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=n.createTexture());n.activeTexture(n.TEXTURE0+f);n.bindTexture(n.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,c.flipY);f=c instanceof THREE.CompressedTexture;l=[];for(m=0;6>m;m++)K.autoScaleCubemaps&&!f?(p=l,q=m,t=c.image[m],
v=ac,t.width<=v&&t.height<=v||(w=Math.max(t.width,t.height),xa=Math.floor(t.width*v/w),v=Math.floor(t.height*v/w),w=document.createElement("canvas"),w.width=xa,w.height=v,w.getContext("2d").drawImage(t,0,0,t.width,t.height,0,0,xa,v),t=w),p[q]=t):l[m]=c.image[m];m=l[0];p=0===(m.width&m.width-1)&&0===(m.height&m.height-1);q=O(c.format);t=O(c.type);M(n.TEXTURE_CUBE_MAP,c,p);for(m=0;6>m;m++)if(f){v=l[m].mipmaps;w=0;for(y=v.length;w<y;w++)xa=v[w],n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+m,
w,q,xa.width,xa.height,0,xa.data)}else n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,q,q,t,l[m]);c.generateMipmaps&&p&&n.generateMipmap(n.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else n.activeTexture(n.TEXTURE0+f),n.bindTexture(n.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else q instanceof THREE.WebGLRenderTargetCube?(c=q,n.activeTexture(n.TEXTURE0+l),n.bindTexture(n.TEXTURE_CUBE_MAP,c.__webglTexture)):K.setTexture(q,l)}else if("tv"===m){void 0===c._array&&(c._array=[]);m=
0;for(p=c.value.length;m<p;m++)c._array[m]=x();n.uniform1iv(f,c._array);m=0;for(p=c.value.length;m<p;m++)q=c.value[m],l=c._array[m],q&&K.setTexture(q,l)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==h.cameraPosition)b=a.matrixWorld.getPosition(),n.uniform3f(h.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==h.viewMatrix&&n.uniformMatrix4fv(h.viewMatrix,
!1,a._viewMatrixArray)}n.uniformMatrix4fv(h.modelViewMatrix,!1,e._modelViewMatrix.elements);h.normalMatrix&&n.uniformMatrix3fv(h.normalMatrix,!1,e._normalMatrix.elements);null!==h.modelMatrix&&n.uniformMatrix4fv(h.modelMatrix,!1,e.matrixWorld.elements);return g}function x(){var a=ra;a>=Ia&&console.warn("Trying to use "+a+" texture units while this GPU supports only "+Ia);ra+=1;return a}function w(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);
a._normalMatrix.transpose()}function G(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function E(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function A(a,b,c){Za!==a&&(a?n.enable(n.POLYGON_OFFSET_FILL):n.disable(n.POLYGON_OFFSET_FILL),Za=a);if(a&&(gb!==b||hb!==c))n.polygonOffset(b,c),gb=b,hb=c}function D(a){a=a.split("\n");for(var b=0,c=a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function C(a,b){var c;"fragment"===a?c=n.createShader(n.FRAGMENT_SHADER):"vertex"===a&&(c=n.createShader(n.VERTEX_SHADER));
n.shaderSource(c,b);n.compileShader(c);return!n.getShaderParameter(c,n.COMPILE_STATUS)?(console.error(n.getShaderInfoLog(c)),console.error(D(b)),null):c}function M(a,b,c){c?(n.texParameteri(a,n.TEXTURE_WRAP_S,O(b.wrapS)),n.texParameteri(a,n.TEXTURE_WRAP_T,O(b.wrapT)),n.texParameteri(a,n.TEXTURE_MAG_FILTER,O(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,O(b.minFilter))):(n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(a,
n.TEXTURE_MAG_FILTER,L(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,L(b.minFilter)));if(rb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))n.texParameterf(a,rb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,hc)),b.__oldAnisotropy=b.anisotropy}function H(a,b){n.bindRenderbuffer(n.RENDERBUFFER,a);b.depthBuffer&&!b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,
a)):b.depthBuffer&&b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,b.width,b.height)}function L(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?n.NEAREST:n.LINEAR}function O(a){if(a===THREE.RepeatWrapping)return n.REPEAT;if(a===THREE.ClampToEdgeWrapping)return n.CLAMP_TO_EDGE;
if(a===THREE.MirroredRepeatWrapping)return n.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return n.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return n.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return n.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return n.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return n.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return n.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return n.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return n.UNSIGNED_SHORT_4_4_4_4;
if(a===THREE.UnsignedShort5551Type)return n.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return n.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return n.BYTE;if(a===THREE.ShortType)return n.SHORT;if(a===THREE.UnsignedShortType)return n.UNSIGNED_SHORT;if(a===THREE.IntType)return n.INT;if(a===THREE.UnsignedIntType)return n.UNSIGNED_INT;if(a===THREE.FloatType)return n.FLOAT;if(a===THREE.AlphaFormat)return n.ALPHA;if(a===THREE.RGBFormat)return n.RGB;if(a===THREE.RGBAFormat)return n.RGBA;if(a===
THREE.LuminanceFormat)return n.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return n.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return n.FUNC_ADD;if(a===THREE.SubtractEquation)return n.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return n.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return n.ZERO;if(a===THREE.OneFactor)return n.ONE;if(a===THREE.SrcColorFactor)return n.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return n.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return n.SRC_ALPHA;if(a===
THREE.OneMinusSrcAlphaFactor)return n.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return n.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return n.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return n.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return n.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return n.SRC_ALPHA_SATURATE;if(void 0!==db){if(a===THREE.RGB_S3TC_DXT1_Format)return db.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return db.COMPRESSED_RGBA_S3TC_DXT1_EXT;
if(a===THREE.RGBA_S3TC_DXT3_Format)return db.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return db.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);a=a||{};var R=void 0!==a.canvas?a.canvas:document.createElement("canvas"),S=void 0!==a.precision?a.precision:"highp",P=void 0!==a.alpha?a.alpha:!0,F=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,I=void 0!==a.antialias?a.antialias:!1,ba=void 0!==a.stencil?a.stencil:!0,ca=void 0!==a.preserveDrawingBuffer?
a.preserveDrawingBuffer:!1,ia=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),aa=void 0!==a.clearAlpha?a.clearAlpha:0,la=void 0!==a.maxLights?a.maxLights:4;this.domElement=R;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapCullFrontFaces=this.shadowMapSoft=this.shadowMapAutoUpdate=
!0;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var K=this,qa=[],Fa=0,Z=null,Y=null,$=-1,Q=null,fa=null,na=0,ra=0,ha=-1,ua=-1,sa=-1,ya=-1,cb=-1,oa=-1,Sa=-1,Ga=-1,Za=null,gb=null,hb=null,ma=null,Ba=0,kb=0,Ha=0,ib=0,Ka=0,za=0,Da=new THREE.Frustum,eb=new THREE.Matrix4,N=new THREE.Matrix4,
xa=new THREE.Vector4,ja=new THREE.Vector3,qb=!0,fc={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],angles:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},n,rb,db;try{if(!(n=R.getContext("experimental-webgl",{alpha:P,premultipliedAlpha:F,antialias:I,stencil:ba,preserveDrawingBuffer:ca})))throw"Error creating WebGL context.";}catch(lb){console.error(lb)}a=
n.getExtension("OES_texture_float");P=n.getExtension("OES_standard_derivatives");rb=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");db=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");a||console.log("THREE.WebGLRenderer: Float textures not supported.");P||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");
rb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");db||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");n.clearColor(0,0,0,1);n.clearDepth(1);n.clearStencil(0);n.enable(n.DEPTH_TEST);n.depthFunc(n.LEQUAL);n.frontFace(n.CCW);n.cullFace(n.BACK);n.enable(n.CULL_FACE);n.enable(n.BLEND);n.blendEquation(n.FUNC_ADD);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.clearColor(ia.r,ia.g,ia.b,aa);this.context=n;var Ia=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),
P=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS);n.getParameter(n.MAX_TEXTURE_SIZE);var ac=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),hc=rb?n.getParameter(rb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,bc=0<P,jb=bc&&a;db&&n.getParameter(n.COMPRESSED_TEXTURE_FORMATS);this.getContext=function(){return n};this.supportsVertexTextures=function(){return bc};this.getMaxAnisotropy=function(){return hc};this.setSize=function(a,b){R.width=a;R.height=b;this.setViewport(0,0,R.width,R.height)};this.setViewport=function(a,
b,c,d){Ba=void 0!==a?a:0;kb=void 0!==b?b:0;Ha=void 0!==c?c:R.width;ib=void 0!==d?d:R.height;n.viewport(Ba,kb,Ha,ib)};this.setScissor=function(a,b,c,d){n.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)};this.setClearColorHex=function(a,b){ia.setHex(a);aa=b;n.clearColor(ia.r,ia.g,ia.b,aa)};this.setClearColor=function(a,b){ia.copy(a);aa=b;n.clearColor(ia.r,ia.g,ia.b,aa)};this.getClearColor=function(){return ia};this.getClearAlpha=function(){return aa};
this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=n.COLOR_BUFFER_BIT;if(void 0===b||b)d|=n.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=n.STENCIL_BUFFER_BIT;n.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,
delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._modelMatrixArray,a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups){var c=a.geometry.geometryGroups[b];n.deleteBuffer(c.__webglVertexBuffer);n.deleteBuffer(c.__webglNormalBuffer);n.deleteBuffer(c.__webglTangentBuffer);n.deleteBuffer(c.__webglColorBuffer);n.deleteBuffer(c.__webglUVBuffer);n.deleteBuffer(c.__webglUV2Buffer);n.deleteBuffer(c.__webglSkinIndicesBuffer);n.deleteBuffer(c.__webglSkinWeightsBuffer);n.deleteBuffer(c.__webglFaceBuffer);
n.deleteBuffer(c.__webglLineBuffer);var d=void 0,e=void 0;if(c.numMorphTargets){d=0;for(e=c.numMorphTargets;d<e;d++)n.deleteBuffer(c.__webglMorphTargetsBuffers[d])}if(c.numMorphNormals){d=0;for(e=c.numMorphNormals;d<e;d++)n.deleteBuffer(c.__webglMorphNormalsBuffers[d])}if(c.__webglCustomAttributesList)for(d in d=void 0,c.__webglCustomAttributesList)n.deleteBuffer(c.__webglCustomAttributesList[d].buffer);K.info.memory.geometries--}else a instanceof THREE.Ribbon?(a=a.geometry,n.deleteBuffer(a.__webglVertexBuffer),
n.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--):a instanceof THREE.Line?(a=a.geometry,n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--):a instanceof THREE.ParticleSystem&&(a=a.geometry,n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),K.info.memory.geometries--)};this.deallocateTexture=function(a){a.__webglInit&&(a.__webglInit=!1,n.deleteTexture(a.__webglTexture),K.info.memory.textures--)};this.deallocateRenderTarget=
function(a){if(a&&a.__webglTexture)if(n.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)n.deleteFramebuffer(a.__webglFramebuffer[b]),n.deleteRenderbuffer(a.__webglRenderbuffer[b]);else n.deleteFramebuffer(a.__webglFramebuffer),n.deleteRenderbuffer(a.__webglRenderbuffer)};this.deallocateMaterial=function(a){var b=a.program;if(b){a.program=void 0;var c,d,e=!1;a=0;for(c=qa.length;a<c;a++)if(d=qa[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(e){e=
[];a=0;for(c=qa.length;a<c;a++)d=qa[a],d.program!==b&&e.push(d);qa=e;n.deleteProgram(b);K.info.memory.programs--}}};this.updateShadowMap=function(a,b){Z=null;$=Q=Ga=Sa=sa=-1;qb=!0;ua=ha=-1;this.shadowMapPlugin.update(a,b)};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=n.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=n.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=n.createBuffer());a.hasColors&&
!a.__webglColorBuffer&&(a.__webglColorBuffer=n.createBuffer());a.hasPositions&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,a.positionArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.position),n.vertexAttribPointer(b.attributes.position,3,n.FLOAT,!1,0,0));if(a.hasNormals){n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,h,k,l,m,p,q,N,r=3*a.count;for(N=0;N<r;N+=9)q=a.normalArray,d=q[N],e=q[N+1],f=q[N+2],
g=q[N+3],k=q[N+4],m=q[N+5],h=q[N+6],l=q[N+7],p=q[N+8],d=(d+g+h)/3,e=(e+k+l)/3,f=(f+m+p)/3,q[N]=d,q[N+1]=e,q[N+2]=f,q[N+3]=d,q[N+4]=e,q[N+5]=f,q[N+6]=d,q[N+7]=e,q[N+8]=f}n.bufferData(n.ARRAY_BUFFER,a.normalArray,n.DYNAMIC_DRAW);n.enableVertexAttribArray(b.attributes.normal);n.vertexAttribPointer(b.attributes.normal,3,n.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUvBuffer),n.bufferData(n.ARRAY_BUFFER,a.uvArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.uv),n.vertexAttribPointer(b.attributes.uv,
2,n.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,a.colorArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.color),n.vertexAttribPointer(b.attributes.color,3,n.FLOAT,!1,0,0));n.drawArrays(n.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=y(a,b,c,d,f),a=c.attributes,b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==Q&&(Q=d,b=!0),f instanceof THREE.Mesh){f=
e.offsets;1<f.length&&(b=!0);d=0;for(c=f.length;d<c;++d){var g=f[d].index;if(b){var h=e.attributes.position,k=h.itemSize;n.bindBuffer(n.ARRAY_BUFFER,h.buffer);n.vertexAttribPointer(a.position,k,n.FLOAT,!1,0,4*g*k);h=e.attributes.normal;0<=a.normal&&h&&(k=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.vertexAttribPointer(a.normal,k,n.FLOAT,!1,0,4*g*k));h=e.attributes.uv;0<=a.uv&&h&&(h.buffer?(k=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.vertexAttribPointer(a.uv,k,n.FLOAT,!1,0,4*g*k),n.enableVertexAttribArray(a.uv)):
n.disableVertexAttribArray(a.uv));k=e.attributes.color;if(0<=a.color&&k){var l=k.itemSize;n.bindBuffer(n.ARRAY_BUFFER,k.buffer);n.vertexAttribPointer(a.color,l,n.FLOAT,!1,0,4*g*l)}h=e.attributes.tangent;0<=a.tangent&&h&&(k=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.vertexAttribPointer(a.tangent,k,n.FLOAT,!1,0,4*g*k));n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.attributes.index.buffer)}n.drawElements(n.TRIANGLES,f[d].count,n.UNSIGNED_SHORT,2*f[d].start);K.info.render.calls++;K.info.render.vertices+=
f[d].count;K.info.render.faces+=f[d].count/3}}else f instanceof THREE.ParticleSystem&&b&&(h=e.attributes.position,k=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),n.vertexAttribPointer(a.position,k,n.FLOAT,!1,0,0),k=e.attributes.color,0<=a.color&&k&&(l=k.itemSize,n.bindBuffer(n.ARRAY_BUFFER,k.buffer),n.vertexAttribPointer(a.color,l,n.FLOAT,!1,0,0)),n.drawArrays(n.POINTS,0,h.numItems/3),K.info.render.calls++,K.info.render.points+=h.numItems/3)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,
h;c=y(a,b,c,d,f);b=c.attributes;a=!1;c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==Q&&(Q=c,a=!0);if(!d.morphTargets&&0<=b.position)a&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),n.vertexAttribPointer(b.position,3,n.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0)):0<=c.position&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),
n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var l=0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;l<d.numSupportedMorphTargets&&l<h.length;)n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[l]]),n.vertexAttribPointer(c["morphTarget"+l],3,n.FLOAT,!1,0,0),d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[l]]),n.vertexAttribPointer(c["morphNormal"+l],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=g[h[l]],
l++}else{h=[];g=f.morphTargetInfluences;var m,p=g.length;for(m=0;m<p;m++)l=g[m],0<l&&h.push([m,l]);h.length>d.numSupportedMorphTargets?(h.sort(k),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(k):0===h.length&&h.push([0,0]);for(l=0;l<d.numSupportedMorphTargets;)h[l]?(m=h[l][0],n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),n.vertexAttribPointer(c["morphTarget"+l],3,n.FLOAT,!1,0,0),d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),
n.vertexAttribPointer(c["morphNormal"+l],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[l]=g[m]):(n.vertexAttribPointer(c["morphTarget"+l],3,n.FLOAT,!1,0,0),d.morphNormals&&n.vertexAttribPointer(c["morphNormal"+l],3,n.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[l]=0),l++}null!==d.program.uniforms.morphTargetInfluences&&n.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=
e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&(n.bindBuffer(n.ARRAY_BUFFER,c.buffer),n.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,n.FLOAT,!1,0,0))}0<=b.color&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglColorBuffer),n.vertexAttribPointer(b.color,3,n.FLOAT,!1,0,0));0<=b.normal&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglNormalBuffer),n.vertexAttribPointer(b.normal,3,n.FLOAT,!1,0,0));0<=b.tangent&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglTangentBuffer),n.vertexAttribPointer(b.tangent,
4,n.FLOAT,!1,0,0));0<=b.uv&&(e.__webglUVBuffer?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUVBuffer),n.vertexAttribPointer(b.uv,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(b.uv)):n.disableVertexAttribArray(b.uv));0<=b.uv2&&(e.__webglUV2Buffer?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUV2Buffer),n.vertexAttribPointer(b.uv2,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(b.uv2)):n.disableVertexAttribArray(b.uv2));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),
n.vertexAttribPointer(b.skinIndex,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),n.vertexAttribPointer(b.skinWeight,4,n.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==ma&&(n.lineWidth(d),ma=d),a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),n.drawElements(n.LINES,e.__webglLineCount,n.UNSIGNED_SHORT,0)):(a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),n.drawElements(n.TRIANGLES,e.__webglFaceCount,n.UNSIGNED_SHORT,0)),
K.info.render.calls++,K.info.render.vertices+=e.__webglFaceCount,K.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?n.LINE_STRIP:n.LINES,d=d.linewidth,d!==ma&&(n.lineWidth(d),ma=d),n.drawArrays(f,0,e.__webglLineCount),K.info.render.calls++):f instanceof THREE.ParticleSystem?(n.drawArrays(n.POINTS,0,e.__webglParticleCount),K.info.render.calls++,K.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(n.drawArrays(n.TRIANGLE_STRIP,0,e.__webglVertexCount),
K.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,h,k=a.__lights,N=a.fog;$=-1;qb=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16));b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16));b.matrixWorldInverse.getInverse(b.matrixWorld);b.matrixWorldInverse.flattenToArray(b._viewMatrixArray);
b.projectionMatrix.flattenToArray(b._projectionMatrixArray);eb.multiply(b.projectionMatrix,b.matrixWorldInverse);Da.setFromMatrix(eb);this.autoUpdateObjects&&this.initWebGLObjects(a);m(this.renderPluginsPre,a,b);K.info.render.calls=0;K.info.render.vertices=0;K.info.render.faces=0;K.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,
g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||Da.contains(g))){w(g,b);var r=f,s=r.object,u=r.buffer,t=void 0,t=t=void 0,t=s.material;t instanceof THREE.MeshFaceMaterial?(t=u.materialIndex,0<=t&&(t=s.geometry.materials[t],t.transparent?(r.transparent=t,r.opaque=null):(r.opaque=t,r.transparent=null))):t&&(t.transparent?(r.transparent=t,r.opaque=null):(r.opaque=t,r.transparent=null));f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:
(xa.copy(g.matrixWorld.getPosition()),eb.multiplyVector3(xa),f.z=xa.z))}this.sortObjects&&h.sort(l);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)f=h[d],g=f.object,g.visible&&(w(g,b),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),A(d.polygonOffset,d.polygonOffsetFactor,
d.polygonOffsetUnits),q(a.__webglObjects,!1,"",b,k,N,!0,d),p(a.__webglObjectsImmediate,"",b,k,N,!1,d)):(this.setBlending(THREE.NormalBlending),q(a.__webglObjects,!0,"opaque",b,k,N,!1),p(a.__webglObjectsImmediate,"opaque",b,k,N,!1),q(a.__webglObjects,!1,"transparent",b,k,N,!0),p(a.__webglObjectsImmediate,"transparent",b,k,N,!0));m(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(n.bindTexture(n.TEXTURE_CUBE_MAP,
c.__webglTexture),n.generateMipmap(n.TEXTURE_CUBE_MAP),n.bindTexture(n.TEXTURE_CUBE_MAP,null)):(n.bindTexture(n.TEXTURE_2D,c.__webglTexture),n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=y(a,b,c,d,e);Q=-1;K.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,n,Da):e.render(function(a){K.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||
(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var k=a.__objectsAdded[0],l=a,m=void 0,p=void 0,q=void 0;if(!k.__webglInit)if(k.__webglInit=!0,k._modelViewMatrix=new THREE.Matrix4,k._normalMatrix=new THREE.Matrix3,k instanceof THREE.Mesh)if(p=k.geometry,p instanceof THREE.Geometry){if(void 0===p.geometryGroups){var N=p,ja=void 0,xa=void 0,w=void 0,x=void 0,y=void 0,D=void 0,C=void 0,A={},qb=N.morphTargets.length,G=N.morphNormals.length;
N.geometryGroups={};ja=0;for(xa=N.faces.length;ja<xa;ja++)w=N.faces[ja],x=w.materialIndex,D=void 0!==x?x:-1,void 0===A[D]&&(A[D]={hash:D,counter:0}),C=A[D].hash+"_"+A[D].counter,void 0===N.geometryGroups[C]&&(N.geometryGroups[C]={faces3:[],faces4:[],materialIndex:x,vertices:0,numMorphTargets:qb,numMorphNormals:G}),y=w instanceof THREE.Face3?3:4,65535<N.geometryGroups[C].vertices+y&&(A[D].counter+=1,C=A[D].hash+"_"+A[D].counter,void 0===N.geometryGroups[C]&&(N.geometryGroups[C]={faces3:[],faces4:[],
materialIndex:x,vertices:0,numMorphTargets:qb,numMorphNormals:G})),w instanceof THREE.Face3?N.geometryGroups[C].faces3.push(ja):N.geometryGroups[C].faces4.push(ja),N.geometryGroups[C].vertices+=y;N.geometryGroupsList=[];var E=void 0;for(E in N.geometryGroups)N.geometryGroups[E].id=na++,N.geometryGroupsList.push(N.geometryGroups[E])}for(m in p.geometryGroups)if(q=p.geometryGroups[m],!q.__webglVertexBuffer){var F=q;F.__webglVertexBuffer=n.createBuffer();F.__webglNormalBuffer=n.createBuffer();F.__webglTangentBuffer=
n.createBuffer();F.__webglColorBuffer=n.createBuffer();F.__webglUVBuffer=n.createBuffer();F.__webglUV2Buffer=n.createBuffer();F.__webglSkinIndicesBuffer=n.createBuffer();F.__webglSkinWeightsBuffer=n.createBuffer();F.__webglFaceBuffer=n.createBuffer();F.__webglLineBuffer=n.createBuffer();var I=void 0,L=void 0;if(F.numMorphTargets){F.__webglMorphTargetsBuffers=[];I=0;for(L=F.numMorphTargets;I<L;I++)F.__webglMorphTargetsBuffers.push(n.createBuffer())}if(F.numMorphNormals){F.__webglMorphNormalsBuffers=
[];I=0;for(L=F.numMorphNormals;I<L;I++)F.__webglMorphNormalsBuffers.push(n.createBuffer())}K.info.memory.geometries++;var H=q,Y=k,Q=Y.geometry,fc=H.faces3,M=H.faces4,O=3*fc.length+4*M.length,rb=1*fc.length+2*M.length,la=3*fc.length+4*M.length,Ia=c(Y,H),P=e(Ia),db=d(Ia),$=Ia.vertexColors?Ia.vertexColors:!1;H.__vertexArray=new Float32Array(3*O);db&&(H.__normalArray=new Float32Array(3*O));Q.hasTangents&&(H.__tangentArray=new Float32Array(4*O));$&&(H.__colorArray=new Float32Array(3*O));if(P){if(0<Q.faceUvs.length||
0<Q.faceVertexUvs.length)H.__uvArray=new Float32Array(2*O);if(1<Q.faceUvs.length||1<Q.faceVertexUvs.length)H.__uv2Array=new Float32Array(2*O)}Y.geometry.skinWeights.length&&Y.geometry.skinIndices.length&&(H.__skinIndexArray=new Float32Array(4*O),H.__skinWeightArray=new Float32Array(4*O));H.__faceArray=new Uint16Array(3*rb);H.__lineArray=new Uint16Array(2*la);var R=void 0,aa=void 0;if(H.numMorphTargets){H.__morphTargetsArrays=[];R=0;for(aa=H.numMorphTargets;R<aa;R++)H.__morphTargetsArrays.push(new Float32Array(3*
O))}if(H.numMorphNormals){H.__morphNormalsArrays=[];R=0;for(aa=H.numMorphNormals;R<aa;R++)H.__morphNormalsArrays.push(new Float32Array(3*O))}H.__webglFaceCount=3*rb;H.__webglLineCount=2*la;if(Ia.attributes){void 0===H.__webglCustomAttributesList&&(H.__webglCustomAttributesList=[]);var Z=void 0;for(Z in Ia.attributes){var S=Ia.attributes[Z],lb={},fa;for(fa in S)lb[fa]=S[fa];if(!lb.__webglInitialized||lb.createUniqueBuffers){lb.__webglInitialized=!0;var ca=1;"v2"===lb.type?ca=2:"v3"===lb.type?ca=3:
"v4"===lb.type?ca=4:"c"===lb.type&&(ca=3);lb.size=ca;lb.array=new Float32Array(O*ca);lb.buffer=n.createBuffer();lb.buffer.belongsToAttribute=Z;S.needsUpdate=!0;lb.__original=S}H.__webglCustomAttributesList.push(lb)}}H.__inittedArrays=!0;p.verticesNeedUpdate=!0;p.morphTargetsNeedUpdate=!0;p.elementsNeedUpdate=!0;p.uvsNeedUpdate=!0;p.normalsNeedUpdate=!0;p.tangentsNeedUpdate=!0;p.colorsNeedUpdate=!0}}else p instanceof THREE.BufferGeometry&&f(p);else if(k instanceof THREE.Ribbon){if(p=k.geometry,!p.__webglVertexBuffer){var ha=
p;ha.__webglVertexBuffer=n.createBuffer();ha.__webglColorBuffer=n.createBuffer();K.info.memory.geometries++;var ba=p,bc=ba.vertices.length;ba.__vertexArray=new Float32Array(3*bc);ba.__colorArray=new Float32Array(3*bc);ba.__webglVertexCount=bc;p.verticesNeedUpdate=!0;p.colorsNeedUpdate=!0}}else if(k instanceof THREE.Line){if(p=k.geometry,!p.__webglVertexBuffer){var Fa=p;Fa.__webglVertexBuffer=n.createBuffer();Fa.__webglColorBuffer=n.createBuffer();K.info.memory.geometries++;var ac=p,ia=k,hc=ac.vertices.length;
ac.__vertexArray=new Float32Array(3*hc);ac.__colorArray=new Float32Array(3*hc);ac.__webglLineCount=hc;b(ac,ia);p.verticesNeedUpdate=!0;p.colorsNeedUpdate=!0}}else if(k instanceof THREE.ParticleSystem&&(p=k.geometry,!p.__webglVertexBuffer))if(p instanceof THREE.Geometry){var ra=p;ra.__webglVertexBuffer=n.createBuffer();ra.__webglColorBuffer=n.createBuffer();K.info.memory.geometries++;var qa=p,ua=k,sa=qa.vertices.length;qa.__vertexArray=new Float32Array(3*sa);qa.__colorArray=new Float32Array(3*sa);
qa.__sortArray=[];qa.__webglParticleCount=sa;b(qa,ua);p.verticesNeedUpdate=!0;p.colorsNeedUpdate=!0}else p instanceof THREE.BufferGeometry&&f(p);if(!k.__webglActive){if(k instanceof THREE.Mesh)if(p=k.geometry,p instanceof THREE.BufferGeometry)t(l.__webglObjects,p,k);else for(m in p.geometryGroups)q=p.geometryGroups[m],t(l.__webglObjects,q,k);else k instanceof THREE.Ribbon||k instanceof THREE.Line||k instanceof THREE.ParticleSystem?(p=k.geometry,t(l.__webglObjects,p,k)):k instanceof THREE.ImmediateRenderObject||
k.immediateRenderCallback?l.__webglObjectsImmediate.push({object:k,opaque:null,transparent:null}):k instanceof THREE.Sprite?l.__webglSprites.push(k):k instanceof THREE.LensFlare&&l.__webglFlares.push(k);k.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var jb=a.__objectsRemoved[0],oa=a;jb instanceof THREE.Mesh||jb instanceof THREE.ParticleSystem||jb instanceof THREE.Ribbon||jb instanceof THREE.Line?s(oa.__webglObjects,jb):jb instanceof THREE.Sprite?v(oa.__webglSprites,
jb):jb instanceof THREE.LensFlare?v(oa.__webglFlares,jb):(jb instanceof THREE.ImmediateRenderObject||jb.immediateRenderCallback)&&s(oa.__webglObjectsImmediate,jb);jb.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var za=0,Ha=a.__webglObjects.length;za<Ha;za++){var ya=a.__webglObjects[za].object,ga=ya.geometry,Ba=void 0,Ga=void 0,ma=void 0;if(ya instanceof THREE.Mesh)if(ga instanceof THREE.BufferGeometry)(ga.verticesNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||
ga.tangentsNeedUpdate)&&h(ga,n.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.elementsNeedUpdate=!1,ga.uvsNeedUpdate=!1,ga.normalsNeedUpdate=!1,ga.colorsNeedUpdate=!1,ga.tangentsNeedUpdate=!1;else{for(var Ka=0,Sa=ga.geometryGroupsList.length;Ka<Sa;Ka++)if(Ba=ga.geometryGroupsList[Ka],ma=c(ya,Ba),Ga=ma.attributes&&r(ma),ga.verticesNeedUpdate||ga.morphTargetsNeedUpdate||ga.elementsNeedUpdate||ga.uvsNeedUpdate||ga.normalsNeedUpdate||ga.colorsNeedUpdate||ga.tangentsNeedUpdate||Ga){var ta=Ba,cb=
ya,Da=n.DYNAMIC_DRAW,hb=!ga.dynamic,Za=ma;if(ta.__inittedArrays){var ib=d(Za),eb=Za.vertexColors?Za.vertexColors:!1,kb=e(Za),gb=ib===THREE.SmoothShading,J=void 0,X=void 0,Tb=void 0,T=void 0,ic=void 0,Ub=void 0,ub=void 0,Bc=void 0,Nb=void 0,jc=void 0,kc=void 0,U=void 0,V=void 0,W=void 0,pa=void 0,vb=void 0,wb=void 0,xb=void 0,oc=void 0,yb=void 0,zb=void 0,Ab=void 0,pc=void 0,Bb=void 0,Cb=void 0,Db=void 0,qc=void 0,Eb=void 0,Fb=void 0,Gb=void 0,rc=void 0,Hb=void 0,Ib=void 0,Jb=void 0,sc=void 0,Aa=void 0,
Vc=void 0,Vb=void 0,lc=void 0,mc=void 0,Va=void 0,Wc=void 0,Ta=void 0,Ua=void 0,Wb=void 0,Ob=void 0,Pa=0,Ra=0,Pb=0,Qb=0,sb=0,ab=0,Ea=0,fb=0,Qa=0,ea=0,ka=0,B=0,Ca=void 0,Wa=ta.__vertexArray,tc=ta.__uvArray,uc=ta.__uv2Array,tb=ta.__normalArray,La=ta.__tangentArray,Xa=ta.__colorArray,Ma=ta.__skinIndexArray,Na=ta.__skinWeightArray,Mc=ta.__morphTargetsArrays,Nc=ta.__morphNormalsArrays,Oc=ta.__webglCustomAttributesList,z=void 0,Kb=ta.__faceArray,pb=ta.__lineArray,nb=cb.geometry,dd=nb.elementsNeedUpdate,
Xc=nb.uvsNeedUpdate,ed=nb.normalsNeedUpdate,fd=nb.tangentsNeedUpdate,gd=nb.colorsNeedUpdate,hd=nb.morphTargetsNeedUpdate,dc=nb.vertices,va=ta.faces3,wa=ta.faces4,bb=nb.faces,Pc=nb.faceVertexUvs[0],Qc=nb.faceVertexUvs[1],ec=nb.skinIndices,Xb=nb.skinWeights,Yb=nb.morphTargets,Cc=nb.morphNormals;if(nb.verticesNeedUpdate){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],U=dc[T.a],V=dc[T.b],W=dc[T.c],Wa[Ra]=U.x,Wa[Ra+1]=U.y,Wa[Ra+2]=U.z,Wa[Ra+3]=V.x,Wa[Ra+4]=V.y,Wa[Ra+5]=V.z,Wa[Ra+6]=W.x,Wa[Ra+7]=W.y,Wa[Ra+8]=
W.z,Ra+=9;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],U=dc[T.a],V=dc[T.b],W=dc[T.c],pa=dc[T.d],Wa[Ra]=U.x,Wa[Ra+1]=U.y,Wa[Ra+2]=U.z,Wa[Ra+3]=V.x,Wa[Ra+4]=V.y,Wa[Ra+5]=V.z,Wa[Ra+6]=W.x,Wa[Ra+7]=W.y,Wa[Ra+8]=W.z,Wa[Ra+9]=pa.x,Wa[Ra+10]=pa.y,Wa[Ra+11]=pa.z,Ra+=12;n.bindBuffer(n.ARRAY_BUFFER,ta.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Wa,Da)}if(hd){Va=0;for(Wc=Yb.length;Va<Wc;Va++){J=ka=0;for(X=va.length;J<X;J++)Wb=va[J],T=bb[Wb],U=Yb[Va].vertices[T.a],V=Yb[Va].vertices[T.b],W=Yb[Va].vertices[T.c],
Ta=Mc[Va],Ta[ka]=U.x,Ta[ka+1]=U.y,Ta[ka+2]=U.z,Ta[ka+3]=V.x,Ta[ka+4]=V.y,Ta[ka+5]=V.z,Ta[ka+6]=W.x,Ta[ka+7]=W.y,Ta[ka+8]=W.z,Za.morphNormals&&(gb?(Ob=Cc[Va].vertexNormals[Wb],yb=Ob.a,zb=Ob.b,Ab=Ob.c):Ab=zb=yb=Cc[Va].faceNormals[Wb],Ua=Nc[Va],Ua[ka]=yb.x,Ua[ka+1]=yb.y,Ua[ka+2]=yb.z,Ua[ka+3]=zb.x,Ua[ka+4]=zb.y,Ua[ka+5]=zb.z,Ua[ka+6]=Ab.x,Ua[ka+7]=Ab.y,Ua[ka+8]=Ab.z),ka+=9;J=0;for(X=wa.length;J<X;J++)Wb=wa[J],T=bb[Wb],U=Yb[Va].vertices[T.a],V=Yb[Va].vertices[T.b],W=Yb[Va].vertices[T.c],pa=Yb[Va].vertices[T.d],
Ta=Mc[Va],Ta[ka]=U.x,Ta[ka+1]=U.y,Ta[ka+2]=U.z,Ta[ka+3]=V.x,Ta[ka+4]=V.y,Ta[ka+5]=V.z,Ta[ka+6]=W.x,Ta[ka+7]=W.y,Ta[ka+8]=W.z,Ta[ka+9]=pa.x,Ta[ka+10]=pa.y,Ta[ka+11]=pa.z,Za.morphNormals&&(gb?(Ob=Cc[Va].vertexNormals[Wb],yb=Ob.a,zb=Ob.b,Ab=Ob.c,pc=Ob.d):pc=Ab=zb=yb=Cc[Va].faceNormals[Wb],Ua=Nc[Va],Ua[ka]=yb.x,Ua[ka+1]=yb.y,Ua[ka+2]=yb.z,Ua[ka+3]=zb.x,Ua[ka+4]=zb.y,Ua[ka+5]=zb.z,Ua[ka+6]=Ab.x,Ua[ka+7]=Ab.y,Ua[ka+8]=Ab.z,Ua[ka+9]=pc.x,Ua[ka+10]=pc.y,Ua[ka+11]=pc.z),ka+=12;n.bindBuffer(n.ARRAY_BUFFER,
ta.__webglMorphTargetsBuffers[Va]);n.bufferData(n.ARRAY_BUFFER,Mc[Va],Da);Za.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,ta.__webglMorphNormalsBuffers[Va]),n.bufferData(n.ARRAY_BUFFER,Nc[Va],Da))}}if(Xb.length){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],Eb=Xb[T.a],Fb=Xb[T.b],Gb=Xb[T.c],Na[ea]=Eb.x,Na[ea+1]=Eb.y,Na[ea+2]=Eb.z,Na[ea+3]=Eb.w,Na[ea+4]=Fb.x,Na[ea+5]=Fb.y,Na[ea+6]=Fb.z,Na[ea+7]=Fb.w,Na[ea+8]=Gb.x,Na[ea+9]=Gb.y,Na[ea+10]=Gb.z,Na[ea+11]=Gb.w,Hb=ec[T.a],Ib=ec[T.b],Jb=ec[T.c],Ma[ea]=Hb.x,Ma[ea+
1]=Hb.y,Ma[ea+2]=Hb.z,Ma[ea+3]=Hb.w,Ma[ea+4]=Ib.x,Ma[ea+5]=Ib.y,Ma[ea+6]=Ib.z,Ma[ea+7]=Ib.w,Ma[ea+8]=Jb.x,Ma[ea+9]=Jb.y,Ma[ea+10]=Jb.z,Ma[ea+11]=Jb.w,ea+=12;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],Eb=Xb[T.a],Fb=Xb[T.b],Gb=Xb[T.c],rc=Xb[T.d],Na[ea]=Eb.x,Na[ea+1]=Eb.y,Na[ea+2]=Eb.z,Na[ea+3]=Eb.w,Na[ea+4]=Fb.x,Na[ea+5]=Fb.y,Na[ea+6]=Fb.z,Na[ea+7]=Fb.w,Na[ea+8]=Gb.x,Na[ea+9]=Gb.y,Na[ea+10]=Gb.z,Na[ea+11]=Gb.w,Na[ea+12]=rc.x,Na[ea+13]=rc.y,Na[ea+14]=rc.z,Na[ea+15]=rc.w,Hb=ec[T.a],Ib=ec[T.b],Jb=ec[T.c],
sc=ec[T.d],Ma[ea]=Hb.x,Ma[ea+1]=Hb.y,Ma[ea+2]=Hb.z,Ma[ea+3]=Hb.w,Ma[ea+4]=Ib.x,Ma[ea+5]=Ib.y,Ma[ea+6]=Ib.z,Ma[ea+7]=Ib.w,Ma[ea+8]=Jb.x,Ma[ea+9]=Jb.y,Ma[ea+10]=Jb.z,Ma[ea+11]=Jb.w,Ma[ea+12]=sc.x,Ma[ea+13]=sc.y,Ma[ea+14]=sc.z,Ma[ea+15]=sc.w,ea+=16;0<ea&&(n.bindBuffer(n.ARRAY_BUFFER,ta.__webglSkinIndicesBuffer),n.bufferData(n.ARRAY_BUFFER,Ma,Da),n.bindBuffer(n.ARRAY_BUFFER,ta.__webglSkinWeightsBuffer),n.bufferData(n.ARRAY_BUFFER,Na,Da))}if(gd&&eb){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],ub=T.vertexColors,
Bc=T.color,3===ub.length&&eb===THREE.VertexColors?(Bb=ub[0],Cb=ub[1],Db=ub[2]):Db=Cb=Bb=Bc,Xa[Qa]=Bb.r,Xa[Qa+1]=Bb.g,Xa[Qa+2]=Bb.b,Xa[Qa+3]=Cb.r,Xa[Qa+4]=Cb.g,Xa[Qa+5]=Cb.b,Xa[Qa+6]=Db.r,Xa[Qa+7]=Db.g,Xa[Qa+8]=Db.b,Qa+=9;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],ub=T.vertexColors,Bc=T.color,4===ub.length&&eb===THREE.VertexColors?(Bb=ub[0],Cb=ub[1],Db=ub[2],qc=ub[3]):qc=Db=Cb=Bb=Bc,Xa[Qa]=Bb.r,Xa[Qa+1]=Bb.g,Xa[Qa+2]=Bb.b,Xa[Qa+3]=Cb.r,Xa[Qa+4]=Cb.g,Xa[Qa+5]=Cb.b,Xa[Qa+6]=Db.r,Xa[Qa+7]=Db.g,Xa[Qa+8]=
Db.b,Xa[Qa+9]=qc.r,Xa[Qa+10]=qc.g,Xa[Qa+11]=qc.b,Qa+=12;0<Qa&&(n.bindBuffer(n.ARRAY_BUFFER,ta.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,Xa,Da))}if(fd&&nb.hasTangents){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],Nb=T.vertexTangents,vb=Nb[0],wb=Nb[1],xb=Nb[2],La[Ea]=vb.x,La[Ea+1]=vb.y,La[Ea+2]=vb.z,La[Ea+3]=vb.w,La[Ea+4]=wb.x,La[Ea+5]=wb.y,La[Ea+6]=wb.z,La[Ea+7]=wb.w,La[Ea+8]=xb.x,La[Ea+9]=xb.y,La[Ea+10]=xb.z,La[Ea+11]=xb.w,Ea+=12;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],Nb=T.vertexTangents,vb=Nb[0],
wb=Nb[1],xb=Nb[2],oc=Nb[3],La[Ea]=vb.x,La[Ea+1]=vb.y,La[Ea+2]=vb.z,La[Ea+3]=vb.w,La[Ea+4]=wb.x,La[Ea+5]=wb.y,La[Ea+6]=wb.z,La[Ea+7]=wb.w,La[Ea+8]=xb.x,La[Ea+9]=xb.y,La[Ea+10]=xb.z,La[Ea+11]=xb.w,La[Ea+12]=oc.x,La[Ea+13]=oc.y,La[Ea+14]=oc.z,La[Ea+15]=oc.w,Ea+=16;n.bindBuffer(n.ARRAY_BUFFER,ta.__webglTangentBuffer);n.bufferData(n.ARRAY_BUFFER,La,Da)}if(ed&&ib){J=0;for(X=va.length;J<X;J++)if(T=bb[va[J]],ic=T.vertexNormals,Ub=T.normal,3===ic.length&&gb)for(Aa=0;3>Aa;Aa++)Vb=ic[Aa],tb[ab]=Vb.x,tb[ab+1]=
Vb.y,tb[ab+2]=Vb.z,ab+=3;else for(Aa=0;3>Aa;Aa++)tb[ab]=Ub.x,tb[ab+1]=Ub.y,tb[ab+2]=Ub.z,ab+=3;J=0;for(X=wa.length;J<X;J++)if(T=bb[wa[J]],ic=T.vertexNormals,Ub=T.normal,4===ic.length&&gb)for(Aa=0;4>Aa;Aa++)Vb=ic[Aa],tb[ab]=Vb.x,tb[ab+1]=Vb.y,tb[ab+2]=Vb.z,ab+=3;else for(Aa=0;4>Aa;Aa++)tb[ab]=Ub.x,tb[ab+1]=Ub.y,tb[ab+2]=Ub.z,ab+=3;n.bindBuffer(n.ARRAY_BUFFER,ta.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,tb,Da)}if(Xc&&Pc&&kb){J=0;for(X=va.length;J<X;J++)if(Tb=va[J],jc=Pc[Tb],void 0!==jc)for(Aa=
0;3>Aa;Aa++)lc=jc[Aa],tc[Pb]=lc.u,tc[Pb+1]=lc.v,Pb+=2;J=0;for(X=wa.length;J<X;J++)if(Tb=wa[J],jc=Pc[Tb],void 0!==jc)for(Aa=0;4>Aa;Aa++)lc=jc[Aa],tc[Pb]=lc.u,tc[Pb+1]=lc.v,Pb+=2;0<Pb&&(n.bindBuffer(n.ARRAY_BUFFER,ta.__webglUVBuffer),n.bufferData(n.ARRAY_BUFFER,tc,Da))}if(Xc&&Qc&&kb){J=0;for(X=va.length;J<X;J++)if(Tb=va[J],kc=Qc[Tb],void 0!==kc)for(Aa=0;3>Aa;Aa++)mc=kc[Aa],uc[Qb]=mc.u,uc[Qb+1]=mc.v,Qb+=2;J=0;for(X=wa.length;J<X;J++)if(Tb=wa[J],kc=Qc[Tb],void 0!==kc)for(Aa=0;4>Aa;Aa++)mc=kc[Aa],uc[Qb]=
mc.u,uc[Qb+1]=mc.v,Qb+=2;0<Qb&&(n.bindBuffer(n.ARRAY_BUFFER,ta.__webglUV2Buffer),n.bufferData(n.ARRAY_BUFFER,uc,Da))}if(dd){J=0;for(X=va.length;J<X;J++)Kb[sb]=Pa,Kb[sb+1]=Pa+1,Kb[sb+2]=Pa+2,sb+=3,pb[fb]=Pa,pb[fb+1]=Pa+1,pb[fb+2]=Pa,pb[fb+3]=Pa+2,pb[fb+4]=Pa+1,pb[fb+5]=Pa+2,fb+=6,Pa+=3;J=0;for(X=wa.length;J<X;J++)Kb[sb]=Pa,Kb[sb+1]=Pa+1,Kb[sb+2]=Pa+3,Kb[sb+3]=Pa+1,Kb[sb+4]=Pa+2,Kb[sb+5]=Pa+3,sb+=6,pb[fb]=Pa,pb[fb+1]=Pa+1,pb[fb+2]=Pa,pb[fb+3]=Pa+3,pb[fb+4]=Pa+1,pb[fb+5]=Pa+2,pb[fb+6]=Pa+2,pb[fb+7]=
Pa+3,fb+=8,Pa+=4;n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,ta.__webglFaceBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Kb,Da);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,ta.__webglLineBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,pb,Da)}if(Oc){Aa=0;for(Vc=Oc.length;Aa<Vc;Aa++)if(z=Oc[Aa],z.__original.needsUpdate){B=0;if(1===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],z.array[B]=z.value[T.a],z.array[B+1]=z.value[T.b],z.array[B+2]=z.value[T.c],B+=3;J=0;for(X=wa.length;J<
X;J++)T=bb[wa[J]],z.array[B]=z.value[T.a],z.array[B+1]=z.value[T.b],z.array[B+2]=z.value[T.c],z.array[B+3]=z.value[T.d],B+=4}else{if("faces"===z.boundTo){J=0;for(X=va.length;J<X;J++)Ca=z.value[va[J]],z.array[B]=Ca,z.array[B+1]=Ca,z.array[B+2]=Ca,B+=3;J=0;for(X=wa.length;J<X;J++)Ca=z.value[wa[J]],z.array[B]=Ca,z.array[B+1]=Ca,z.array[B+2]=Ca,z.array[B+3]=Ca,B+=4}}else if(2===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],U=z.value[T.a],V=z.value[T.b],
W=z.value[T.c],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=V.x,z.array[B+3]=V.y,z.array[B+4]=W.x,z.array[B+5]=W.y,B+=6;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],U=z.value[T.a],V=z.value[T.b],W=z.value[T.c],pa=z.value[T.d],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=V.x,z.array[B+3]=V.y,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=pa.x,z.array[B+7]=pa.y,B+=8}else{if("faces"===z.boundTo){J=0;for(X=va.length;J<X;J++)W=V=U=Ca=z.value[va[J]],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=V.x,z.array[B+
3]=V.y,z.array[B+4]=W.x,z.array[B+5]=W.y,B+=6;J=0;for(X=wa.length;J<X;J++)pa=W=V=U=Ca=z.value[wa[J]],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=V.x,z.array[B+3]=V.y,z.array[B+4]=W.x,z.array[B+5]=W.y,z.array[B+6]=pa.x,z.array[B+7]=pa.y,B+=8}}else if(3===z.size){var da;da="c"===z.type?["r","g","b"]:["x","y","z"];if(void 0===z.boundTo||"vertices"===z.boundTo){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],U=z.value[T.a],V=z.value[T.b],W=z.value[T.c],z.array[B]=U[da[0]],z.array[B+1]=U[da[1]],z.array[B+2]=
U[da[2]],z.array[B+3]=V[da[0]],z.array[B+4]=V[da[1]],z.array[B+5]=V[da[2]],z.array[B+6]=W[da[0]],z.array[B+7]=W[da[1]],z.array[B+8]=W[da[2]],B+=9;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],U=z.value[T.a],V=z.value[T.b],W=z.value[T.c],pa=z.value[T.d],z.array[B]=U[da[0]],z.array[B+1]=U[da[1]],z.array[B+2]=U[da[2]],z.array[B+3]=V[da[0]],z.array[B+4]=V[da[1]],z.array[B+5]=V[da[2]],z.array[B+6]=W[da[0]],z.array[B+7]=W[da[1]],z.array[B+8]=W[da[2]],z.array[B+9]=pa[da[0]],z.array[B+10]=pa[da[1]],z.array[B+11]=
pa[da[2]],B+=12}else if("faces"===z.boundTo){J=0;for(X=va.length;J<X;J++)W=V=U=Ca=z.value[va[J]],z.array[B]=U[da[0]],z.array[B+1]=U[da[1]],z.array[B+2]=U[da[2]],z.array[B+3]=V[da[0]],z.array[B+4]=V[da[1]],z.array[B+5]=V[da[2]],z.array[B+6]=W[da[0]],z.array[B+7]=W[da[1]],z.array[B+8]=W[da[2]],B+=9;J=0;for(X=wa.length;J<X;J++)pa=W=V=U=Ca=z.value[wa[J]],z.array[B]=U[da[0]],z.array[B+1]=U[da[1]],z.array[B+2]=U[da[2]],z.array[B+3]=V[da[0]],z.array[B+4]=V[da[1]],z.array[B+5]=V[da[2]],z.array[B+6]=W[da[0]],
z.array[B+7]=W[da[1]],z.array[B+8]=W[da[2]],z.array[B+9]=pa[da[0]],z.array[B+10]=pa[da[1]],z.array[B+11]=pa[da[2]],B+=12}else if("faceVertices"===z.boundTo){J=0;for(X=va.length;J<X;J++)Ca=z.value[va[J]],U=Ca[0],V=Ca[1],W=Ca[2],z.array[B]=U[da[0]],z.array[B+1]=U[da[1]],z.array[B+2]=U[da[2]],z.array[B+3]=V[da[0]],z.array[B+4]=V[da[1]],z.array[B+5]=V[da[2]],z.array[B+6]=W[da[0]],z.array[B+7]=W[da[1]],z.array[B+8]=W[da[2]],B+=9;J=0;for(X=wa.length;J<X;J++)Ca=z.value[wa[J]],U=Ca[0],V=Ca[1],W=Ca[2],pa=
Ca[3],z.array[B]=U[da[0]],z.array[B+1]=U[da[1]],z.array[B+2]=U[da[2]],z.array[B+3]=V[da[0]],z.array[B+4]=V[da[1]],z.array[B+5]=V[da[2]],z.array[B+6]=W[da[0]],z.array[B+7]=W[da[1]],z.array[B+8]=W[da[2]],z.array[B+9]=pa[da[0]],z.array[B+10]=pa[da[1]],z.array[B+11]=pa[da[2]],B+=12}}else if(4===z.size)if(void 0===z.boundTo||"vertices"===z.boundTo){J=0;for(X=va.length;J<X;J++)T=bb[va[J]],U=z.value[T.a],V=z.value[T.b],W=z.value[T.c],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=U.z,z.array[B+3]=U.w,z.array[B+
4]=V.x,z.array[B+5]=V.y,z.array[B+6]=V.z,z.array[B+7]=V.w,z.array[B+8]=W.x,z.array[B+9]=W.y,z.array[B+10]=W.z,z.array[B+11]=W.w,B+=12;J=0;for(X=wa.length;J<X;J++)T=bb[wa[J]],U=z.value[T.a],V=z.value[T.b],W=z.value[T.c],pa=z.value[T.d],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=U.z,z.array[B+3]=U.w,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=V.z,z.array[B+7]=V.w,z.array[B+8]=W.x,z.array[B+9]=W.y,z.array[B+10]=W.z,z.array[B+11]=W.w,z.array[B+12]=pa.x,z.array[B+13]=pa.y,z.array[B+14]=pa.z,z.array[B+
15]=pa.w,B+=16}else if("faces"===z.boundTo){J=0;for(X=va.length;J<X;J++)W=V=U=Ca=z.value[va[J]],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=U.z,z.array[B+3]=U.w,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=V.z,z.array[B+7]=V.w,z.array[B+8]=W.x,z.array[B+9]=W.y,z.array[B+10]=W.z,z.array[B+11]=W.w,B+=12;J=0;for(X=wa.length;J<X;J++)pa=W=V=U=Ca=z.value[wa[J]],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=U.z,z.array[B+3]=U.w,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=V.z,z.array[B+7]=V.w,z.array[B+
8]=W.x,z.array[B+9]=W.y,z.array[B+10]=W.z,z.array[B+11]=W.w,z.array[B+12]=pa.x,z.array[B+13]=pa.y,z.array[B+14]=pa.z,z.array[B+15]=pa.w,B+=16}else if("faceVertices"===z.boundTo){J=0;for(X=va.length;J<X;J++)Ca=z.value[va[J]],U=Ca[0],V=Ca[1],W=Ca[2],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=U.z,z.array[B+3]=U.w,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=V.z,z.array[B+7]=V.w,z.array[B+8]=W.x,z.array[B+9]=W.y,z.array[B+10]=W.z,z.array[B+11]=W.w,B+=12;J=0;for(X=wa.length;J<X;J++)Ca=z.value[wa[J]],
U=Ca[0],V=Ca[1],W=Ca[2],pa=Ca[3],z.array[B]=U.x,z.array[B+1]=U.y,z.array[B+2]=U.z,z.array[B+3]=U.w,z.array[B+4]=V.x,z.array[B+5]=V.y,z.array[B+6]=V.z,z.array[B+7]=V.w,z.array[B+8]=W.x,z.array[B+9]=W.y,z.array[B+10]=W.z,z.array[B+11]=W.w,z.array[B+12]=pa.x,z.array[B+13]=pa.y,z.array[B+14]=pa.z,z.array[B+15]=pa.w,B+=16}n.bindBuffer(n.ARRAY_BUFFER,z.buffer);n.bufferData(n.ARRAY_BUFFER,z.array,Da)}}hb&&(delete ta.__inittedArrays,delete ta.__colorArray,delete ta.__normalArray,delete ta.__tangentArray,
delete ta.__uvArray,delete ta.__uv2Array,delete ta.__faceArray,delete ta.__vertexArray,delete ta.__lineArray,delete ta.__skinIndexArray,delete ta.__skinWeightArray)}}ga.verticesNeedUpdate=!1;ga.morphTargetsNeedUpdate=!1;ga.elementsNeedUpdate=!1;ga.uvsNeedUpdate=!1;ga.normalsNeedUpdate=!1;ga.colorsNeedUpdate=!1;ga.tangentsNeedUpdate=!1;ma.attributes&&u(ma)}else if(ya instanceof THREE.Ribbon){if(ga.verticesNeedUpdate||ga.colorsNeedUpdate){var Zb=ga,Yc=n.DYNAMIC_DRAW,vc=void 0,wc=void 0,Dc=void 0,$b=
void 0,Ec=void 0,Zc=Zb.vertices,$c=Zb.colors,id=Zc.length,jd=$c.length,Fc=Zb.__vertexArray,Gc=Zb.__colorArray,kd=Zb.colorsNeedUpdate;if(Zb.verticesNeedUpdate){for(vc=0;vc<id;vc++)Dc=Zc[vc],$b=3*vc,Fc[$b]=Dc.x,Fc[$b+1]=Dc.y,Fc[$b+2]=Dc.z;n.bindBuffer(n.ARRAY_BUFFER,Zb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Fc,Yc)}if(kd){for(wc=0;wc<jd;wc++)Ec=$c[wc],$b=3*wc,Gc[$b]=Ec.r,Gc[$b+1]=Ec.g,Gc[$b+2]=Ec.b;n.bindBuffer(n.ARRAY_BUFFER,Zb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Gc,Yc)}}ga.verticesNeedUpdate=
!1;ga.colorsNeedUpdate=!1}else if(ya instanceof THREE.Line){ma=c(ya,Ba);Ga=ma.attributes&&r(ma);if(ga.verticesNeedUpdate||ga.colorsNeedUpdate||Ga){var Rb=ga,Rc=n.DYNAMIC_DRAW,xc=void 0,yc=void 0,Hc=void 0,Oa=void 0,Ic=void 0,ad=Rb.vertices,bd=Rb.colors,ld=ad.length,md=bd.length,Jc=Rb.__vertexArray,Kc=Rb.__colorArray,nd=Rb.colorsNeedUpdate,Sc=Rb.__webglCustomAttributesList,Lc=void 0,cd=void 0,Ya=void 0,nc=void 0,ob=void 0,Ja=void 0;if(Rb.verticesNeedUpdate){for(xc=0;xc<ld;xc++)Hc=ad[xc],Oa=3*xc,Jc[Oa]=
Hc.x,Jc[Oa+1]=Hc.y,Jc[Oa+2]=Hc.z;n.bindBuffer(n.ARRAY_BUFFER,Rb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Jc,Rc)}if(nd){for(yc=0;yc<md;yc++)Ic=bd[yc],Oa=3*yc,Kc[Oa]=Ic.r,Kc[Oa+1]=Ic.g,Kc[Oa+2]=Ic.b;n.bindBuffer(n.ARRAY_BUFFER,Rb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Kc,Rc)}if(Sc){Lc=0;for(cd=Sc.length;Lc<cd;Lc++)if(Ja=Sc[Lc],Ja.needsUpdate&&(void 0===Ja.boundTo||"vertices"===Ja.boundTo)){Oa=0;nc=Ja.value.length;if(1===Ja.size)for(Ya=0;Ya<nc;Ya++)Ja.array[Ya]=Ja.value[Ya];else if(2===
Ja.size)for(Ya=0;Ya<nc;Ya++)ob=Ja.value[Ya],Ja.array[Oa]=ob.x,Ja.array[Oa+1]=ob.y,Oa+=2;else if(3===Ja.size)if("c"===Ja.type)for(Ya=0;Ya<nc;Ya++)ob=Ja.value[Ya],Ja.array[Oa]=ob.r,Ja.array[Oa+1]=ob.g,Ja.array[Oa+2]=ob.b,Oa+=3;else for(Ya=0;Ya<nc;Ya++)ob=Ja.value[Ya],Ja.array[Oa]=ob.x,Ja.array[Oa+1]=ob.y,Ja.array[Oa+2]=ob.z,Oa+=3;else if(4===Ja.size)for(Ya=0;Ya<nc;Ya++)ob=Ja.value[Ya],Ja.array[Oa]=ob.x,Ja.array[Oa+1]=ob.y,Ja.array[Oa+2]=ob.z,Ja.array[Oa+3]=ob.w,Oa+=4;n.bindBuffer(n.ARRAY_BUFFER,Ja.buffer);
n.bufferData(n.ARRAY_BUFFER,Ja.array,Rc)}}}ga.verticesNeedUpdate=!1;ga.colorsNeedUpdate=!1;ma.attributes&&u(ma)}else ya instanceof THREE.ParticleSystem&&(ga instanceof THREE.BufferGeometry?((ga.verticesNeedUpdate||ga.colorsNeedUpdate)&&h(ga,n.DYNAMIC_DRAW,!ga.dynamic),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1):(ma=c(ya,Ba),Ga=ma.attributes&&r(ma),(ga.verticesNeedUpdate||ga.colorsNeedUpdate||ya.sortParticles||Ga)&&g(ga,n.DYNAMIC_DRAW,ya),ga.verticesNeedUpdate=!1,ga.colorsNeedUpdate=!1,ma.attributes&&
u(ma)))}};this.initMaterial=function(a,b,c,d){var e,f,g,h,k,l,m,p,q;a instanceof THREE.MeshDepthMaterial?q="depth":a instanceof THREE.MeshNormalMaterial?q="normal":a instanceof THREE.MeshBasicMaterial?q="basic":a instanceof THREE.MeshLambertMaterial?q="lambert":a instanceof THREE.MeshPhongMaterial?q="phong":a instanceof THREE.LineBasicMaterial?q="basic":a instanceof THREE.ParticleBasicMaterial&&(q="particle_basic");if(q){var N=THREE.ShaderLib[q];a.uniforms=THREE.UniformsUtils.clone(N.uniforms);a.vertexShader=
N.vertexShader;a.fragmentShader=N.fragmentShader}var r,s;r=h=f=e=N=0;for(g=b.length;r<g;r++)s=b[r],s.onlyShadow||(s instanceof THREE.DirectionalLight&&h++,s instanceof THREE.PointLight&&f++,s instanceof THREE.SpotLight&&e++,s instanceof THREE.HemisphereLight&&N++);f+e+h+N<=la?(r=h,g=e):(r=Math.ceil(la*h/(f+h)),g=f=la-r,N=r);e=r;h=N;N=p=0;for(r=b.length;N<r;N++)s=b[N],s.castShadow&&(s instanceof THREE.SpotLight&&p++,s instanceof THREE.DirectionalLight&&!s.shadowCascade&&p++);jb&&d&&d.useVertexTexture?
m=1024:(b=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),m=b);var u;a:{s=a.fragmentShader;r=a.vertexShader;N=a.uniforms;b=a.attributes;c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,
vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:m,useVertexTexture:jb&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:h,maxShadows:p,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,
shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide};var t;d=[];q?d.push(q):(d.push(s),d.push(r));for(t in c)d.push(t),d.push(c[t]);q=d.join();t=0;for(d=qa.length;t<d;t++)if(e=qa[t],e.code===q){e.usedTimes++;u=e.program;break a}t=n.createProgram();d=["precision "+S+" float;",bc?"#define VERTEX_TEXTURES":"",K.gammaInput?"#define GAMMA_INPUT":
"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":
"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?
"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
e=["precision "+S+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",K.gammaInput?"#define GAMMA_INPUT":"",K.gammaOutput?"#define GAMMA_OUTPUT":"",K.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?
"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapSoft?"#define SHADOWMAP_SOFT":"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");e=C("fragment",e+s);d=C("vertex",d+r);n.attachShader(t,d);n.attachShader(t,e);n.linkProgram(t);n.getProgramParameter(t,n.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+n.getProgramParameter(t,
n.VALIDATE_STATUS)+", gl error ["+n.getError()+"]");n.deleteShader(e);n.deleteShader(d);t.uniforms={};t.attributes={};var ja;d="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?d.push("boneTexture"):d.push("boneGlobalMatrices");for(ja in N)d.push(ja);ja=d;d=0;for(N=ja.length;d<N;d++)e=ja[d],t.uniforms[e]=n.getUniformLocation(t,e);d="position normal uv uv2 tangent color skinIndex skinWeight".split(" ");for(ja=0;ja<
c.maxMorphTargets;ja++)d.push("morphTarget"+ja);for(ja=0;ja<c.maxMorphNormals;ja++)d.push("morphNormal"+ja);for(u in b)d.push(u);u=d;ja=0;for(c=u.length;ja<c;ja++)d=u[ja],t.attributes[d]=n.getAttribLocation(t,d);t.id=Fa++;qa.push({program:t,code:q,usedTimes:1});K.info.memory.programs=qa.length;u=t}a.program=u;u=a.program.attributes;0<=u.position&&n.enableVertexAttribArray(u.position);0<=u.color&&n.enableVertexAttribArray(u.color);0<=u.normal&&n.enableVertexAttribArray(u.normal);0<=u.tangent&&n.enableVertexAttribArray(u.tangent);
a.skinning&&(0<=u.skinIndex&&0<=u.skinWeight)&&(n.enableVertexAttribArray(u.skinIndex),n.enableVertexAttribArray(u.skinWeight));if(a.attributes)for(l in a.attributes)void 0!==u[l]&&0<=u[l]&&n.enableVertexAttribArray(u[l]);if(a.morphTargets){a.numSupportedMorphTargets=0;t="morphTarget";for(l=0;l<this.maxMorphTargets;l++)ja=t+l,0<=u[ja]&&(n.enableVertexAttribArray(u[ja]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;t="morphNormal";for(l=0;l<this.maxMorphNormals;l++)ja=
t+l,0<=u[ja]&&(n.enableVertexAttribArray(u[ja]),a.numSupportedMorphNormals++)}a.uniformsList=[];for(k in a.uniforms)a.uniformsList.push([a.uniforms[k],k])};this.setFaceCulling=function(a,b){a?(!b||"ccw"===b?n.frontFace(n.CCW):n.frontFace(n.CW),"back"===a?n.cullFace(n.BACK):"front"===a?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK),n.enable(n.CULL_FACE)):n.disable(n.CULL_FACE)};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide;a=a.side===THREE.BackSide;ha!==b&&(b?n.disable(n.CULL_FACE):
n.enable(n.CULL_FACE),ha=b);ua!==a&&(a?n.frontFace(n.CW):n.frontFace(n.CCW),ua=a)};this.setDepthTest=function(a){Sa!==a&&(a?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST),Sa=a)};this.setDepthWrite=function(a){Ga!==a&&(n.depthMask(a),Ga=a)};this.setBlending=function(a,b,c,d){a!==sa&&(a===THREE.NoBlending?n.disable(n.BLEND):a===THREE.AdditiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE)):a===THREE.SubtractiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),
n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR)):a===THREE.CustomBlending?n.enable(n.BLEND):(n.enable(n.BLEND),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)),sa=a);if(a===THREE.CustomBlending){if(b!==ya&&(n.blendEquation(O(b)),ya=b),c!==cb||d!==oa)n.blendFunc(O(c),O(d)),cb=c,oa=d}else oa=cb=ya=null};this.setTexture=
function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=n.createTexture(),K.info.memory.textures++);n.activeTexture(n.TEXTURE0+b);n.bindTexture(n.TEXTURE_2D,a.__webglTexture);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,a.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=O(a.format),f=O(a.type);M(n.TEXTURE_2D,a,d);if(a instanceof THREE.CompressedTexture)for(var f=a.mipmaps,g=0,h=f.length;g<
h;g++)c=f[g],n.compressedTexImage2D(n.TEXTURE_2D,g,e,c.width,c.height,0,c.data);else a instanceof THREE.DataTexture?n.texImage2D(n.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):n.texImage2D(n.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&n.generateMipmap(n.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===
a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.__webglTexture=n.createTexture();var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=O(a.format),e=O(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture);M(n.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=n.createFramebuffer();a.__webglRenderbuffer[f]=n.createRenderbuffer();n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,
a.height,0,d,e,null);var g=a,h=n.TEXTURE_CUBE_MAP_POSITIVE_X+f;n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer[f]);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,h,g.__webglTexture,0);H(a.__webglRenderbuffer[f],a)}c&&n.generateMipmap(n.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=n.createFramebuffer(),a.__webglRenderbuffer=n.createRenderbuffer(),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),M(n.TEXTURE_2D,a,c),n.texImage2D(n.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=n.TEXTURE_2D,
n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,d,a.__webglTexture,0),H(a.__webglRenderbuffer,a),c&&n.generateMipmap(n.TEXTURE_2D);b?n.bindTexture(n.TEXTURE_CUBE_MAP,null):n.bindTexture(n.TEXTURE_2D,null);n.bindRenderbuffer(n.RENDERBUFFER,null);n.bindFramebuffer(n.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Ha,a=ib,d=Ba,e=kb);b!==Y&&(n.bindFramebuffer(n.FRAMEBUFFER,
b),n.viewport(d,e,c,a),Y=b);Ka=c;za=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==c.format?c.format:
THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.anisotropy=this.anisotropy;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;return a};
THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e);if(g===f)g=c=0;else{var h=f-g,g=h/f,c=(c===f?(d-e)/h:d===f?2+(e-c)/h:4+(c-d)/h)/6;0>c&&(c+=1);1<c&&(c-=1)}void 0===b&&(b={h:0,s:0,v:0});b.h=c;b.s=g;b.v=f;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,f=b instanceof THREE.Mesh?b.geometry:b,g=a.vertices,h=f.vertices,l=a.faces,k=f.faces,m=a.faceVertexUvs[0],q=f.faceVertexUvs[0],p={},t=0;t<a.materials.length;t++)p[a.materials[t].id]=t;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var t=0,r=h.length;t<r;t++){var u=h[t].clone();c&&c.multiplyVector3(u);g.push(u)}t=0;for(r=k.length;t<r;t++){var g=k[t],
s,v,y=g.vertexNormals,x=g.vertexColors;g instanceof THREE.Face3?s=new THREE.Face3(g.a+e,g.b+e,g.c+e):g instanceof THREE.Face4&&(s=new THREE.Face4(g.a+e,g.b+e,g.c+e,g.d+e));s.normal.copy(g.normal);d&&d.multiplyVector3(s.normal);h=0;for(u=y.length;h<u;h++)v=y[h].clone(),d&&d.multiplyVector3(v),s.vertexNormals.push(v);s.color.copy(g.color);h=0;for(u=x.length;h<u;h++)v=x[h],s.vertexColors.push(v.clone());void 0!==g.materialIndex&&(h=f.materials[g.materialIndex],u=h.id,x=p[u],void 0===x&&(x=a.materials.length,
p[u]=x,a.materials.push(h)),s.materialIndex=x);s.centroid.copy(g.centroid);c&&c.multiplyVector3(s.centroid);l.push(s)}t=0;for(r=q.length;t<r;t++){c=q[t];d=[];h=0;for(u=c.length;h<u;h++)d.push(new THREE.UV(c[h].u,c[h].v));m.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,f=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());a=0;for(c=d.length;a<c;a++)b.vertices.push(d[a].clone());a=0;for(c=e.length;a<c;a++)b.faces.push(e[a].clone());a=0;for(c=f.length;a<
c;a++){for(var d=f[a],e=[],g=0,h=d.length;g<h;g++)e.push(new THREE.UV(d[g].u,d[g].v));b.faceVertexUvs[0].push(e)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);f=1-d-e;g.copy(a);g.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);g.addSelf(h);h.copy(c);h.multiplyScalar(f);g.addSelf(h);return g},randomPointInFace:function(a,b,c){var d,e,f;if(a instanceof THREE.Face3)return d=
b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];f=b.vertices[a.c];b=b.vertices[a.d];var g;c?a._area1&&a._area2?(c=a._area1,g=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b),a._area1=c,a._area2=g):(c=THREE.GeometryUtils.triangleArea(d,e,b),g=THREE.GeometryUtils.triangleArea(e,f,b));return THREE.GeometryUtils.random()*(c+g)<c?THREE.GeometryUtils.randomPointInTriangle(d,
e,b):THREE.GeometryUtils.randomPointInTriangle(e,f,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return k[e]>a?b(c,e-1):k[e]<a?b(e+1,d):e}return b(0,k.length-1)}var d,e,f=a.faces,g=a.vertices,h=f.length,l=0,k=[],m,q,p,t;for(e=0;e<h;e++)d=f[e],d instanceof THREE.Face3?(m=g[d.a],q=g[d.b],p=g[d.c],d._area=THREE.GeometryUtils.triangleArea(m,q,p)):d instanceof THREE.Face4&&(m=g[d.a],q=g[d.b],p=g[d.c],t=g[d.d],d._area1=THREE.GeometryUtils.triangleArea(m,
q,t),d._area2=THREE.GeometryUtils.triangleArea(q,p,t),d._area=d._area1+d._area2),l+=d._area,k[e]=l;d=[];for(e=0;e<b;e++)g=THREE.GeometryUtils.random()*l,g=c(g),d[e]=THREE.GeometryUtils.randomPointInFace(f[g],a,!0);return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);c=e.length();b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.add(b.min,
b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){a=a.faceVertexUvs[0];for(var b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,f=d.length;e<f;e++)1!==d[e].u&&(d[e].u-=Math.floor(d[e].u)),1!==d[e].v&&(d[e].v-=Math.floor(d[e].v))},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];b=0;for(c=a.faceUvs.length;b<c;b++)g[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)h[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=
a.faces[b],d instanceof THREE.Face4){e=d.a;var l=d.b,k=d.c,m=d.d,q=new THREE.Face3,p=new THREE.Face3;q.color.copy(d.color);p.color.copy(d.color);q.materialIndex=d.materialIndex;p.materialIndex=d.materialIndex;q.a=e;q.b=l;q.c=m;p.a=l;p.b=k;p.c=m;4===d.vertexColors.length&&(q.vertexColors[0]=d.vertexColors[0].clone(),q.vertexColors[1]=d.vertexColors[1].clone(),q.vertexColors[2]=d.vertexColors[3].clone(),p.vertexColors[0]=d.vertexColors[1].clone(),p.vertexColors[1]=d.vertexColors[2].clone(),p.vertexColors[2]=
d.vertexColors[3].clone());f.push(q,p);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(q=a.faceVertexUvs[d][b],l=q[1],k=q[2],m=q[3],q=[q[0].clone(),l.clone(),m.clone()],l=[l.clone(),k.clone(),m.clone()],h[d].push(q,l));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(l=a.faceUvs[d][b],g[d].push(l,l))}else{f.push(d);d=0;for(e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d][b])}a.faces=f;a.faceUvs=
g;a.faceVertexUvs=h;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},explode:function(a){for(var b=[],c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,l=f.c,g=a.vertices[g],h=a.vertices[h],l=a.vertices[l],k=a.vertices[f.d];b.push(g.clone());b.push(h.clone());b.push(l.clone());b.push(k.clone());f.a=e;f.b=e+1;f.c=e+2;f.d=e+3}else g=f.a,h=f.b,l=f.c,g=a.vertices[g],h=a.vertices[h],l=a.vertices[l],
b.push(g.clone()),b.push(h.clone()),b.push(l.clone()),f.a=e,f.b=e+1,f.c=e+2}a.vertices=b;delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,l,k,m,q,p,t,r,u,s,v,y,x,w,G=[],E=[];c=0;for(d=a.faceVertexUvs.length;c<d;c++)E[c]=[];c=0;for(d=a.faces.length;c<d;c++)if(e=a.faces[c],e instanceof THREE.Face3)if(f=e.a,g=e.b,h=e.c,k=a.vertices[f],m=a.vertices[g],q=a.vertices[h],t=k.distanceTo(m),r=m.distanceTo(q),p=k.distanceTo(q),t>b||r>b||p>b){l=a.vertices.length;x=e.clone();w=e.clone();t>=r&&
t>=p?(k=k.clone(),k.lerpSelf(m,0.5),x.a=f,x.b=l,x.c=h,w.a=l,w.b=g,w.c=h,3===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),x.vertexNormals[1].copy(f),w.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),x.vertexColors[1].copy(f),w.vertexColors[0].copy(f)),e=0):r>=t&&r>=p?(k=m.clone(),k.lerpSelf(q,0.5),x.a=f,x.b=g,x.c=l,w.a=l,w.b=h,w.c=f,3===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),
f.lerpSelf(e.vertexNormals[2],0.5),x.vertexNormals[2].copy(f),w.vertexNormals[0].copy(f),w.vertexNormals[1].copy(e.vertexNormals[2]),w.vertexNormals[2].copy(e.vertexNormals[0])),3===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),x.vertexColors[2].copy(f),w.vertexColors[0].copy(f),w.vertexColors[1].copy(e.vertexColors[2]),w.vertexColors[2].copy(e.vertexColors[0])),e=1):(k=k.clone(),k.lerpSelf(q,0.5),x.a=f,x.b=g,x.c=l,w.a=l,w.b=g,w.c=h,3===e.vertexNormals.length&&
(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[2],0.5),x.vertexNormals[2].copy(f),w.vertexNormals[0].copy(f)),3===e.vertexColors.length&&(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[2],0.5),x.vertexColors[2].copy(f),w.vertexColors[0].copy(f)),e=2);G.push(x,w);a.vertices.push(k);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],w=k[0],h=k[1],x=k[2],0===e?(m=w.clone(),m.lerpSelf(h,0.5),k=[w.clone(),m.clone(),x.clone()],h=[m.clone(),h.clone(),
x.clone()]):1===e?(m=h.clone(),m.lerpSelf(x,0.5),k=[w.clone(),h.clone(),m.clone()],h=[m.clone(),x.clone(),w.clone()]):(m=w.clone(),m.lerpSelf(x,0.5),k=[w.clone(),h.clone(),m.clone()],h=[m.clone(),h.clone(),x.clone()]),E[f].push(k,h))}else{G.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)E[f].push(a.faceVertexUvs[f][c])}else if(f=e.a,g=e.b,h=e.c,l=e.d,k=a.vertices[f],m=a.vertices[g],q=a.vertices[h],p=a.vertices[l],t=k.distanceTo(m),r=m.distanceTo(q),u=q.distanceTo(p),s=k.distanceTo(p),t>b||r>b||
u>b||s>b){v=a.vertices.length;y=a.vertices.length+1;x=e.clone();w=e.clone();t>=r&&t>=u&&t>=s||u>=r&&u>=t&&u>=s?(t=k.clone(),t.lerpSelf(m,0.5),m=q.clone(),m.lerpSelf(p,0.5),x.a=f,x.b=v,x.c=y,x.d=l,w.a=v,w.b=g,w.c=h,w.d=y,4===e.vertexNormals.length&&(f=e.vertexNormals[0].clone(),f.lerpSelf(e.vertexNormals[1],0.5),g=e.vertexNormals[2].clone(),g.lerpSelf(e.vertexNormals[3],0.5),x.vertexNormals[1].copy(f),x.vertexNormals[2].copy(g),w.vertexNormals[0].copy(f),w.vertexNormals[3].copy(g)),4===e.vertexColors.length&&
(f=e.vertexColors[0].clone(),f.lerpSelf(e.vertexColors[1],0.5),g=e.vertexColors[2].clone(),g.lerpSelf(e.vertexColors[3],0.5),x.vertexColors[1].copy(f),x.vertexColors[2].copy(g),w.vertexColors[0].copy(f),w.vertexColors[3].copy(g)),e=0):(t=m.clone(),t.lerpSelf(q,0.5),m=p.clone(),m.lerpSelf(k,0.5),x.a=f,x.b=g,x.c=v,x.d=y,w.a=y,w.b=v,w.c=h,w.d=l,4===e.vertexNormals.length&&(f=e.vertexNormals[1].clone(),f.lerpSelf(e.vertexNormals[2],0.5),g=e.vertexNormals[3].clone(),g.lerpSelf(e.vertexNormals[0],0.5),
x.vertexNormals[2].copy(f),x.vertexNormals[3].copy(g),w.vertexNormals[0].copy(g),w.vertexNormals[1].copy(f)),4===e.vertexColors.length&&(f=e.vertexColors[1].clone(),f.lerpSelf(e.vertexColors[2],0.5),g=e.vertexColors[3].clone(),g.lerpSelf(e.vertexColors[0],0.5),x.vertexColors[2].copy(f),x.vertexColors[3].copy(g),w.vertexColors[0].copy(g),w.vertexColors[1].copy(f)),e=1);G.push(x,w);a.vertices.push(t,m);f=0;for(g=a.faceVertexUvs.length;f<g;f++)a.faceVertexUvs[f].length&&(k=a.faceVertexUvs[f][c],w=k[0],
h=k[1],x=k[2],k=k[3],0===e?(m=w.clone(),m.lerpSelf(h,0.5),q=x.clone(),q.lerpSelf(k,0.5),w=[w.clone(),m.clone(),q.clone(),k.clone()],h=[m.clone(),h.clone(),x.clone(),q.clone()]):(m=h.clone(),m.lerpSelf(x,0.5),q=k.clone(),q.lerpSelf(w,0.5),w=[w.clone(),h.clone(),m.clone(),q.clone()],h=[q.clone(),m.clone(),x.clone(),k.clone()]),E[f].push(w,h))}else{G.push(e);f=0;for(g=a.faceVertexUvs.length;f<g;f++)E[f].push(a.faceVertexUvs[f][c])}a.faces=G;a.faceVertexUvs=E}};THREE.GeometryUtils.random=THREE.Math.random16;
THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,f=new THREE.Texture(e,b);b=new THREE.ImageLoader;b.addEventListener("load",function(a){f.image=a.content;f.needsUpdate=!0;c&&c(f)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);return f},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var f=new XMLHttpRequest;f.onload=function(){var a=THREE.ImageUtils.parseDDS(f.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};f.onerror=d;f.open("GET",a,!0);f.responseType="arraybuffer";f.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.Texture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;b=0;for(var g=a.length;b<g;++b){var h=new Image;e[b]=h;h.onload=function(){e.loadCount+=1;6===e.loadCount&&(f.needsUpdate=!0,c&&c())};h.onerror=d;h.crossOrigin=
this.crossOrigin;h.src=a[b]}return f},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var f=new THREE.CompressedTexture;f.image=e;void 0!==b&&(f.mapping=b);f.flipY=!1;f.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(f.format=d.format,f.needsUpdate=!0,c&&c())}};for(var g=0,h=a.length;g<h;++g){var l={};e[g]=l;var k=new XMLHttpRequest;
k.onload=b(k,l);k.onerror=d;k.open("GET",a[g],!0);k.responseType="arraybuffer";k.send(null)}return f},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),f=c("DXT3"),g=c("DXT5"),h=new Int32Array(a,0,31);if(542327876!==h[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!h[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var l=h[21];switch(l){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(l&255,l>>8&255,l>>16&255,l>>24&255)),d}d.mipmapCount=1;h[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,h[7]));d.width=h[4];d.height=h[3];h=h[1]+4;f=d.width;g=d.height;for(l=0;l<d.mipmapCount;l++){var k=Math.max(4,f)/
4*Math.max(4,g)/4*e,m={data:new Uint8Array(a,h,k),width:f,height:g};d.mipmaps.push(m);h+=k;f=Math.max(0.5*f,1);g=Math.max(0.5*g,1)}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var d=a.width,e=a.height,f=document.createElement("canvas");f.width=d;f.height=e;var g=f.getContext("2d");g.drawImage(a,0,0);for(var h=g.getImageData(0,0,d,e).data,l=g.createImageData(d,e),k=l.data,m=0;m<d;m++)for(var q=0;q<e;q++){var p=
0>q-1?0:q-1,t=q+1>e-1?e-1:q+1,r=0>m-1?0:m-1,u=m+1>d-1?d-1:m+1,s=[],v=[0,0,h[4*(q*d+m)]/255*b];s.push([-1,0,h[4*(q*d+r)]/255*b]);s.push([-1,-1,h[4*(p*d+r)]/255*b]);s.push([0,-1,h[4*(p*d+m)]/255*b]);s.push([1,-1,h[4*(p*d+u)]/255*b]);s.push([1,0,h[4*(q*d+u)]/255*b]);s.push([1,1,h[4*(t*d+u)]/255*b]);s.push([0,1,h[4*(t*d+m)]/255*b]);s.push([-1,1,h[4*(t*d+r)]/255*b]);p=[];r=s.length;for(t=0;t<r;t++){var u=s[t],y=s[(t+1)%r],u=[u[0]-v[0],u[1]-v[1],u[2]-v[2]],y=[y[0]-v[0],y[1]-v[1],y[2]-v[2]];p.push(c([u[1]*
y[2]-u[2]*y[1],u[2]*y[0]-u[0]*y[2],u[0]*y[1]-u[1]*y[0]]))}s=[0,0,0];for(t=0;t<p.length;t++)s[0]+=p[t][0],s[1]+=p[t][1],s[2]+=p[t][2];s[0]/=p.length;s[1]/=p.length;s[2]/=p.length;v=4*(q*d+m);k[v]=255*((s[0]+1)/2)|0;k[v+1]=255*((s[1]+1)/2)|0;k[v+2]=255*s[2]|0;k[v+3]=255}g.putImageData(l,0,0);return f},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g);c=Math.floor(255*c.b);for(var h=0;h<d;h++)e[3*h]=f,e[3*h+1]=g,e[3*h+2]=c;a=new THREE.DataTexture(e,
a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};
THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,e=a.children.length;for(d=0;d<e;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;c<d;c++){var f=new THREE.Mesh(a,b[c]);e.add(f)}return e},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),
b.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material,a.useVertexTexture):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof
THREE.ParticleSystem?(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,
b.opacity=a.opacity,b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.name=a.name;b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);
b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof
THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};
THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,
1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,
1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightPosition[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( hemisphereLightPosition[ i ], 1.0 );\nvec3 lVector = normalize( lPosition.xyz + vViewPosition.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = normalize( -lPosition.xyz + vViewPosition.xyz );\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalMatrix * skinnedNormal.xyz;\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalMatrix * skinnedTangent.xyz;\n#else\nvNormal = normalMatrix * normal;\nvTangent = normalMatrix * tangent.xyz;\n#endif\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 mPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = mPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * mPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}});
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){var b=this.getFace(),c=this.size/b.resolution,d=0,e=
String(a).split(""),f=e.length,g=[];for(a=0;a<f;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h),d=d+h.offset;g.push(h.path)}return{paths:g,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,l,k,m,q,p,t,r,u,s,v=b.glyphs[a]||b.glyphs["?"];if(v){if(v.o){b=v._cachedOutline||(v._cachedOutline=v.o.split(" "));k=b.length;for(a=0;a<k;)switch(l=b[a++],l){case "m":l=b[a++]*c+d;m=b[a++]*c;e.moveTo(l,m);break;case "l":l=b[a++]*c+d;m=b[a++]*c;e.lineTo(l,m);break;case "q":l=b[a++]*
c+d;m=b[a++]*c;t=b[a++]*c+d;r=b[a++]*c;e.quadraticCurveTo(t,r,l,m);if(g=f[f.length-1]){q=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++){var y=g/h;THREE.Shape.Utils.b2(y,q,t,l);THREE.Shape.Utils.b2(y,p,r,m)}}break;case "b":if(l=b[a++]*c+d,m=b[a++]*c,t=b[a++]*c+d,r=b[a++]*-c,u=b[a++]*c+d,s=b[a++]*-c,e.bezierCurveTo(l,m,t,r,u,s),g=f[f.length-1]){q=g.x;p=g.y;g=1;for(h=this.divisions;g<=h;g++)y=g/h,THREE.Shape.Utils.b3(y,q,t,u,l),THREE.Shape.Utils.b3(y,p,r,s,m)}}}return{offset:v.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",f=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=f;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(f=c.length;e<f;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,f=b-1,g=0;g<b;f=g++)e+=a[f].x*a[g].y-a[g].x*a[f].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var f=[],g=[],h=[],l,k,m;if(0<b(a))for(k=0;k<e;k++)g[k]=k;else for(k=0;k<e;k++)g[k]=e-1-k;var q=2*e;for(k=e-1;2<e;){if(0>=q--){console.log("Warning, unable to triangulate polygon!");break}l=k;e<=l&&(l=0);k=l+1;e<=k&&(k=0);m=k+1;e<=m&&(m=0);var p;a:{p=a;var t=l,r=k,u=m,s=e,v=g,y=void 0,x=void 0,w=void 0,G=void 0,E=void 0,
A=void 0,D=void 0,C=void 0,M=void 0,x=p[v[t]].x,w=p[v[t]].y,G=p[v[r]].x,E=p[v[r]].y,A=p[v[u]].x,D=p[v[u]].y;if(1E-10>(G-x)*(D-w)-(E-w)*(A-x))p=!1;else{for(y=0;y<s;y++)if(!(y==t||y==r||y==u)){var C=p[v[y]].x,M=p[v[y]].y,H=void 0,L=void 0,O=void 0,R=void 0,S=void 0,P=void 0,F=void 0,I=void 0,ba=void 0,ca=void 0,ia=void 0,aa=void 0,H=O=S=void 0,H=A-G,L=D-E,O=x-A,R=w-D,S=G-x,P=E-w,F=C-x,I=M-w,ba=C-G,ca=M-E,ia=C-A,aa=M-D,H=H*ca-L*ba,S=S*I-P*F,O=O*aa-R*ia;if(0<=H&&0<=O&&0<=S){p=!1;break a}}p=!0}}if(p){f.push([a[g[l]],
a[g[k]],a[g[m]]]);h.push([g[l],g[k],g[m]]);l=k;for(m=k+1;m<e;l++,m++)g[l]=g[m];e--;q=2*e}}return d?h:f};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(a){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};
THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};
THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,f=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),f+=c.distanceTo(d),b.push(f),d=c;return this.cacheArcLengths=b};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;f=b?b:a*c[e-1];for(var g=0,h=e-1,l;g<=h;)if(d=Math.floor(g+(h-g)/2),l=c[d]-f,0>l)g=d+1;else if(0<l)h=d-1;else{h=d;break}d=h;if(c[d]==f)return d/(e-1);g=c[d];return c=(d+(f-g)/(c[d+1]-g))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4;a+=1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().subSelf(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(a){return this.v2.clone().subSelf(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=f;this.aClockwise=g};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){a=0.5*(c-a);d=0.5*(d-b);var f=e*e;return(2*b-2*c+a+d)*e*f+(-3*b+3*c-2*a-d)*f+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;a*=d.length-1;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var f=d[c[1]],g=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,f.x,g.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,f.y,g.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,f.z,g.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths();for(a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,f,g;b=c=Number.NEGATIVE_INFINITY;e=f=Number.POSITIVE_INFINITY;var h,l,k,m,q=a[0]instanceof THREE.Vector3;m=q?new THREE.Vector3:new THREE.Vector2;l=0;for(k=a.length;l<k;l++)h=a[l],h.x>b?b=h.x:h.x<e&&(e=h.x),h.y>c?c=h.y:h.y<f&&(f=h.y),q&&(h.z>d?d=h.z:h.z<g&&(g=h.z)),m.addSelf(h);a={minX:e,minY:f,maxX:b,maxY:c,centroid:m.divideScalar(k)};q&&(a.maxZ=d,a.minZ=g);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,l;d=0;for(e=a.length;d<e;d++)f=a[d],g=f.x,h=f.y,l=g/c.maxX,l=b.getUtoTmapping(l,g),g=b.getPoint(l),h=b.getNormalVector(l).multiplyScalar(h),f.x=g.x+h.x,f.y=g.y+h.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=
!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;
THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=new THREE.QuadraticBezierCurve(new THREE.Vector2(f[f.length-2],f[f.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(f);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,h=new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(h);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args;this.absarc(a+g[g.length-2],b+g[g.length-1],c,d,e,f)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args;this.absellipse(a+h[h.length-2],b+h[h.length-1],c,d,e,f,g)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(l);l=l.getPoint(g?1:0);h.push(l.x);h.push(l.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})};
THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;d<a;d++)c.push(this.getPoint(d/a));return c};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c=[],d,e,f,g,h,l,k,m,q,p,t,r,u;d=0;for(e=this.actions.length;d<e;d++)switch(f=this.actions[d],g=f.action,f=f.args,g){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(f[0],f[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=f[2];l=f[3];q=f[0];p=f[1];0<c.length?(g=c[c.length-1],t=g.x,
r=g.y):(g=this.actions[d-1].args,t=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)u=f/a,g=THREE.Shape.Utils.b2(u,t,q,h),u=THREE.Shape.Utils.b2(u,r,p,l),c.push(new THREE.Vector2(g,u));break;case THREE.PathActions.BEZIER_CURVE_TO:h=f[4];l=f[5];q=f[0];p=f[1];k=f[2];m=f[3];0<c.length?(g=c[c.length-1],t=g.x,r=g.y):(g=this.actions[d-1].args,t=g[g.length-2],r=g[g.length-1]);for(f=1;f<=a;f++)u=f/a,g=THREE.Shape.Utils.b3(u,t,q,k,h),u=THREE.Shape.Utils.b3(u,r,p,m,l),c.push(new THREE.Vector2(g,u));break;case THREE.PathActions.CSPLINE_THRU:g=
this.actions[d-1].args;u=[new THREE.Vector2(g[g.length-2],g[g.length-1])];g=a*f[0].length;u=u.concat(f[0]);u=new THREE.SplineCurve(u);for(f=1;f<=g;f++)c.push(u.getPointAt(f/g));break;case THREE.PathActions.ARC:h=f[0];l=f[1];p=f[2];k=f[3];g=f[4];q=!!f[5];t=g-k;r=2*a;for(f=1;f<=r;f++)u=f/r,q||(u=1-u),u=k+u*t,g=h+p*Math.cos(u),u=l+p*Math.sin(u),c.push(new THREE.Vector2(g,u));break;case THREE.PathActions.ELLIPSE:h=f[0];l=f[1];p=f[2];m=f[3];k=f[4];g=f[5];q=!!f[6];t=g-k;r=2*a;for(f=1;f<=r;f++)u=f/r,q||
(u=1-u),u=k+u*t,g=h+p*Math.cos(u),u=l+m*Math.sin(u),c.push(new THREE.Vector2(g,u))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],f=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=f.actions.length&&(e.push(f),f=new THREE.Path),f[c].apply(f,d);0!=f.actions.length&&e.push(f);if(0==e.length)return[];var g;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return f=e[0],g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves,d.push(g),d;if(a){g=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g.actions=f.actions,g.curves=f.curves,d.push(g),g=new THREE.Shape):g.holes.push(f)}else{a=0;for(b=e.length;a<b;a++)f=e[a],THREE.Shape.Utils.isClockWise(f.getPoints())?(g&&d.push(g),g=new THREE.Shape,g.actions=f.actions,g.curves=f.curves):g.holes.push(f);d.push(g)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);
THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};
THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,l,k,m,q,p,t,r=[];for(l=0;l<b.length;l++){k=b[l];Array.prototype.push.apply(d,k);f=Number.POSITIVE_INFINITY;for(e=0;e<k.length;e++){p=k[e];t=[];for(q=0;q<c.length;q++)m=c[q],m=p.distanceToSquared(m),t.push(m),m<f&&(f=m,g=e,h=q)}e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;var u=[k[g],c[h],c[e]];q=THREE.FontUtils.Triangulate.area(u);var s=[k[g],k[f],c[h]];p=THREE.FontUtils.Triangulate.area(s);t=h;m=g;h+=1;g+=-1;0>
h&&(h+=c.length);h%=c.length;0>g&&(g+=k.length);g%=k.length;e=0<=h-1?h-1:c.length-1;f=0<=g-1?g-1:k.length-1;u=[k[g],c[h],c[e]];u=THREE.FontUtils.Triangulate.area(u);s=[k[g],k[f],c[h]];s=THREE.FontUtils.Triangulate.area(s);q+p>u+s&&(h=t,g=m,0>h&&(h+=c.length),h%=c.length,0>g&&(g+=k.length),g%=k.length,e=0<=h-1?h-1:c.length-1,f=0<=g-1?g-1:k.length-1);q=c.slice(0,h);p=c.slice(h);t=k.slice(g);m=k.slice(0,g);f=[k[g],k[f],c[h]];r.push([k[g],c[h],c[e]]);r.push(f);c=q.concat(t).concat(m).concat(p)}return{shape:c,
isolatedPts:r,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),f,g,h,l,k={};f=0;for(g=d.length;f<g;f++)l=d[f].x+":"+d[f].y,void 0!==k[l]&&console.log("Duplicate point",l),k[l]=f;f=0;for(g=c.length;f<g;f++){h=c[f];for(d=0;3>d;d++)l=h[d].x+":"+h[d].y,l=k[l],void 0!==l&&(h[d]=l)}f=0;for(g=e.length;f<g;f++){h=e[f];for(d=0;3>d;d++)l=h[d].x+":"+h[d].y,l=k[l],void 0!==l&&(h[d]=l)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var l=0;l<a.hierarchy[c].keys[d].morphTargets.length;l++){var k=a.hierarchy[c].keys[d].morphTargets[l];h[k]=-1}a.hierarchy[c].usedMorphTargets=h;
for(d=0;d<a.hierarchy[c].keys.length;d++){var m={};for(k in h){for(l=0;l<a.hierarchy[c].keys[d].morphTargets.length;l++)if(a.hierarchy[c].keys[d].morphTargets[l]===k){m[k]=a.hierarchy[c].keys[d].morphTargetsInfluences[l];break}l===a.hierarchy[c].keys[d].morphTargets.length&&(m[k]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=m}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var f=e.animationCache.prevKey;e=e.animationCache.nextKey;f.pos=this.data.hierarchy[c].keys[0];f.rot=this.data.hierarchy[c].keys[0];f.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,f,g,h,l,k,m;m=this.currentTime+=a*this.timeScale;k=this.currentTime%=this.data.length;parseInt(Math.min(k*this.data.fps,this.data.length*this.data.fps),10);for(var q=0,p=this.hierarchy.length;q<p;q++){a=this.hierarchy[q];l=a.animationCache;for(var t=0;3>t;t++){c=b[t];g=l.prevKey[c];h=l.nextKey[c];if(h.time<=m){if(k<m)if(this.loop){g=this.data.hierarchy[q].keys[0];for(h=this.getNextKeyWith(c,q,1);h.time<
k;)g=h,h=this.getNextKeyWith(c,q,h.index+1)}else{this.stop();return}else{do g=h,h=this.getNextKeyWith(c,q,h.index+1);while(h.time<k)}l.prevKey[c]=g;l.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(k-g.time)/(h.time-g.time);e=g[c];f=h[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+q),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+
(f[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",q,g.index-1).pos,this.points[1]=e,this.points[2]=f,this.points[3]=this.getNextKeyWith("pos",q,h.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,f,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(f[0]-e[0])*d,c.y=e[1]+(f[1]-e[1])*d,c.z=e[2]+(f[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,l,k;e=(a.length-1)*b;f=Math.floor(e);e-=f;c[0]=0===f?f:f-1;c[1]=f;c[2]=f>a.length-2?f:f+1;c[3]=f>a.length-3?f:f+2;f=a[c[0]];h=a[c[1]];l=a[c[2]];k=a[c[3]];c=e*e;g=e*c;d[0]=this.interpolate(f[0],h[0],l[0],k[0],e,c,g);d[1]=this.interpolate(f[1],h[1],l[1],k[1],e,c,g);d[2]=this.interpolate(f[2],h[2],l[2],k[2],e,c,g);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){c=this.data.hierarchy[a].sids;var d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var f=c[e],g=this.getNextKeyWith(f,a,0);g&&g.apply(f)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,f;for(c=0;c<d;c++)e=this.hierarchy[c],f=this.data.hierarchy[c],e.useQuaternion=!0,void 0===f.animationCache&&(f.animationCache={},f.animationCache.prevKey=null,f.animationCache.nextKey=null,f.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(f.animationCache.prevKey=e[0],f.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,f=this.data.JIT.hierarchy,g,h,l;h=this.currentTime+=a*this.timeScale;g=this.currentTime%=this.data.length;g<this.startTimeMs&&(g=this.currentTime=this.startTimeMs+g);e=parseInt(Math.min(g*this.data.fps,this.data.length*this.data.fps),10);if((l=g<h)&&!this.loop){a=0;for(var k=this.hierarchy.length;a<k;a++){var m=this.data.hierarchy[a].keys,f=this.data.hierarchy[a].sids;d=m.length-1;e=this.hierarchy[a];if(m.length){for(m=
0;m<f.length;m++)g=f[m],(h=this.getPrevKeyWith(g,a,d))&&h.apply(g);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(g<this.startTime)){a=0;for(k=this.hierarchy.length;a<k;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var m=b.keys,q=b.animationCache;if(this.JITCompile&&void 0!==f[a][e])d instanceof THREE.Bone?(d.skinMatrix=f[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=f[a][e],d.matrixWorldNeedsUpdate=!0);else if(m.length){this.JITCompile&&q&&(d instanceof
THREE.Bone?d.skinMatrix=q.originalMatrix:d.matrix=q.originalMatrix);b=q.prevKey;c=q.nextKey;if(b&&c){if(c.time<=h){if(l&&this.loop){b=m[0];for(c=m[1];c.time<g;)b=c,c=m[b.index+1]}else if(!l)for(var p=m.length-1;c.time<g&&c.index!==p;)b=c,c=m[b.index+1];q.prevKey=b;q.nextKey=c}c.time>=g?b.interpolate(c,g):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===f[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)f[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};
THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,1);f.lookAt(new THREE.Vector3(0,1,0));this.add(f);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,-1);g.lookAt(new THREE.Vector3(0,-1,0));this.add(g);var h=new THREE.PerspectiveCamera(90,
1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,1));this.add(h);var l=new THREE.PerspectiveCamera(90,1,a,b);l.up.set(0,-1,0);l.lookAt(new THREE.Vector3(0,0,-1));this.add(l);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,p=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,f,c);c.activeCubeFace=3;a.render(b,g,c);c.activeCubeFace=4;a.render(b,h,c);c.generateMipmaps=p;c.activeCubeFace=5;a.render(b,l,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,f,g){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};
THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*Math.atan(b/(2*a))*(180/Math.PI);this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.005;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){var b=0;if(!this.freeze){this.heightSpeed?(b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin,this.autoSpeedFactor=a*b*this.heightCoef):this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;var b=this.target,c=this.object.position;b.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);
b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));b=this.target;c=this.object.position;b.x=c.x+100*
Math.sin(this.phi)*Math.cos(this.theta);b.y=c.y+100*Math.cos(this.phi);b.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(b)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),
!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};
THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),h=b.getLength(),s=g.length,v=0;f=s-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<s-1;f++)v=d*h.chunks[f]/h.total,b.keys[f]={time:v,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function f(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.005;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var g=2*Math.PI,h=Math.PI/180;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===
document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%g;this.phi=0<=a?a:a+g;b=this.verticalAngleMap.srcRange;
a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=
function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),
c=new THREE.CubeGeometry(10,10,20),g=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(g,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=
this.debugPath,b=this.spline,g=f(b,10),c=f(b,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),g=new THREE.Line(g,h),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));g.scale.set(1,1,1);a.add(g);c.scale.set(1,1,1);a.add(c);for(var g=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),t=0;t<b.points.length;t++)c=new THREE.Mesh(g,h),c.position.copy(b.points[t]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),
!1)};this.handleResize()};THREE.PathControlsIdCounter=0;
THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.005;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,g=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-g)/g;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed;a*=this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Matrix4,g=!1,h=1,l=0,k=0,m=0,q=0,p=0,t=0,r=0;this.handleResize=function(){t=window.innerWidth/2;r=window.innerHeight/2};this.update=function(a){if(this.mouseLook){var b=
a*this.lookSpeed;this.rotateHorizontally(b*q);this.rotateVertically(b*p)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<l||this.autoForward&&!(0>l)?1:l));this.object.translateX(b*k);this.object.translateY(b*m);g&&(this.roll+=this.rollSpeed*a*h);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);
c.cross(d,e).normalize();d.cross(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;f.identity();f.elements[0]=Math.cos(this.roll);f.elements[4]=-Math.sin(this.roll);f.elements[1]=Math.sin(this.roll);f.elements[5]=Math.cos(this.roll);
this.object.matrix.multiplySelf(f);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.elements[4]*
a;this.object.position.y+=this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};
this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){q=(a.clientX-t)/window.innerWidth;p=(a.clientY-r)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();
switch(a.button){case 0:l=1;break;case 2:l=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:l=0;break;case 2:l=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:l=1;break;case 37:case 65:k=-1;break;case 40:case 83:l=-1;break;case 39:case 68:k=1;break;case 81:g=!0;h=1;break;case 69:g=!0;h=-1;break;case 82:m=1;break;case 70:m=-1}},!1);this.domElement.addEventListener("keyup",
function(a){switch(a.keyCode){case 38:case 87:l=0;break;case 37:case 65:k=0;break;case 40:case 83:l=0;break;case 39:case 68:k=0;break;case 81:g=!1;break;case 69:g=!1;break;case 82:m=0;break;case 70:m=0}},!1);this.handleResize()};
THREE.TrackballControls=function(a,b){function c(a){if(d.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);m.y+=0.05*(1/b)}}THREE.EventTarget.call(this);var d=this;this.object=a;this.domElement=void 0!==b?b:document;this.enabled=!0;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=
this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var e=new THREE.Vector3,f=!1,g=-1,h=new THREE.Vector3,l=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector2,q=new THREE.Vector2,p=new THREE.Vector2,t=new THREE.Vector2,r={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+
this.screen.height)/4};this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-d.screen.offsetLeft)/d.radius),0.5*((b-d.screen.offsetTop)/d.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*d.screen.width-d.screen.offsetLeft)/d.radius,(0.5*d.screen.height+d.screen.offsetTop-b)/d.radius,0),e=c.length();1<e?c.normalize():c.z=Math.sqrt(1-e*e);h.copy(d.object.position).subSelf(d.target);
e=d.object.up.clone().setLength(c.y);e.addSelf(d.object.up.clone().crossSelf(h).setLength(c.x));e.addSelf(h.setLength(c.z));return e};this.rotateCamera=function(){var a=Math.acos(l.dot(k)/l.length()/k.length());if(a){var b=(new THREE.Vector3).cross(l,k).normalize(),c=new THREE.Quaternion,a=a*d.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(h);c.multiplyVector3(d.object.up);c.multiplyVector3(k);d.staticMoving?l.copy(k):(c.setFromAxisAngle(b,a*(d.dynamicDampingFactor-1)),c.multiplyVector3(l))}};
this.zoomCamera=function(){var a=1+(q.y-m.y)*d.zoomSpeed;1!==a&&0<a&&(h.multiplyScalar(a),d.staticMoving?m.copy(q):m.y+=(q.y-m.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=t.clone().subSelf(p);if(a.lengthSq()){a.multiplyScalar(h.length()*d.panSpeed);var b=h.clone().crossSelf(d.object.up).setLength(a.x);b.addSelf(d.object.up.clone().setLength(a.y));d.object.position.addSelf(b);d.target.addSelf(b);d.staticMoving?p=t:p.addSelf(a.sub(t,p).multiplyScalar(d.dynamicDampingFactor))}};this.checkDistances=
function(){if(!d.noZoom||!d.noPan)d.object.position.lengthSq()>d.maxDistance*d.maxDistance&&d.object.position.setLength(d.maxDistance),h.lengthSq()<d.minDistance*d.minDistance&&d.object.position.add(d.target,h.setLength(d.minDistance))};this.update=function(){h.copy(d.object.position).subSelf(d.target);d.noRotate||d.rotateCamera();d.noZoom||d.zoomCamera();d.noPan||d.panCamera();d.object.position.add(d.target,h);d.checkDistances();d.object.lookAt(d.target);0<e.distanceToSquared(d.object.position)&&
(d.dispatchEvent(r),e.copy(d.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){d.enabled&&(f&&(l=k=d.getMouseProjectionOnBall(a.clientX,a.clientY),m=q=d.getMouseOnScreen(a.clientX,a.clientY),p=t=d.getMouseOnScreen(a.clientX,a.clientY),f=!1),-1!==g&&(0===g&&!d.noRotate?k=d.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!d.noZoom?q=d.getMouseOnScreen(a.clientX,a.clientY):2===g&&!d.noPan&&
(t=d.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener("mousedown",function(a){d.enabled&&(a.preventDefault(),a.stopPropagation(),-1===g&&(g=a.button,0===g&&!d.noRotate?l=k=d.getMouseProjectionOnBall(a.clientX,a.clientY):1===g&&!d.noZoom?m=q=d.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(p=t=d.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener("mouseup",function(a){d.enabled&&(a.preventDefault(),a.stopPropagation(),g=-1)},!1);this.domElement.addEventListener("DOMMouseScroll",
c,!1);this.domElement.addEventListener("mousewheel",c,!1);window.addEventListener("keydown",function(a){d.enabled&&-1===g&&(a.keyCode===d.keys[0]&&!d.noRotate?g=0:a.keyCode===d.keys[1]&&!d.noZoom?g=1:a.keyCode===d.keys[2]&&!d.noPan&&(g=2),-1!==g&&(f=!0))},!1);window.addEventListener("keyup",function(a){d.enabled&&-1!==g&&(g=-1)},!1);this.handleResize()};
THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*f.autoRotateSpeed}function d(a){a.preventDefault();y===v.ROTATE?(l.set(a.clientX,a.clientY),k.sub(l,h),f.rotateLeft(2*Math.PI*k.x/g*f.userRotateSpeed),f.rotateUp(2*Math.PI*k.y/g*f.userRotateSpeed),h.copy(l)):y===v.ZOOM&&(q.set(a.clientX,a.clientY),p.sub(q,m),0<p.y?f.zoomIn():f.zoomOut(),m.copy(q))}function e(a){f.userRotate&&(document.removeEventListener("mousemove",d,!1),document.removeEventListener("mouseup",e,!1),y=v.NONE)}THREE.EventTarget.call(this);
this.object=a;this.domElement=void 0!==b?b:document;this.center=new THREE.Vector3;this.userZoom=!0;this.userZoomSpeed=1;this.userRotate=!0;this.userRotateSpeed=1;this.autoRotate=!1;this.autoRotateSpeed=2;var f=this,g=1800,h=new THREE.Vector2,l=new THREE.Vector2,k=new THREE.Vector2,m=new THREE.Vector2,q=new THREE.Vector2,p=new THREE.Vector2,t=0,r=0,u=1,s=new THREE.Vector3,v={NONE:-1,ROTATE:0,ZOOM:1},y=v.NONE,x={type:"change"};this.rotateLeft=function(a){void 0===a&&(a=c());r-=a};this.rotateRight=function(a){void 0===
a&&(a=c());r+=a};this.rotateUp=function(a){void 0===a&&(a=c());t-=a};this.rotateDown=function(a){void 0===a&&(a=c());t+=a};this.zoomIn=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));u/=a};this.zoomOut=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));u*=a};this.update=function(){var a=this.object.position,b=a.clone().subSelf(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+r,e=e+t,e=Math.max(1E-6,Math.min(Math.PI-
1E-6,e)),f=b.length();b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);b.multiplyScalar(u);a.copy(this.center).addSelf(b);this.object.lookAt(this.center);t=r=0;u=1;0<s.distanceTo(this.object.position)&&(this.dispatchEvent(x),s.copy(this.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){f.userRotate&&(a.preventDefault(),0===a.button||2===a.button?(y=v.ROTATE,h.set(a.clientX,
a.clientY)):1===a.button&&(y=v.ZOOM,m.set(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",e,!1))},!1);this.domElement.addEventListener("mousewheel",function(a){f.userZoom&&(0<a.wheelDelta?f.zoomOut():f.zoomIn())},!1)};
THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);a=a||50;c=void 0!==c?c:0;d=void 0!==d?d:2*Math.PI;b=void 0!==b?Math.max(3,b):8;var e,f=[];e=new THREE.Vector3;var g=new THREE.UV(0.5,0.5);this.vertices.push(e);f.push(g);for(e=0;e<=b;e++){var h=new THREE.Vector3;h.x=a*Math.cos(c+e/b*d);h.y=a*Math.sin(c+e/b*d);this.vertices.push(h);f.push(new THREE.UV((h.x/a+1)/2,-(h.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),this.faceVertexUvs[0].push([f[e],
f[e+1],g]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function l(a,b,c,g,h,l,m,p){var q,r=d||1,s=e||1,t=h/2,u=l/2,v=k.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)q="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)q="y",s=f||1;else if("z"===a&&"y"===b||"y"===a&&"z"===b)q="x",r=f||1;var x=r+1,y=s+1,ca=h/r,ia=l/s,aa=new THREE.Vector3;aa[q]=0<m?1:-1;for(h=0;h<y;h++)for(l=0;l<x;l++){var la=new THREE.Vector3;la[a]=(l*ca-t)*c;la[b]=(h*ia-u)*g;la[q]=m;k.vertices.push(la)}for(h=0;h<s;h++)for(l=0;l<r;l++)a=
new THREE.Face4(l+x*h+v,l+x*(h+1)+v,l+1+x*(h+1)+v,l+1+x*h+v),a.normal.copy(aa),a.vertexNormals.push(aa.clone(),aa.clone(),aa.clone(),aa.clone()),a.materialIndex=p,k.faces.push(a),k.faceVertexUvs[0].push([new THREE.UV(l/r,1-h/s),new THREE.UV(l/r,1-(h+1)/s),new THREE.UV((l+1)/r,1-(h+1)/s),new THREE.UV((l+1)/r,1-h/s)])}THREE.Geometry.call(this);var k=this,m=a/2,q=b/2,p=c/2,t,r,u,s,v,y;if(void 0!==g){if(g instanceof Array)this.materials=g;else{this.materials=[];for(t=0;6>t;t++)this.materials.push(g)}t=
0;s=1;r=2;v=3;u=4;y=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(void 0!=h)for(var x in h)void 0!==this.sides[x]&&(this.sides[x]=h[x]);this.sides.px&&l("z","y",-1,-1,c,b,m,t);this.sides.nx&&l("z","y",1,-1,c,b,-m,s);this.sides.py&&l("x","z",1,1,a,c,q,r);this.sides.ny&&l("x","z",1,-1,a,c,-q,v);this.sides.pz&&l("x","y",1,-1,a,b,p,u);this.sides.nz&&l("x","y",-1,-1,a,b,-p,y);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.CylinderGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);a=void 0!==a?a:20;b=void 0!==b?b:20;c=void 0!==c?c:100;var g=c/2;d=d||8;e=e||1;var h,l,k=[],m=[];for(l=0;l<=e;l++){var q=[],p=[],t=l/e,r=t*(b-a)+a;for(h=0;h<=d;h++){var u=h/d,s=new THREE.Vector3;s.x=r*Math.sin(2*u*Math.PI);s.y=-t*c+g;s.z=r*Math.cos(2*u*Math.PI);this.vertices.push(s);q.push(this.vertices.length-1);p.push(new THREE.UV(u,1-t))}k.push(q);m.push(p)}c=(b-a)/c;for(h=0;h<d;h++){0!==a?(q=this.vertices[k[0][h]].clone(),
p=this.vertices[k[0][h+1]].clone()):(q=this.vertices[k[1][h]].clone(),p=this.vertices[k[1][h+1]].clone());q.setY(Math.sqrt(q.x*q.x+q.z*q.z)*c).normalize();p.setY(Math.sqrt(p.x*p.x+p.z*p.z)*c).normalize();for(l=0;l<e;l++){var t=k[l][h],r=k[l+1][h],u=k[l+1][h+1],s=k[l][h+1],v=q.clone(),y=q.clone(),x=p.clone(),w=p.clone(),G=m[l][h].clone(),E=m[l+1][h].clone(),A=m[l+1][h+1].clone(),D=m[l][h+1].clone();this.faces.push(new THREE.Face4(t,r,u,s,[v,y,x,w]));this.faceVertexUvs[0].push([G,E,A,D])}}if(!f&&0<
a){this.vertices.push(new THREE.Vector3(0,g,0));for(h=0;h<d;h++)t=k[0][h],r=k[0][h+1],u=this.vertices.length-1,v=new THREE.Vector3(0,1,0),y=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),G=m[0][h].clone(),E=m[0][h+1].clone(),A=new THREE.UV(E.u,0),this.faces.push(new THREE.Face3(t,r,u,[v,y,x])),this.faceVertexUvs[0].push([G,E,A])}if(!f&&0<b){this.vertices.push(new THREE.Vector3(0,-g,0));for(h=0;h<d;h++)t=k[l][h+1],r=k[l][h],u=this.vertices.length-1,v=new THREE.Vector3(0,-1,0),y=new THREE.Vector3(0,
-1,0),x=new THREE.Vector3(0,-1,0),G=m[l][h+1].clone(),E=m[l][h].clone(),A=new THREE.UV(E.u,1),this.faces.push(new THREE.Face3(t,r,u,[v,y,x])),this.faceVertexUvs[0].push([G,E,A])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).addSelf(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,k=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);h.copy(a).addSelf(f);k.copy(a).addSelf(g);if(h.equals(k))return g.clone();
h.copy(b).addSelf(f);k.copy(c).addSelf(g);f=d.dot(g);g=k.subSelf(h).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;return 0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),new THREE.Vector2(a,c)):d.multiplyScalar(g).addSelf(h).subSelf(a).clone()}function e(c,d){var e,f;for(K=c.length;0<=--K;){e=K;f=K-1;0>f&&(f=c.length-1);
for(var g=0,h=p+2*m,g=0;g<h;g++){var k=ia*g,l=ia*(g+1),q=d+e+k,k=d+f+k,r=d+f+l,l=d+e+l,s=c,t=g,u=h,w=e,x=f,q=q+H,k=k+H,r=r+H,l=l+H;M.faces.push(new THREE.Face4(q,k,r,l,null,null,v));q=y.generateSideWallUV(M,a,s,b,q,k,r,l,t,u,w,x);M.faceVertexUvs[0].push(q)}}}function f(a,b,c){M.vertices.push(new THREE.Vector3(a,b,c))}function g(c,d,e,f){c+=H;d+=H;e+=H;M.faces.push(new THREE.Face3(c,d,e,null,null,s));c=f?y.generateBottomUV(M,a,b,c,d,e):y.generateTopUV(M,a,b,c,d,e);M.faceVertexUvs[0].push(c)}var h=
void 0!==b.amount?b.amount:100,l=void 0!==b.bevelThickness?b.bevelThickness:6,k=void 0!==b.bevelSize?b.bevelSize:l-2,m=void 0!==b.bevelSegments?b.bevelSegments:3,q=void 0!==b.bevelEnabled?b.bevelEnabled:!0,p=void 0!==b.steps?b.steps:1,t=b.extrudePath,r,u=!1,s=b.material,v=b.extrudeMaterial,y=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,x,w,G,E;t&&(r=t.getSpacedPoints(p),u=!0,q=!1,x=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(t,p,!1),w=new THREE.Vector3,
G=new THREE.Vector3,E=new THREE.Vector3);q||(k=l=m=0);var A,D,C,M=this,H=this.vertices.length,L=a.extractPoints(),t=L.shape,O=L.holes;if(L=!THREE.Shape.Utils.isClockWise(t)){t=t.reverse();D=0;for(C=O.length;D<C;D++)A=O[D],THREE.Shape.Utils.isClockWise(A)&&(O[D]=A.reverse());L=!1}var R=THREE.Shape.Utils.triangulateShape(t,O),S=t;D=0;for(C=O.length;D<C;D++)A=O[D],t=t.concat(A);var P,F,I,ba,ca,ia=t.length,aa,la=R.length,L=[],K=0;I=S.length;P=I-1;for(F=K+1;K<I;K++,P++,F++)P===I&&(P=0),F===I&&(F=0),L[K]=
d(S[K],S[P],S[F]);var qa=[],Fa,Z=L.concat();D=0;for(C=O.length;D<C;D++){A=O[D];Fa=[];K=0;I=A.length;P=I-1;for(F=K+1;K<I;K++,P++,F++)P===I&&(P=0),F===I&&(F=0),Fa[K]=d(A[K],A[P],A[F]);qa.push(Fa);Z=Z.concat(Fa)}for(P=0;P<m;P++){I=P/m;ba=l*(1-I);F=k*Math.sin(I*Math.PI/2);K=0;for(I=S.length;K<I;K++)ca=c(S[K],L[K],F),f(ca.x,ca.y,-ba);D=0;for(C=O.length;D<C;D++){A=O[D];Fa=qa[D];K=0;for(I=A.length;K<I;K++)ca=c(A[K],Fa[K],F),f(ca.x,ca.y,-ba)}}F=k;for(K=0;K<ia;K++)ca=q?c(t[K],Z[K],F):t[K],u?(G.copy(x.normals[0]).multiplyScalar(ca.x),
w.copy(x.binormals[0]).multiplyScalar(ca.y),E.copy(r[0]).addSelf(G).addSelf(w),f(E.x,E.y,E.z)):f(ca.x,ca.y,0);for(I=1;I<=p;I++)for(K=0;K<ia;K++)ca=q?c(t[K],Z[K],F):t[K],u?(G.copy(x.normals[I]).multiplyScalar(ca.x),w.copy(x.binormals[I]).multiplyScalar(ca.y),E.copy(r[I]).addSelf(G).addSelf(w),f(E.x,E.y,E.z)):f(ca.x,ca.y,h/p*I);for(P=m-1;0<=P;P--){I=P/m;ba=l*(1-I);F=k*Math.sin(I*Math.PI/2);K=0;for(I=S.length;K<I;K++)ca=c(S[K],L[K],F),f(ca.x,ca.y,h+ba);D=0;for(C=O.length;D<C;D++){A=O[D];Fa=qa[D];K=0;
for(I=A.length;K<I;K++)ca=c(A[K],Fa[K],F),u?f(ca.x,ca.y+r[p-1].y,r[p-1].x+ba):f(ca.x,ca.y,h+ba)}}(function(){if(q){var a;a=0*ia;for(K=0;K<la;K++)aa=R[K],g(aa[2]+a,aa[1]+a,aa[0]+a,!0);a=p+2*m;a*=ia;for(K=0;K<la;K++)aa=R[K],g(aa[0]+a,aa[1]+a,aa[2]+a,!1)}else{for(K=0;K<la;K++)aa=R[K],g(aa[2],aa[1],aa[0],!0);for(K=0;K<la;K++)aa=R[K],g(aa[0]+ia*p,aa[1]+ia*p,aa[2]+ia*p,!1)}})();(function(){var a=0;e(S,a);a+=S.length;D=0;for(C=O.length;D<C;D++)A=O[D],e(A,a),a+=A.length})()};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[f].x;f=a.vertices[f].y;return[new THREE.UV(a.vertices[d].x,a.vertices[d].y),new THREE.UV(b,e),new THREE.UV(c,f)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,l,k,m,q){b=a.vertices[e].x;c=a.vertices[e].y;e=a.vertices[e].z;d=a.vertices[f].x;l=a.vertices[f].y;f=a.vertices[f].z;k=a.vertices[g].x;m=a.vertices[g].y;
g=a.vertices[g].z;q=a.vertices[h].x;var p=a.vertices[h].y;a=a.vertices[h].z;return 0.01>Math.abs(c-l)?[new THREE.UV(b,1-e),new THREE.UV(d,1-f),new THREE.UV(k,1-g),new THREE.UV(q,1-a)]:[new THREE.UV(c,1-e),new THREE.UV(l,1-f),new THREE.UV(m,1-g),new THREE.UV(p,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;
THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,f,g,h=this.vertices.length;e=a.extractPoints();var l=e.shape,k=e.holes;if(!THREE.Shape.Utils.isClockWise(l)){l=l.reverse();e=0;for(f=k.length;e<f;e++)g=k[e],THREE.Shape.Utils.isClockWise(g)&&(k[e]=g.reverse())}var m=THREE.Shape.Utils.triangulateShape(l,k);e=0;for(f=k.length;e<f;e++)g=k[e],l=l.concat(g);k=l.length;f=m.length;for(e=
0;e<k;e++)g=l[e],this.vertices.push(new THREE.Vector3(g.x,g.y,0));for(e=0;e<f;e++)k=m[e],l=k[2]+h,g=k[1]+h,k=k[0]+h,this.faces.push(new THREE.Face3(l,g,k,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,l,g,k))};
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);b=b||12;c=c||2*Math.PI;for(var d=[],e=(new THREE.Matrix4).makeRotationZ(c/b),f=0;f<a.length;f++)d[f]=a[f].clone(),this.vertices.push(d[f]);var g=b+1;for(c=0;c<g;c++)for(f=0;f<d.length;f++)d[f]=e.multiplyVector3(d[f].clone()),this.vertices.push(d[f]);for(c=0;c<b;c++){d=0;for(e=a.length;d<e-1;d++)this.faces.push(new THREE.Face4(c*e+d,(c+1)%g*e+d,(c+1)%g*e+(d+1)%e,c*e+(d+1)%e)),this.faceVertexUvs[0].push([new THREE.UV(1-c/b,d/e),new THREE.UV(1-
(c+1)/b,d/e),new THREE.UV(1-(c+1)/b,(d+1)/e),new THREE.UV(1-c/b,(d+1)/e)])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=a/2,f=b/2;c=c||1;d=d||1;var g=c+1,h=d+1,l=a/c,k=b/d,m=new THREE.Vector3(0,0,1);for(a=0;a<h;a++)for(b=0;b<g;b++)this.vertices.push(new THREE.Vector3(b*l-e,-(a*k-f),0));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+g*a,b+g*(a+1),b+1+g*(a+1),b+1+g*a),e.normal.copy(m),e.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,1-a/d),new THREE.UV(b/c,1-(a+1)/d),
new THREE.UV((b+1)/c,1-(a+1)/d),new THREE.UV((b+1)/c,1-a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this);a=a||50;d=void 0!==d?d:0;e=void 0!==e?e:2*Math.PI;f=void 0!==f?f:0;g=void 0!==g?g:Math.PI;b=Math.max(3,Math.floor(b)||8);c=Math.max(2,Math.floor(c)||6);var h,l,k=[],m=[];for(l=0;l<=c;l++){var q=[],p=[];for(h=0;h<=b;h++){var t=h/b,r=l/c,u=new THREE.Vector3;u.x=-a*Math.cos(d+t*e)*Math.sin(f+r*g);u.y=a*Math.cos(f+r*g);u.z=a*Math.sin(d+t*e)*Math.sin(f+r*g);this.vertices.push(u);q.push(this.vertices.length-1);p.push(new THREE.UV(t,
1-r))}k.push(q);m.push(p)}for(l=0;l<c;l++)for(h=0;h<b;h++){d=k[l][h+1];e=k[l][h];f=k[l+1][h];g=k[l+1][h+1];var q=this.vertices[d].clone().normalize(),p=this.vertices[e].clone().normalize(),t=this.vertices[f].clone().normalize(),r=this.vertices[g].clone().normalize(),u=m[l][h+1].clone(),s=m[l][h].clone(),v=m[l+1][h].clone(),y=m[l+1][h+1].clone();Math.abs(this.vertices[d].y)==a?(this.faces.push(new THREE.Face3(d,f,g,[q,t,r])),this.faceVertexUvs[0].push([u,v,y])):Math.abs(this.vertices[f].y)==a?(this.faces.push(new THREE.Face3(d,
e,f,[q,p,t])),this.faceVertexUvs[0].push([u,s,v])):(this.faces.push(new THREE.Face4(d,e,f,g,[q,p,t,r])),this.faceVertexUvs[0].push([u,s,v,y]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var f=d/this.segmentsT*this.arc,g=2*c/this.segmentsR*Math.PI;e.x=this.radius*Math.cos(f);e.y=this.radius*Math.sin(f);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(g))*Math.cos(f);h.y=(this.radius+this.tube*Math.cos(g))*Math.sin(f);h.z=
this.tube*Math.sin(g);this.vertices.push(h);a.push(new THREE.UV(d/this.segmentsT,c/this.segmentsR));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){e=(this.segmentsT+1)*c+d-1;var f=(this.segmentsT+1)*(c-1)+d-1,g=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,l=new THREE.Face4(e,f,g,h,[b[e],b[f],b[g],b[h]]);l.normal.addSelf(b[e]);l.normal.addSelf(b[f]);l.normal.addSelf(b[g]);l.normal.addSelf(b[h]);l.normal.normalize();this.faces.push(l);this.faceVertexUvs[0].push([a[e].clone(),
a[f].clone(),a[g].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=f||3;this.heightScale=g||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=
Array(this.segmentsT);for(b=0;b<this.segmentsT;++b){var l=2*(a/this.segmentsR)*this.p*Math.PI;g=2*(b/this.segmentsT)*Math.PI;f=h(l,g,this.q,this.p,this.radius,this.heightScale);l=h(l+0.01,g,this.q,this.p,this.radius,this.heightScale);c.sub(l,f);d.add(l,f);e.cross(c,d);d.cross(e,c);e.normalize();d.normalize();l=-this.tube*Math.cos(g);g=this.tube*Math.sin(g);f.x+=l*d.x+g*e.x;f.y+=l*d.y+g*e.y;f.z+=l*d.z+g*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(f.x,f.y,f.z))-1}}for(a=0;a<this.segmentsR;++a)for(b=
0;b<this.segmentsT;++b){e=(a+1)%this.segmentsR;f=(b+1)%this.segmentsT;c=this.grid[a][b];d=this.grid[e][b];e=this.grid[e][f];f=this.grid[a][f];g=new THREE.UV(a/this.segmentsR,b/this.segmentsT);var l=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),k=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),m=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(c,d,e,f));this.faceVertexUvs[0].push([g,l,k,m])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};
THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||!1;f&&(this.debug=new THREE.Object3D);this.grid=[];var g,h;f=this.segments+1;var l,k,m,q=new THREE.Vector3,p,t,r;b=new THREE.TubeGeometry.FrenetFrames(a,b,e);p=b.tangents;t=b.normals;r=b.binormals;this.tangents=p;this.normals=t;this.binormals=r;for(b=0;b<f;b++){this.grid[b]=[];d=b/(f-1);m=a.getPointAt(d);d=p[b];g=t[b];h=r[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,
m,c,255)),this.debug.add(new THREE.ArrowHelper(g,m,c,16711680)),this.debug.add(new THREE.ArrowHelper(h,m,c,65280)));for(d=0;d<this.segmentsRadius;d++)l=2*(d/this.segmentsRadius)*Math.PI,k=-this.radius*Math.cos(l),l=this.radius*Math.sin(l),q.copy(m),q.x+=k*g.x+l*h.x,q.y+=k*g.y+l*h.y,q.z+=k*g.z+l*h.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(q.x,q.y,q.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.segmentsRadius;d++)f=e?(b+1)%this.segments:b+1,q=(d+1)%this.segmentsRadius,a=this.grid[b][d],
c=this.grid[f][d],f=this.grid[f][q],q=this.grid[b][q],p=new THREE.UV(b/this.segments,d/this.segmentsRadius),t=new THREE.UV((b+1)/this.segments,d/this.segmentsRadius),r=new THREE.UV((b+1)/this.segments,(d+1)/this.segmentsRadius),g=new THREE.UV(b/this.segments,(d+1)/this.segmentsRadius),this.faces.push(new THREE.Face4(a,c,f,q)),this.faceVertexUvs[0].push([p,t,r,g]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],f=[],g=[],h=new THREE.Vector3,l=new THREE.Matrix4;b+=1;var k,m,q;this.tangents=e;this.normals=f;this.binormals=g;for(k=0;k<b;k++)m=k/(b-1),e[k]=a.getTangentAt(m),e[k].normalize();f[0]=new THREE.Vector3;g[0]=new THREE.Vector3;a=Number.MAX_VALUE;k=Math.abs(e[0].x);m=Math.abs(e[0].y);q=Math.abs(e[0].z);k<=a&&(a=k,d.set(1,0,0));m<=a&&(a=m,d.set(0,1,0));q<=a&&d.set(0,0,1);h.cross(e[0],d).normalize();
f[0].cross(e[0],h);g[0].cross(e[0],f[0]);for(k=1;k<b;k++)f[k]=f[k-1].clone(),g[k]=g[k-1].clone(),h.cross(e[k-1],e[k]),1E-4<h.length()&&(h.normalize(),d=Math.acos(e[k-1].dot(e[k])),l.makeRotationAxis(h,d).multiplyVector3(f[k])),g[k].cross(e[k],f[k]);if(c){d=Math.acos(f[0].dot(f[b-1]));d/=b-1;0<e[0].dot(h.cross(f[0],f[b-1]))&&(d=-d);for(k=1;k<b;k++)l.makeRotationAxis(e[k],d*k).multiplyVector3(f[k]),g[k].cross(e[k],f[k])}};
THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=l.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5;a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.UV(c,1-a);return b}function f(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),l.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),
l.faceVertexUvs[0].push([h(a.uv,a,d),h(b.uv,b,d),h(c.uv,c,d)])):(d-=1,f(a,g(a,b),g(a,c),d),f(g(a,b),b,g(b,c),d),f(g(a,c),g(b,c),c,d),f(g(a,b),g(b,c),g(a,c),d))}function g(a,b){q[a.index]||(q[a.index]=[]);q[b.index]||(q[b.index]=[]);var c=q[a.index][b.index];void 0===c&&(q[a.index][b.index]=q[b.index][a.index]=c=e((new THREE.Vector3).add(a,b).divideScalar(2)));return c}function h(a,b,c){0>c&&1===a.u&&(a=new THREE.UV(a.u-1,a.v));0===b.x&&0===b.z&&(a=new THREE.UV(c/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);
c=c||1;d=d||0;for(var l=this,k=0,m=a.length;k<m;k++)e(new THREE.Vector3(a[k][0],a[k][1],a[k][2]));var q=[];a=this.vertices;k=0;for(m=b.length;k<m;k++)f(a[b[k][0]],a[b[k][1]],a[b[k][2]],d);this.mergeVertices();k=0;for(m=this.vertices.length;k<m;k++)this.vertices[k].multiplyScalar(c);this.computeCentroids();this.boundingSphere={radius:c}};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,f=this.faces,g=this.faceVertexUvs[0];d=void 0===d?!1:d;var h,l,k,m,q=b+1;for(h=0;h<=c;h++){m=h/c;for(l=0;l<=b;l++)k=l/b,k=a(k,m),e.push(k)}var p,t,r,u;for(h=0;h<c;h++)for(l=0;l<b;l++)a=h*q+l,e=h*q+l+1,m=(h+1)*q+l,k=(h+1)*q+l+1,p=new THREE.UV(l/b,h/c),t=new THREE.UV((l+1)/b,h/c),r=new THREE.UV(l/b,(h+1)/c),u=new THREE.UV((l+1)/b,(h+1)/c),d?(f.push(new THREE.Face3(a,e,m)),f.push(new THREE.Face3(e,k,m)),g.push([p,
t,r]),g.push([t,u,r])):(f.push(new THREE.Face4(a,e,k,m)),g.push([p,t,u,r]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ConvexGeometry=function(a){function b(b){var c=a[b].clone(),e=c.length();c.x+=e*2E-6*(Math.random()-0.5);c.y+=e*2E-6*(Math.random()-0.5);c.z+=e*2E-6*(Math.random()-0.5);for(var e=[],f=0;f<d.length;){var g=d[f],h=c,l=a[g[0]],s;s=l;var v=a[g[1]],y=a[g[2]],x=new THREE.Vector3,w=new THREE.Vector3;x.sub(y,v);w.sub(s,v);x.crossSelf(w);x.isZero()||x.normalize();s=x;l=s.dot(l);if(s.dot(h)>=l){for(h=0;3>h;h++){l=[g[h],g[(h+1)%3]];s=!0;for(v=0;v<e.length;v++)if(e[v][0]===l[1]&&e[v][1]===l[0]){e[v]=e[e.length-
1];e.pop();s=!1;break}s&&e.push(l)}d[f]=d[d.length-1];d.pop()}else f++}for(v=0;v<e.length;v++)d.push([e[v][0],e[v][1],b])}function c(a){var b=a.length();return new THREE.UV(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var d=[[0,1,2],[0,2,1]],e=3;e<a.length;e++)b(e);for(var f=0,g=Array(a.length),e=0;e<d.length;e++)for(var h=d[e],l=0;3>l;l++)void 0===g[h[l]]&&(g[h[l]]=f++,this.vertices.push(a[h[l]])),h[l]=g[h[l]];for(e=0;e<d.length;e++)this.faces.push(new THREE.Face3(d[e][0],d[e][1],d[e][2]));for(e=0;e<
this.faces.length;e++)h=this.faces[e],this.faceVertexUvs[0].push([c(this.vertices[h.a]),c(this.vertices[h.b]),c(this.vertices[h.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.AxisHelper=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3);a.vertices.push(new THREE.Vector3(0,100,0));var b=new THREE.CylinderGeometry(0,5,25,5,1),c;c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(c);
c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.AxisHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===d&&(d=16776960);void 0===c&&(c=20);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=(new THREE.Vector3(0,1,0)).crossSelf(a);a=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(b.normalize(),a);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};
THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};
THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,f){THREE.CameraHelper.__v.set(d,e,f);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;
THREE.SubdivisionModifier=function(a){this.subdivisions=void 0===a?1:a;this.useOldVertexColors=!1;this.supportUVs=!0;this.debug=!1};THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;0<b--;)this.smooth(a)};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(){p.debug&&console.log.apply(console,arguments)}function c(){console&&console.log.apply(console,arguments)}function d(a,c,d,e,g,h,k){var l=new THREE.Face4(a,c,d,e,null,g.color,g.materialIndex);if(p.useOldVertexColors){l.vertexColors=[];for(var r,s,t,u=0;4>u;u++){t=h[u];r=new THREE.Color;r.setRGB(0,0,0);for(var v=0;v<t.length;v++)s=g.vertexColors[t[v]-1],r.r+=s.r,r.g+=s.g,r.b+=s.b;r.r/=t.length;r.g/=t.length;r.b/=t.length;l.vertexColors[u]=
r}}m.push(l);p.supportUVs&&(g=[f(a,""),f(c,k),f(d,k),f(e,k)],g[0]?g[1]?g[2]?g[3]?q.push(g):b("d :( ",e+":"+k):b("c :( ",d+":"+k):b("b :( ",c+":"+k):b("a :( ",a+":"+k))}function e(a,b){return Math.min(a,b)+"_"+Math.max(a,b)}function f(a,d){var e=a+":"+d,f=y[e];return!f?(a>=x&&a<x+r.length?b("face pt"):b("edge pt"),c("warning, UV not found for",e),null):f}function g(a,b,d){var e=a+":"+b;e in y?c("dup vertexNo",a,"oldFaceNo",b,"value",d,"key",e,y[e]):y[e]=d}function h(a,b){void 0===O[a]&&(O[a]=[]);O[a].push(b)}
function l(a,b,c){void 0===R[a]&&(R[a]={});R[a][b]=c}var k=[],m=[],q=[],p=this,t=a.vertices,r=a.faces,k=t.concat(),u=[],s={},v={},y={},x=t.length,w,G,E,A,D,C=a.faceVertexUvs[0],M;b("originalFaces, uvs, originalVerticesLength",r.length,C.length,x);if(p.supportUVs){w=0;for(G=C.length;w<G;w++){E=0;for(A=C[w].length;E<A;E++)M=r[w]["abcd".charAt(E)],g(M,w,C[w][E])}}0==C.length&&(p.supportUVs=!1);w=0;for(D in y)w++;w||(p.supportUVs=!1,b("no uvs"));b("-- Original Faces + Vertices UVs completed",y,"vs",C.length);
w=0;for(G=r.length;w<G;w++)D=r[w],u.push(D.centroid),k.push(D.centroid),p.supportUVs&&(C=new THREE.UV,D instanceof THREE.Face3?(C.u=f(D.a,w).u+f(D.b,w).u+f(D.c,w).u,C.v=f(D.a,w).v+f(D.b,w).v+f(D.c,w).v,C.u/=3,C.v/=3):D instanceof THREE.Face4&&(C.u=f(D.a,w).u+f(D.b,w).u+f(D.c,w).u+f(D.d,w).u,C.v=f(D.a,w).v+f(D.b,w).v+f(D.c,w).v+f(D.d,w).v,C.u/=4,C.v/=4),g(x+w,"",C));b("-- added UVs for new Faces",y);G=function(a){function b(a,c){void 0===h[a]&&(h[a]=[]);h[a].push(c)}var c,d,f,g,h={};c=0;for(d=a.faces.length;c<
d;c++)f=a.faces[c],f instanceof THREE.Face3?(g=e(f.a,f.b),b(g,c),g=e(f.b,f.c),b(g,c),g=e(f.c,f.a),b(g,c)):f instanceof THREE.Face4&&(g=e(f.a,f.b),b(g,c),g=e(f.b,f.c),b(g,c),g=e(f.c,f.d),b(g,c),g=e(f.d,f.a),b(g,c));return h}(a);M=0;var H,L,O={},R={};for(w in G){C=G[w];H=w.split("_");L=H[0];H=H[1];h(L,[L,H]);h(H,[L,H]);E=0;for(A=C.length;E<A;E++)D=C[E],l(L,D,w),l(H,D,w);2>C.length&&(v[w]=!0)}b("vertexEdgeMap",O,"vertexFaceMap",R);for(w in G)C=G[w],D=C[0],A=C[1],H=w.split("_"),L=H[0],H=H[1],C=new THREE.Vector3,
v[w]?(C.addSelf(t[L]),C.addSelf(t[H]),C.multiplyScalar(0.5)):(C.addSelf(u[D]),C.addSelf(u[A]),C.addSelf(t[L]),C.addSelf(t[H]),C.multiplyScalar(0.25)),s[w]=x+r.length+M,k.push(C),M++,p.supportUVs&&(C=new THREE.UV,C.u=f(L,D).u+f(H,D).u,C.v=f(L,D).v+f(H,D).v,C.u/=2,C.v/=2,g(s[w],D,C),v[w]||(C=new THREE.UV,C.u=f(L,A).u+f(H,A).u,C.v=f(L,A).v+f(H,A).v,C.u/=2,C.v/=2,g(s[w],A,C)));b("-- Step 2 done");var S,P;A=["123","12","2","23"];H=["123","23","3","31"];var F=["123","31","1","12"],I=["1234","12","2","23"],
ba=["1234","23","3","34"],ca=["1234","34","4","41"],ia=["1234","41","1","12"];w=0;for(G=u.length;w<G;w++)D=r[w],C=x+w,D instanceof THREE.Face3?(M=e(D.a,D.b),L=e(D.b,D.c),S=e(D.c,D.a),d(C,s[M],D.b,s[L],D,A,w),d(C,s[L],D.c,s[S],D,H,w),d(C,s[S],D.a,s[M],D,F,w)):D instanceof THREE.Face4?(M=e(D.a,D.b),L=e(D.b,D.c),S=e(D.c,D.d),P=e(D.d,D.a),d(C,s[M],D.b,s[L],D,I,w),d(C,s[L],D.c,s[S],D,ba,w),d(C,s[S],D.d,s[P],D,ca,w),d(C,s[P],D.a,s[M],D,ia,w)):b("face should be a face!",D);s=new THREE.Vector3;D=new THREE.Vector3;
w=0;for(G=t.length;w<G;w++)if(void 0!==O[w]){s.set(0,0,0);D.set(0,0,0);L=new THREE.Vector3(0,0,0);C=0;for(E in R[w])s.addSelf(u[E]),C++;A=0;M=O[w].length;for(E=0;E<M;E++)v[e(O[w][E][0],O[w][E][1])]&&A++;if(2!=A){s.divideScalar(C);for(E=0;E<M;E++)C=O[w][E],C=t[C[0]].clone().addSelf(t[C[1]]).divideScalar(2),D.addSelf(C);D.divideScalar(M);L.addSelf(t[w]);L.multiplyScalar(M-3);L.addSelf(s);L.addSelf(D.multiplyScalar(2));L.divideScalar(M);k[w]=L}}a.vertices=k;a.faces=m;a.faceVertexUvs[0]=q;delete a.__tmpVertices;
a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(a){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===f&&(f=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};
THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f].name.match(b);if(h&&1<h.length){var l=h[1];d[l]||(d[l]={start:Infinity,end:-Infinity});h=d[l];f<h.start&&(h.start=f);f>h.end&&(h.end=f);c||(c=l)}}for(l in d)h=d[l],this.createAnimation(l,h.start,h.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;
f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*g;this.morphTargetInfluences[d.lastFrame]=(1-e)*g}}};
THREE.LensFlarePlugin=function(){function a(a){var c=b.createProgram(),d=b.createShader(b.FRAGMENT_SHADER),e=b.createShader(b.VERTEX_SHADER);b.shaderSource(d,a.fragmentShader);b.shaderSource(e,a.vertexShader);b.compileShader(d);b.compileShader(e);b.attachShader(c,d);b.attachShader(c,e);b.linkProgram(c);return c}var b,c,d,e,f,g,h,l,k,m,q,p,t;this.init=function(r){b=r.context;c=r;d=new Float32Array(16);e=new Uint16Array(6);r=0;d[r++]=-1;d[r++]=-1;d[r++]=0;d[r++]=0;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=
0;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=1;d[r++]=-1;d[r++]=1;d[r++]=0;d[r++]=1;r=0;e[r++]=0;e[r++]=1;e[r++]=2;e[r++]=0;e[r++]=2;e[r++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);h=b.createTexture();l=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,
b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,l);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,m=a(THREE.ShaderFlares.lensFlare)):(k=!0,m=a(THREE.ShaderFlares.lensFlareVertexTexture));q={};p={};q.vertex=b.getAttribLocation(m,"position");q.uv=b.getAttribLocation(m,"uv");p.renderType=b.getUniformLocation(m,"renderType");p.map=b.getUniformLocation(m,"map");p.occlusionMap=b.getUniformLocation(m,"occlusionMap");p.opacity=b.getUniformLocation(m,"opacity");p.color=b.getUniformLocation(m,
"color");p.scale=b.getUniformLocation(m,"scale");p.rotation=b.getUniformLocation(m,"rotation");p.screenPosition=b.getUniformLocation(m,"screenPosition");t=!1};this.render=function(a,d,e,v){a=a.__webglFlares;var y=a.length;if(y){var x=new THREE.Vector3,w=v/e,G=0.5*e,E=0.5*v,A=16/v,D=new THREE.Vector2(A*w,A),C=new THREE.Vector3(1,1,0),M=new THREE.Vector2(1,1),H=p,A=q;b.useProgram(m);t||(b.enableVertexAttribArray(q.vertex),b.enableVertexAttribArray(q.uv),t=!0);b.uniform1i(H.occlusionMap,0);b.uniform1i(H.map,
1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(A.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(A.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);b.disable(b.CULL_FACE);b.depthMask(!1);var L,O,R,S,P;for(L=0;L<y;L++)if(A=16/v,D.set(A*w,A),S=a[L],x.set(S.matrixWorld.elements[12],S.matrixWorld.elements[13],S.matrixWorld.elements[14]),d.matrixWorldInverse.multiplyVector3(x),d.projectionMatrix.multiplyVector3(x),C.copy(x),M.x=C.x*G+G,M.y=C.y*E+E,k||0<M.x&&M.x<e&&0<M.y&&M.y<v){b.activeTexture(b.TEXTURE1);
b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,M.x-8,M.y-8,16,16,0);b.uniform1i(H.renderType,0);b.uniform2f(H.scale,D.x,D.y);b.uniform3f(H.screenPosition,C.x,C.y,C.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,l);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,M.x-8,M.y-8,16,16,0);b.uniform1i(H.renderType,1);b.disable(b.DEPTH_TEST);b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,
h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);S.positionScreen.copy(C);S.customUpdateCallback?S.customUpdateCallback(S):S.updateLensFlares();b.uniform1i(H.renderType,2);b.enable(b.BLEND);O=0;for(R=S.lensFlares.length;O<R;O++)P=S.lensFlares[O],0.001<P.opacity&&0.001<P.scale&&(C.x=P.x,C.y=P.y,C.z=P.z,A=P.size*P.scale/v,D.x=A*w,D.y=A,b.uniform3f(H.screenPosition,C.x,C.y,C.z),b.uniform2f(H.scale,D.x,D.y),b.uniform1f(H.rotation,P.rotation),b.uniform1f(H.opacity,P.opacity),b.uniform3f(H.color,P.color.r,
P.color.g,P.color.b),c.setBlending(P.blending,P.blendEquation,P.blendSrc,P.blendDst),c.setTexture(P.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.ShadowMapPlugin=function(){var a,b,c,d,e,f,g=new THREE.Frustum,h=new THREE.Matrix4,l=new THREE.Vector3,k=new THREE.Vector3;this.init=function(g){a=g.context;b=g;g=THREE.ShaderLib.depthRGBA;var h=THREE.UniformsUtils.clone(g.uniforms);c=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h});d=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,
vertexShader:g.vertexShader,uniforms:h,skinning:!0});f=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:h,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;f._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(m,q){var p,t,r,u,s,v,y,x,w,G=[];u=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFrontFaces?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);p=0;for(t=m.__lights.length;p<t;p++)if(r=m.__lights[p],r.castShadow)if(r instanceof THREE.DirectionalLight&&r.shadowCascade)for(s=0;s<r.shadowCascadeCount;s++){var E;if(r.shadowCascadeArray[s])E=r.shadowCascadeArray[s];else{w=r;y=s;E=new THREE.DirectionalLight;E.isVirtual=!0;E.onlyShadow=!0;E.castShadow=!0;E.shadowCameraNear=w.shadowCameraNear;E.shadowCameraFar=w.shadowCameraFar;E.shadowCameraLeft=w.shadowCameraLeft;E.shadowCameraRight=w.shadowCameraRight;
E.shadowCameraBottom=w.shadowCameraBottom;E.shadowCameraTop=w.shadowCameraTop;E.shadowCameraVisible=w.shadowCameraVisible;E.shadowDarkness=w.shadowDarkness;E.shadowBias=w.shadowCascadeBias[y];E.shadowMapWidth=w.shadowCascadeWidth[y];E.shadowMapHeight=w.shadowCascadeHeight[y];E.pointsWorld=[];E.pointsFrustum=[];x=E.pointsWorld;v=E.pointsFrustum;for(var A=0;8>A;A++)x[A]=new THREE.Vector3,v[A]=new THREE.Vector3;x=w.shadowCascadeNearZ[y];w=w.shadowCascadeFarZ[y];v[0].set(-1,-1,x);v[1].set(1,-1,x);v[2].set(-1,
1,x);v[3].set(1,1,x);v[4].set(-1,-1,w);v[5].set(1,-1,w);v[6].set(-1,1,w);v[7].set(1,1,w);E.originalCamera=q;v=new THREE.Gyroscope;v.position=r.shadowCascadeOffset;v.add(E);v.add(E.target);q.add(v);r.shadowCascadeArray[s]=E;console.log("Created virtualLight",E)}y=r;x=s;w=y.shadowCascadeArray[x];w.position.copy(y.position);w.target.position.copy(y.target.position);w.lookAt(w.target);w.shadowCameraVisible=y.shadowCameraVisible;w.shadowDarkness=y.shadowDarkness;w.shadowBias=y.shadowCascadeBias[x];v=y.shadowCascadeNearZ[x];
y=y.shadowCascadeFarZ[x];w=w.pointsFrustum;w[0].z=v;w[1].z=v;w[2].z=v;w[3].z=v;w[4].z=y;w[5].z=y;w[6].z=y;w[7].z=y;G[u]=E;u++}else G[u]=r,u++;p=0;for(t=G.length;p<t;p++){r=G[p];r.shadowMap||(r.shadowMap=new THREE.WebGLRenderTarget(r.shadowMapWidth,r.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),r.shadowMapSize=new THREE.Vector2(r.shadowMapWidth,r.shadowMapHeight),r.shadowMatrix=new THREE.Matrix4);if(!r.shadowCamera){if(r instanceof THREE.SpotLight)r.shadowCamera=
new THREE.PerspectiveCamera(r.shadowCameraFov,r.shadowMapWidth/r.shadowMapHeight,r.shadowCameraNear,r.shadowCameraFar);else if(r instanceof THREE.DirectionalLight)r.shadowCamera=new THREE.OrthographicCamera(r.shadowCameraLeft,r.shadowCameraRight,r.shadowCameraTop,r.shadowCameraBottom,r.shadowCameraNear,r.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}m.add(r.shadowCamera);b.autoUpdateScene&&m.updateMatrixWorld()}r.shadowCameraVisible&&!r.cameraHelper&&(r.cameraHelper=
new THREE.CameraHelper(r.shadowCamera),r.shadowCamera.add(r.cameraHelper));if(r.isVirtual&&E.originalCamera==q){s=q;u=r.shadowCamera;v=r.pointsFrustum;w=r.pointsWorld;l.set(Infinity,Infinity,Infinity);k.set(-Infinity,-Infinity,-Infinity);for(y=0;8>y;y++)x=w[y],x.copy(v[y]),THREE.ShadowMapPlugin.__projector.unprojectVector(x,s),u.matrixWorldInverse.multiplyVector3(x),x.x<l.x&&(l.x=x.x),x.x>k.x&&(k.x=x.x),x.y<l.y&&(l.y=x.y),x.y>k.y&&(k.y=x.y),x.z<l.z&&(l.z=x.z),x.z>k.z&&(k.z=x.z);u.left=l.x;u.right=
k.x;u.top=k.y;u.bottom=l.y;u.updateProjectionMatrix()}u=r.shadowMap;v=r.shadowMatrix;s=r.shadowCamera;s.position.copy(r.matrixWorld.getPosition());s.lookAt(r.target.matrixWorld.getPosition());s.updateMatrixWorld();s.matrixWorldInverse.getInverse(s.matrixWorld);r.cameraHelper&&(r.cameraHelper.visible=r.shadowCameraVisible);r.shadowCameraVisible&&r.cameraHelper.update();v.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);v.multiplySelf(s.projectionMatrix);v.multiplySelf(s.matrixWorldInverse);s._viewMatrixArray||
(s._viewMatrixArray=new Float32Array(16));s._projectionMatrixArray||(s._projectionMatrixArray=new Float32Array(16));s.matrixWorldInverse.flattenToArray(s._viewMatrixArray);s.projectionMatrix.flattenToArray(s._projectionMatrixArray);h.multiply(s.projectionMatrix,s.matrixWorldInverse);g.setFromMatrix(h);b.setRenderTarget(u);b.clear();w=m.__webglObjects;r=0;for(u=w.length;r<u;r++)if(y=w[r],v=y.object,y.render=!1,v.visible&&v.castShadow&&(!(v instanceof THREE.Mesh)||!v.frustumCulled||g.contains(v)))v._modelViewMatrix.multiply(s.matrixWorldInverse,
v.matrixWorld),y.render=!0;r=0;for(u=w.length;r<u;r++)y=w[r],y.render&&(v=y.object,y=y.buffer,x=v.customDepthMaterial?v.customDepthMaterial:v instanceof THREE.SkinnedMesh?v.geometry.morphTargets.length?f:e:v.geometry.morphTargets.length?d:c,y instanceof THREE.BufferGeometry?b.renderBufferDirect(s,m.__lights,null,x,y,v):b.renderBuffer(s,m.__lights,null,x,y,v));w=m.__webglObjectsImmediate;r=0;for(u=w.length;r<u;r++)y=w[r],v=y.object,v.visible&&v.castShadow&&(v._modelViewMatrix.multiply(s.matrixWorldInverse,
v.matrixWorld),b.renderImmediateObject(s,m.__lights,null,c,v))}p=b.getClearColor();t=b.getClearAlpha();a.clearColor(p.r,p.g,p.b,t);a.enable(a.BLEND);b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;
THREE.SpritePlugin=function(){function a(a,b){return b.z-a.z}var b,c,d,e,f,g,h,l,k,m;this.init=function(a){b=a.context;c=a;d=new Float32Array(16);e=new Uint16Array(6);a=0;d[a++]=-1;d[a++]=-1;d[a++]=0;d[a++]=0;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=1;d[a++]=-1;d[a++]=1;d[a++]=0;d[a++]=1;a=0;e[a++]=0;e[a++]=1;e[a++]=2;e[a++]=0;e[a++]=2;e[a++]=3;f=b.createBuffer();g=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,d,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
g);b.bufferData(b.ELEMENT_ARRAY_BUFFER,e,b.STATIC_DRAW);a=THREE.ShaderSprite.sprite;var p=b.createProgram(),t=b.createShader(b.FRAGMENT_SHADER),r=b.createShader(b.VERTEX_SHADER);b.shaderSource(t,a.fragmentShader);b.shaderSource(r,a.vertexShader);b.compileShader(t);b.compileShader(r);b.attachShader(p,t);b.attachShader(p,r);b.linkProgram(p);h=p;l={};k={};l.position=b.getAttribLocation(h,"position");l.uv=b.getAttribLocation(h,"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,
"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.affectedByDistance=b.getUniformLocation(h,"affectedByDistance");k.screenPosition=b.getUniformLocation(h,"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");
k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");m=!1};this.render=function(d,e,t,r){d=d.__webglSprites;var u=d.length;if(u){var s=l,v=k,y=r/t;t*=0.5;var x=0.5*r,w=!0;b.useProgram(h);m||(b.enableVertexAttribArray(s.position),b.enableVertexAttribArray(s.uv),m=!0);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.depthMask(!0);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(s.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(s.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,g);
b.uniformMatrix4fv(v.projectionMatrix,!1,e._projectionMatrixArray);b.activeTexture(b.TEXTURE0);b.uniform1i(v.map,0);for(var G,E=[],s=0;s<u;s++)G=d[s],G.visible&&0!==G.opacity&&(G.useScreenCoordinates?G.z=-G.position.z:(G._modelViewMatrix.multiply(e.matrixWorldInverse,G.matrixWorld),G.z=-G._modelViewMatrix.elements[14]));d.sort(a);for(s=0;s<u;s++)G=d[s],G.visible&&0!==G.opacity&&(G.map&&G.map.image&&G.map.image.width)&&(G.useScreenCoordinates?(b.uniform1i(v.useScreenCoordinates,1),b.uniform3f(v.screenPosition,
(G.position.x-t)/t,(x-G.position.y)/x,Math.max(0,Math.min(1,G.position.z)))):(b.uniform1i(v.useScreenCoordinates,0),b.uniform1i(v.affectedByDistance,G.affectedByDistance?1:0),b.uniformMatrix4fv(v.modelViewMatrix,!1,G._modelViewMatrix.elements)),e=G.map.image.width/(G.scaleByViewport?r:1),E[0]=e*y*G.scale.x,E[1]=e*G.scale.y,b.uniform2f(v.uvScale,G.uvScale.x,G.uvScale.y),b.uniform2f(v.uvOffset,G.uvOffset.x,G.uvOffset.y),b.uniform2f(v.alignment,G.alignment.x,G.alignment.y),b.uniform1f(v.opacity,G.opacity),
b.uniform3f(v.color,G.color.r,G.color.g,G.color.b),b.uniform1f(v.rotation,G.rotation),b.uniform2fv(v.scale,E),G.mergeWith3D&&!w?(b.enable(b.DEPTH_TEST),w=!0):!G.mergeWith3D&&w&&(b.disable(b.DEPTH_TEST),w=!1),c.setBlending(G.blending,G.blendEquation,G.blendSrc,G.blendDst),c.setTexture(G.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};
THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4;this.init=function(e){a=e.context;b=e;e=THREE.ShaderLib.depthRGBA;var f=THREE.UniformsUtils.clone(e.uniforms);c=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f});d=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:f,morphTargets:!0});c._shadowPass=!0;d._shadowPass=!0};this.render=function(a,
b){this.enabled&&this.update(a,b)};this.update=function(g,h){var l,k,m,q,p,t;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&g.updateMatrixWorld();h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16));h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16));h.matrixWorldInverse.getInverse(h.matrixWorld);h.matrixWorldInverse.flattenToArray(h._viewMatrixArray);h.projectionMatrix.flattenToArray(h._projectionMatrixArray);f.multiply(h.projectionMatrix,
h.matrixWorldInverse);e.setFromMatrix(f);b.setRenderTarget(this.renderTarget);b.clear();t=g.__webglObjects;l=0;for(k=t.length;l<k;l++)if(m=t[l],p=m.object,m.render=!1,p.visible&&(!(p instanceof THREE.Mesh)||!p.frustumCulled||e.contains(p)))p._modelViewMatrix.multiply(h.matrixWorldInverse,p.matrixWorld),m.render=!0;l=0;for(k=t.length;l<k;l++)m=t[l],m.render&&(p=m.object,m=m.buffer,p.material&&b.setMaterialFaces(p.material),q=p.customDepthMaterial?p.customDepthMaterial:p.geometry.morphTargets.length?
d:c,m instanceof THREE.BufferGeometry?b.renderBufferDirect(h,g.__lights,null,q,m,p):b.renderBuffer(h,g.__lights,null,q,m,p));t=g.__webglObjectsImmediate;l=0;for(k=t.length;l<k;l++)m=t[l],p=m.object,p.visible&&p.castShadow&&(p._modelViewMatrix.multiply(h.matrixWorldInverse,p.matrixWorld),b.renderImmediateObject(h,g.__lights,null,c,p));l=b.getClearColor();k=b.getClearAlpha();a.clearColor(l.r,l.g,l.b,k);a.enable(a.BLEND)}};
THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},
lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};
THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}};
THREE.SceneLoaderEx=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoaderEx.prototype.constructor=THREE.SceneLoaderEx;
THREE.SceneLoaderEx.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoaderEx: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoaderEx.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoaderEx.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:k+a}function e(a,b){for(var c in b)if(void 0===F.objects[c]){var d=b[c],f=null;if(void 0!==d.geometry){if(C=F.geometries[d.geometry]){f=!1;void 0===d.materials&&(d.materials=[]);M=F.materials[d.materials[0]];(f=M instanceof THREE.ShaderMaterial)&&C.computeTangents();x=void 0===d.position?[0,0,0]:d.position;w=void 0===d.rotation?[0,0,0]:d.rotation;G=void 0===d.quaternion?[1,0,0,0]:d.quaternion;E=void 0===
d.scale?[1,1,1]:d.scale;s=d.matrix;G=0;0===d.materials.length&&(M=new THREE.MeshFaceMaterial);1<d.materials.length&&(M=new THREE.MeshFaceMaterial);d.morph?(f=new THREE.MorphAnimMesh(C,M),void 0!==d.duration&&(f.duration=d.duration),void 0!==d.time&&(f.time=d.time),void 0!==d.mirroredLoop&&(f.mirroredLoop=d.mirroredLoop),M.morphNormals&&C.computeMorphNormals()):f=new THREE.Mesh(C,M);f.name=c;s?(f.matrixAutoUpdate=!1,f.matrix.set(s[0],s[1],s[2],s[3],s[4],s[5],s[6],s[7],s[8],s[9],s[10],s[11],s[12],s[13],
s[14],s[15])):(f.position.set(x[0],x[1],x[2]),G?(f.quaternion.set(G[0],G[1],G[2],G[3]),f.useQuaternion=!0):f.rotation.set(w[0],w[1],w[2]),f.scale.set(E[0],E[1],E[2]));f.visible=void 0===d.visible?!0:d.visible;f.castShadow=d.castShadow;f.receiveShadow=d.receiveShadow;if(d.groups)for(var g=d.groups.length,h=0;h<g;h++){var k=d.groups[h];null==F.groups[k]&&(F.groups[k]=[]);F.groups[k].push(f)}a.add(f);F.objects[c]=f}}else x=void 0===d.position?[0,0,0]:d.position,w=void 0===d.rotation?[0,0,0]:d.rotation,
G=void 0===d.quaternion?[1,0,0,0]:d.quaternion,E=void 0===d.scale?[1,1,1]:d.scale,G=0,f=new THREE.Object3D,f.name=c,f.position.set(x[0],x[1],x[2]),G?(f.quaternion.set(G[0],G[1],G[2],G[3]),f.useQuaternion=!0):f.rotation.set(w[0],w[1],w[2]),f.scale.set(E[0],E[1],E[2]),f.visible=void 0===d.visible?!0:d.visible,a.add(f),F.objects[c]=f,F.empties[c]=f;if(f){if(void 0!==d.properties)for(var l in d.properties)f.properties[l]=d.properties[l];void 0!==d.children&&e(f,d.children)}}}function f(a){return function(b){void 0!==
I.geometries[a].subdivisionModifier&&(new THREE.SubdivisionModifier(I.geometries[a].subdivisionModifier)).modify(b);F.geometries[a]=b;e(F.scene,I.objects);O-=1;l.onLoadComplete();h()}}function g(a){return function(b){F.geometries[a]=b}}function h(){l.callbackProgress({totalModels:S,totalTextures:P,loadedModels:S-O,loadedTextures:P-R},F);l.onLoadProgress();0===O&&0===R&&b(F)}var l=this,k=THREE.Loader.prototype.extractUrlBase(c),m,q,p,t,r,u,s,v,y,x,w,G,E,A,D,C,M,H,L,O,R,S,P,F,I=a;void 0===I.urlBaseType&&
(I.urlBaseType="relativeToScene");void 0===I.type&&(I.type="scene");for(v in this.geometryHandlerMap)this.geometryHandlerMap[v].loaderObject=new this.geometryHandlerMap[v].loaderClass;R=O=0;F={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{},appData:{},containers:null};if(I.transform&&(a=I.transform.position,v=I.transform.rotation,A=I.transform.scale,a&&F.scene.position.set(a[0],a[1],a[2]),v&&F.scene.rotation.set(v[0],v[1],v[2]),
A&&F.scene.scale.set(A[0],A[1],A[2]),a||v||A))F.scene.updateMatrix(),F.scene.updateMatrixWorld();I.appData&&(F.appData=I.appData);I.containers&&(F.containers=I.containers);a=function(a){return function(){R-=a;h();l.onLoadComplete()}};for(t in I.cameras)A=I.cameras[t],"perspective"===A.type?H=new THREE.PerspectiveCamera(A.fov,A.aspect,A.near,A.far):"ortho"===A.type&&(H=new THREE.OrthographicCamera(A.left,A.right,A.top,A.bottom,A.near,A.far)),x=A.position,v=A.target,A=A.up,H.position.set(x[0],x[1],
x[2]),H.target=new THREE.Vector3(v[0],v[1],v[2]),A&&H.up.set(A[0],A[1],A[2]),F.cameras[t]=H;for(p in I.lights)v=I.lights[p],t=void 0!==v.color?v.color:16777215,H=void 0!==v.intensity?v.intensity:1,"directional"===v.type?(x=v.direction,y=new THREE.DirectionalLight(t,H),y.position.set(x[0],x[1],x[2]),y.position.normalize()):"point"===v.type?(x=v.position,y=v.distance,y=new THREE.PointLight(t,H,y),y.position.set(x[0],x[1],x[2])):"ambient"===v.type&&(y=new THREE.AmbientLight(t)),F.scene.add(y),F.lights[p]=
y;for(r in I.fogs)p=I.fogs[r],"linear"===p.type?L=new THREE.Fog(0,p.near,p.far):"exp2"===p.type&&(L=new THREE.FogExp2(0,p.density)),A=p.color,L.color.setRGB(A[0],A[1],A[2]),F.fogs[r]=L;void 0===I.defaults&&(I.defaults={});F.cameras&&I.defaults.camera&&(F.currentCamera=F.cameras[I.defaults.camera]);F.fogs&&I.defaults.fog&&(F.scene.fog=F.fogs[I.defaults.fog]);A=void 0===I.defaults.bgcolor?[0,0,0]:I.defaults.bgcolor;F.bgColor=new THREE.Color;F.bgColor.setRGB(A[0],A[1],A[2]);F.bgColorAlpha=void 0===I.defaults.bgalpha?
1:I.defaults.bgalpha;for(m in I.geometries)p=I.geometries[m],p.type in this.geometryHandlerMap&&(O+=1,l.onLoadStart());S=O;for(m in I.geometries)if(p=I.geometries[m],"cube"===p.type)C=new THREE.CubeGeometry(p.width,p.height,p.depth,p.segmentsWidth,p.segmentsHeight,p.segmentsDepth,null,p.flipped,p.sides),F.geometries[m]=C;else if("plane"===p.type)C=new THREE.PlaneGeometry(p.width,p.height,p.segmentsWidth,p.segmentsHeight),F.geometries[m]=C;else if("sphere"===p.type)C=new THREE.SphereGeometry(p.radius,
p.segmentsWidth,p.segmentsHeight),F.geometries[m]=C;else if("cylinder"===p.type)C=new THREE.CylinderGeometry(p.topRad,p.botRad,p.height,p.radSegs,p.heightSegs),F.geometries[m]=C;else if("torus"===p.type)C=new THREE.TorusGeometry(p.radius,p.tube,p.segmentsR,p.segmentsT),F.geometries[m]=C;else if("icosahedron"===p.type)C=new THREE.IcosahedronGeometry(p.radius,p.subdivisions),F.geometries[m]=C;else if(p.type in this.geometryHandlerMap){r={};for(var ba in p)"type"!==ba&&"url"!==ba&&(r[ba]=p[ba]);L=this.geometryHandlerMap[p.type].loaderObject;
p=d(p.url,I.urlBaseType);y=f(m);L.load(p,y,r)}else if("embedded"===p.type)r=I.embeds[p.id],r.metadata=I.metadata,r&&this.geometryHandlerMap.ascii.loaderObject.createModel(r,g(m),"");else throw"Unknown Geometry type: "+p.type+" in "+c;for(u in I.textures)if(c=I.textures[u],c.url instanceof Array){R+=c.url.length;for(m=0;m<c.url.length;m++)l.onLoadStart()}else R+=1,l.onLoadStart();P=R;for(u in I.textures){c=I.textures[u];void 0!==c.mapping&&void 0!==THREE[c.mapping]&&(c.mapping=new THREE[c.mapping]);
if(c.url instanceof Array){ba=c.url.length;r=[];for(m=0;m<ba;m++)r[m]=d(c.url[m],I.urlBaseType);m=(m=r[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(r,c.mapping,a(ba)):THREE.ImageUtils.loadTextureCube(r,c.mapping,a(ba))}else m=c.url.toLowerCase().endsWith(".dds"),ba=d(c.url,I.urlBaseType),r=a(1),m=m?THREE.ImageUtils.loadCompressedTexture(ba,c.mapping,r):THREE.ImageUtils.loadTexture(ba,c.mapping,r),void 0!==THREE[c.minFilter]&&(m.minFilter=THREE[c.minFilter]),void 0!==THREE[c.magFilter]&&
(m.magFilter=THREE[c.magFilter]),c.anisotropy&&(m.anisotropy=c.anisotropy),c.repeat&&(m.repeat.set(c.repeat[0],c.repeat[1]),1!==c.repeat[0]&&(m.wrapS=THREE.RepeatWrapping),1!==c.repeat[1]&&(m.wrapT=THREE.RepeatWrapping)),c.offset&&m.offset.set(c.offset[0],c.offset[1]),c.wrap&&(ba={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==ba[c.wrap[0]]&&(m.wrapS=ba[c.wrap[0]]),void 0!==ba[c.wrap[1]]&&(m.wrapT=ba[c.wrap[1]]));F.textures[u]=m}u=I.materials;for(q in u){s=u[q];void 0===
s.type&&(s.type="MeshLambertMaterial");void 0===s.parameters.blending&&(s.parameters.blending="NormalBlending");for(D in s.parameters)"envMap"===D||"map"===D||"lightMap"===D||"bumpMap"===D?s.parameters[D]=F.textures[s.parameters[D]]:"shading"===D?s.parameters[D]="flat"===s.parameters[D]?THREE.FlatShading:THREE.SmoothShading:"side"===D?s.parameters[D]="double"==s.parameters[D]?THREE.DoubleSide:"back"==s.parameters[D]?THREE.BackSide:THREE.FrontSide:"blending"===D?s.parameters[D]=s.parameters[D]in THREE?
THREE[s.parameters[D]]:THREE.NormalBlending:"combine"===D?s.parameters[D]="MixOperation"==s.parameters[D]?THREE.MixOperation:THREE.MultiplyOperation:"vertexColors"===D?"face"==s.parameters[D]?s.parameters[D]=THREE.FaceColors:s.parameters[D]&&(s.parameters[D]=THREE.VertexColors):"wrapRGB"===D&&(a=s.parameters[D],s.parameters[D]=new THREE.Vector3(a[0],a[1],a[2]));void 0!==s.parameters.opacity&&1>s.parameters.opacity&&(s.parameters.transparent=!0);s.parameters.normalMap?(a=THREE.ShaderUtils.lib.normal,
c=THREE.UniformsUtils.clone(a.uniforms),m=s.parameters.color,ba=s.parameters.specular,r=s.parameters.ambient,L=s.parameters.shininess,c.tNormal.value=F.textures[s.parameters.normalMap],s.parameters.normalScale&&c.uNormalScale.value.set(s.parameters.normalScale[0],s.parameters.normalScale[1]),s.parameters.map&&(c.tDiffuse.value=s.parameters.map,c.enableDiffuse.value=!0),s.parameters.envMap&&(c.tCube.value=s.parameters.envMap,c.enableReflection.value=!0,c.uReflectivity.value=s.parameters.reflectivity),
s.parameters.lightMap&&(c.tAO.value=s.parameters.lightMap,c.enableAO.value=!0),s.parameters.specularMap&&(c.tSpecular.value=F.textures[s.parameters.specularMap],c.enableSpecular.value=!0),s.parameters.displacementMap&&(c.tDisplacement.value=F.textures[s.parameters.displacementMap],c.enableDisplacement.value=!0,c.uDisplacementBias.value=s.parameters.displacementBias,c.uDisplacementScale.value=s.parameters.displacementScale),c.uDiffuseColor.value.setHex(m),c.uSpecularColor.value.setHex(ba),c.uAmbientColor.value.setHex(r),
c.uShininess.value=L,s.parameters.opacity&&(c.uOpacity.value=s.parameters.opacity),M=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:c,lights:!0,fog:!0})):M=new THREE[s.type](s.parameters);F.materials[q]=M}e(F.scene,I.objects);l.callbackSync(F);h()};
THREE.ColladaLoader=function(){function a(a,d,e){na=a;d=d||ua;void 0!==e&&(a=e.split("/"),a.pop(),Ba=(1>a.length?".":a.join("/"))+"/");if((a=na.evaluate("//dae:asset",na,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(e=0;e<a.childNodes.length;e++){var k=a.childNodes[e];switch(k.nodeName){case "unit":(k=k.getAttribute("meter"))&&parseFloat(k);break;case "up_axis":za=k.textContent.charAt(0)}}if(!Ka.convertUpAxis||za===Ka.upAxis)Da=null;else switch(za){case "X":Da="Y"===
Ka.upAxis?"XtoY":"XtoZ";break;case "Y":Da="X"===Ka.upAxis?"YtoX":"YtoZ";break;case "Z":Da="X"===Ka.upAxis?"ZtoX":"ZtoY"}ya=b("//dae:library_images/dae:image",g,"image");Ga=b("//dae:library_materials/dae:material",C,"material");Za=b("//dae:library_effects/dae:effect",R,"effect");Sa=b("//dae:library_geometries/dae:geometry",s,"geometry");gb=b(".//dae:library_cameras/dae:camera",ca,"camera");oa=b("//dae:library_controllers/dae:controller",h,"controller");cb=b("//dae:library_animations/dae:animation",
P,"animation");ma=b(".//dae:library_visual_scenes/dae:visual_scene",m,"visual_scene");kb=[];Ha=[];(a=na.evaluate(".//dae:scene/dae:instance_visual_scene",na,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),ha=ma[0<a.length?a:"visual_scene0"]):ha=null;ra=new THREE.Object3D;for(a=0;a<ha.nodes.length;a++)ra.add(f(ha.nodes[a]));hb=[];c(ra);a={scene:ra,morphs:kb,skins:Ha,animations:hb,dae:{images:ya,materials:Ga,cameras:gb,effects:Za,geometries:Sa,
controllers:oa,animations:cb,visualScenes:ma,scene:ha}};d&&d(a);return a}function b(a,b,c){a=na.evaluate(a,na,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=ha.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};hb.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=
Math.max(d.length,b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiply(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}function e(a,
b,c){var e,f=oa[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{c=1E6;var g=-c,h=0;for(e in cb)for(var k=cb[e],l=0;l<k.sampler.length;l++){var m=k.sampler[l];m.create();c=Math.min(c,m.startTime);g=Math.max(g,m.endTime);h=Math.max(h,m.input.length)}e=h;b=ha.getChildById(b.skeleton[0],!0)||ha.getChildBySid(b.skeleton[0],!0);for(var p,q,g=new THREE.Vector3,
r,l=0;l<a.vertices.length;l++)f.skin.bindShapeMatrix.multiplyVector3(a.vertices[l]);for(c=0;c<e;c++){h=[];k=[];for(l=0;l<a.vertices.length;l++)k.push(new THREE.Vector3);d(b,h,c);l=h;m=f.skin;for(q=0;q<l.length;q++)if(p=l[q],r=-1,"JOINT"==p.type){for(var s=0;s<m.joints.length;s++)if(p.sid==m.joints[s]){r=s;break}if(0<=r){s=m.invBindMatrices[r];p.invBindMatrix=s;p.skinningMatrix=new THREE.Matrix4;p.skinningMatrix.multiply(p.world,s);p.weights=[];for(s=0;s<m.weights.length;s++)for(var t=0;t<m.weights[s].length;t++){var u=
m.weights[s][t];u.joint==r&&p.weights.push(u)}}else throw"ColladaLoader: Could not find joint '"+p.sid+"'.";}for(l=0;l<h.length;l++)if("JOINT"==h[l].type)for(m=0;m<h[l].weights.length;m++)p=h[l].weights[m],q=p.index,p=p.weight,r=a.vertices[q],q=k[q],g.x=r.x,g.y=r.y,g.z=r.z,h[l].skinningMatrix.multiplyVector3(g),q.x+=g.x*p,q.y+=g.y*p,q.z+=g.z*p;a.morphTargets.push({name:"target_"+c,vertices:k})}}}function f(a,b){var c=new THREE.Object3D,d,g,h,k;for(h=0;h<a.controllers.length;h++){var l=oa[a.controllers[h].url];
switch(l.type){case "skin":if(Sa[l.skin.source]){var m=new u;m.url=l.skin.source;m.instance_material=a.controllers[h].instance_material;a.geometries.push(m);d=a.controllers[h]}else oa[l.skin.source]&&(g=l=oa[l.skin.source],l.morph&&Sa[l.morph.source]&&(m=new u,m.url=l.morph.source,m.instance_material=a.controllers[h].instance_material,a.geometries.push(m)));break;case "morph":Sa[l.morph.source]&&(m=new u,m.url=l.morph.source,m.instance_material=a.controllers[h].instance_material,a.geometries.push(m),
g=a.controllers[h]),console.log("ColladaLoader: Morph-controller partially supported.")}}m={};for(h=0;h<a.geometries.length;h++){k=a.geometries[h];var l=k.instance_material,p=Sa[k.url],q={},r=[],s=0,v;if(p&&p.mesh&&p.mesh.primitives){0==c.name.length&&(c.name=p.id);if(l)for(k=0;k<l.length;k++){v=l[k];var w=Ga[v.target],x=Za[w.instance_effect.url].shader.material;if(p.doubleSided){if(!(x in m)){var y=x.clone();y.side=THREE.DoubleSide;m[x]=y}x=m[x]}x.opacity=!x.opacity?1:x.opacity;q[v.symbol]=s;r.push(x);
v=x;v.name=null==w.name||""===w.name?w.id:w.name;s++}l=v||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:p.doubleSided?THREE.DoubleSide:THREE.FrontSide});p=p.mesh.geometry3js;if(1<s){l=new THREE.MeshFaceMaterial;p.materials=r;for(k=0;k<p.faces.length;k++)r=p.faces[k],r.materialIndex=q[r.daeMaterial]}if(void 0!==d)e(p,d),l.morphTargets=!0,l=new THREE.SkinnedMesh(p,l,!1),l.skeleton=d.skeleton,l.skinController=oa[d.url],l.skinInstanceController=d,l.name="skin_"+Ha.length,
Ha.push(l);else if(void 0!==g){k=p;q=g instanceof t?oa[g.url]:g;if(!q||!q.morph)console.log("could not find morph controller!");else{q=q.morph;for(r=0;r<q.targets.length;r++)s=Sa[q.targets[r]],s.mesh&&(s.mesh.primitives&&s.mesh.primitives.length)&&(s=s.mesh.primitives[0].geometry,s.vertices.length===k.vertices.length&&k.morphTargets.push({name:"target_1",vertices:s.vertices}));k.morphTargets.push({name:"target_Z",vertices:k.vertices})}l.morphTargets=!0;l=new THREE.Mesh(p,l);l.name="morph_"+kb.length;
kb.push(l)}else l=new THREE.Mesh(p,l);1<a.geometries.length?c.add(l):c=l}}for(h=0;h<a.cameras.length;h++)c=gb[a.cameras[h].url],c=new THREE.PerspectiveCamera(c.fov,c.aspect_ratio,c.znear,c.zfar);c.name=a.id||"";c.matrix=a.matrix;h=a.matrix.decompose();c.position=h[0];c.quaternion=h[1];c.useQuaternion=!0;c.scale=h[2];Ka.centerGeometry&&c.geometry&&(h=THREE.GeometryUtils.center(c.geometry),c.quaternion.multiplyVector3(h.multiplySelf(c.scale)),c.position.subSelf(h));for(h=0;h<a.nodes.length;h++)c.add(f(a.nodes[h],
a));return c}function g(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=null}function l(){this.weights=this.targets=this.source=this.method=null}function k(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function m(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function q(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function p(){this.type=this.sid="";this.data=[];this.obj=null}function t(){this.url="";this.skeleton=[];this.instance_material=[]}function r(){this.target=this.symbol=""}function u(){this.url="";this.instance_material=[]}function s(){this.id="";this.mesh=null}function v(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function y(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function x(){y.call(this);
this.vcount=[]}function w(){y.call(this);this.vcount=3}function G(){this.source="";this.stride=this.count=0;this.params=[]}function E(){this.input={}}function A(){this.semantic="";this.offset=0;this.source="";this.set=0}function D(a){this.id=a;this.type=null}function C(){this.name=this.id="";this.instance_effect=null}function M(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function H(a,b){this.type=
a;this.effect=b;this.material=null}function L(a){this.effect=a;this.format=this.init_from=null}function O(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function R(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function S(){this.url=""}function P(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function F(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function I(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function ba(a){this.targets=[];this.time=a}function ca(){this.technique=this.name=this.id=""}function ia(){this.url=""}function aa(a){return"dae"==a?"http://www.collada.org/2005/11/COLLADASchema":null}function la(a){a=qa(a);for(var b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function K(a){a=qa(a);
for(var b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function qa(a){return 0<a.length?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function Fa(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function Z(a,b){a.doubleSided=!1;var c=na.evaluate(".//dae:extra//dae:double_sided",b,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c&&(c=c.iterateNext())&&1===parseInt(c.textContent,10))a.doubleSided=!0}function Y(a,b){if(Ka.convertUpAxis&&za!==Ka.upAxis)switch(Da){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1],a[1]=a[2],a[2]=b*c}}function $(a,b){var c=[a[b],a[b+1],a[b+2]];Y(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function Q(a){if(Ka.convertUpAxis){var b=[a[0],a[4],a[8]];Y(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];Y(b,-1);a[1]=b[0];a[5]=b[1];a[9]=
b[2];b=[a[2],a[6],a[10]];Y(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];Y(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];Y(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];Y(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];Y(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function fa(a){if(Ka.convertUpAxis)switch(a){case "X":switch(Da){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch(Da){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(Da){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var na=null,ra=null,ha,ua=null,sa={},ya={},cb={},oa={},Sa={},Ga={},Za={},gb={},hb,ma,Ba,kb,Ha,ib=THREE.SmoothShading,Ka={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},za="Y",Da=null,eb=Math.PI/180;g.prototype.parse=function(a){this.id=
a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];"init_from"==c.nodeName&&(this.init_from=c.textContent)}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new k).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new l).parse(c),this.type=c.nodeName}}return this};l.prototype.parse=function(a){var b=
{},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case "source":e=(new D).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};l.prototype.parseInputs=
function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":b.push((new A).parse(d))}}return b};k.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case "bind_shape_matrix":f=la(f.textContent);this.bindShapeMatrix=Q(f);break;case "source":f=
(new D).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};k.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":var d=(new A).parse(d),e=b[d.source];"JOINT"==d.semantic?this.joints=e.read():"INV_BIND_MATRIX"==d.semantic&&(this.invBindMatrices=e.read())}}};k.prototype.parseWeights=function(a,
b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case "input":e.push((new A).parse(g));break;case "v":c=K(g.textContent);break;case "vcount":d=K(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],l=[],k=0;k<h;k++){for(var m={},p=0;p<e.length;p++){var q=e[p],r=c[g+q.offset];switch(q.semantic){case "JOINT":m.joint=r;break;case "WEIGHT":m.weight=b[q.source].data[r]}}l.push(m);g+=e.length}for(k=0;k<l.length;k++)l[k].index=f;this.weights.push(l)}};
m.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};m.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};m.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "node":this.nodes.push((new q).parse(c))}}return this};
q.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=0<=e.indexOf("."),g=0<=e.indexOf("("),h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},c}return null};q.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=
0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};q.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};q.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};q.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");
this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type="JOINT"==this.type?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case "node":this.nodes.push((new q).parse(b));break;case "instance_camera":this.cameras.push((new ia).parse(b));break;case "instance_controller":this.controllers.push((new t).parse(b));
break;case "instance_geometry":this.geometries.push((new u).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=na.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",na,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new q).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new p).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=
[];c=1E6;b=-1E6;for(var d in cb)for(var e=cb[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];d==this.id&&(h.create(),g.sampler=h,c=Math.min(c,h.startTime),b=Math.max(b,h.endTime),a.push(g))}a.length&&(this.startTime=c,this.endTime=b);if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var l=this.channels[c],f=l.fullSid,g=l.sampler,h=g.input,k=this.getTransformBySid(l.sid),m;if(l.arrIndices){m=[];b=0;for(var r=l.arrIndices.length;b<
r;b++){var s=m,v=b,w=l.arrIndices[b];-1<w&&3>w&&(w=fa(["X","Y","Z"][w]),w={X:0,Y:1,Z:2}[w]);s[v]=w}}else m=fa(l.member);if(k){-1===a.indexOf(f)&&a.push(f);b=0;for(r=h.length;b<r;b++){for(var s=h[b],l=g.getData(k.type,b),v=null,w=0,x=d.length;w<x&&null==v;w++){var y=d[w];if(y.time===s)v=y;else if(y.time>s)break}if(!v){v=new ba(s);w=-1;x=0;for(y=d.length;x<y&&-1==w;x++)d[x].time>=s&&(w=x);s=w;d.splice(-1==s?d.length:s,0,v)}v.addTarget(f,k,m,l)}}else console.log('Could not find transform "'+l.sid+'" in node '+
this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(v=d[b],!v.hasTarget(e)){h=d;f=v;m=b;g=e;k=void 0;a:{k=m?m-1:0;for(k=0<=k?k:k+h.length;0<=k;k--)if(r=h[k],r.hasTarget(g)){k=r;break a}k=null}r=void 0;a:{for(m+=1;m<h.length;m++)if(r=h[m],r.hasTarget(g))break a;r=null}if(k&&r){h=(f.time-k.time)/(r.time-k.time);k=k.getTarget(g);m=r.getTarget(g).data;r=k.data;l=void 0;if("matrix"===k.type)l=r;else if(r.length){l=[];for(s=0;s<r.length;++s)l[s]=r[s]+(m[s]-r[s])*h}else l=r+(m-r)*h;f.addTarget(g,
k.transform,k.member,l)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};q.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};p.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=la(a.textContent);this.convert();return this};p.prototype.convert=function(){switch(this.type){case "matrix":this.obj=Q(this.data);break;case "rotate":this.angle=this.data[3]*eb;case "translate":Y(this.data,
-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":Y(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};p.prototype.apply=function(a){switch(this.type){case "matrix":a.multiplySelf(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,this.angle);break;case "scale":a.scale(this.obj)}};p.prototype.update=function(a,
b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(1===b.length)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0],this.obj.n24=a[1],this.obj.n34=a[2],this.obj.n44=a[3]}else 2===b.length?this.obj["n"+(b[0]+1)+(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");
else this.obj.copy(a);break;case "translate":case "scale":"[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case "rotate":switch("[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]),b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;case "ANGLE":this.angle=a*eb;break;default:this.obj.x=
a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=a[3]*eb}}};t.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1===c.nodeType)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=na.evaluate(".//dae:instance_material",c,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new r).parse(d)),
d=c.iterateNext()}}return this};r.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};u.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&"bind_material"==c.nodeName){if(a=na.evaluate(".//dae:instance_material",c,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new r).parse(b)),
b=a.iterateNext();break}}return this};s.prototype.parse=function(a){this.id=a.getAttribute("id");Z(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new v(this)).parse(c)}}return this};v.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");void 0==sa[d]&&(sa[d]=(new D(d)).parse(c));break;case "vertices":this.vertices=(new E).parse(c);
break;case "triangles":this.primitives.push((new w).parse(c));break;case "polygons":this.primitives.push((new y).parse(c));break;case "polylist":this.primitives.push((new x).parse(c))}}this.geometry3js=new THREE.Geometry;a=sa[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push($(a,b).clone());for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();
this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};v.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,h,l,k,m,p=0,q=3,r=0,s=[];for(c=0;c<f.length;c++)switch(g=f[c],q=g.offset+1,r=r<q?q:r,g.semantic){case "TEXCOORD":s.push(g.set)}for(var t=0;t<e.length;++t)for(var u=e[t],v=0;v<u.length;){var w=[],x=[],y=null,A=[],q=a.vcount?a.vcount.length?
a.vcount[p++]:a.vcount:u.length/r;for(c=0;c<q;c++)for(d=0;d<f.length;d++)switch(g=f[d],k=sa[g.source],h=u[v+c*r+g.offset],m=k.accessor.params.length,l=h*m,g.semantic){case "VERTEX":w.push(h);break;case "NORMAL":x.push($(k.data,l));break;case "TEXCOORD":y=y||{};void 0===y[g.set]&&(y[g.set]=[]);y[g.set].push(new THREE.UV(k.data[l],k.data[l+1]));break;case "COLOR":A.push((new THREE.Color).setRGB(k.data[l],k.data[l+1],k.data[l+2]))}if(0==x.length)if(g=this.vertices.input.NORMAL){k=sa[g.source];m=k.accessor.params.length;
c=0;for(h=w.length;c<h;c++)x.push($(k.data,w[c]*m))}else b.calcNormals=!0;if(!y&&(y={},g=this.vertices.input.TEXCOORD)){s.push(g.set);k=sa[g.source];m=k.accessor.params.length;c=0;for(h=w.length;c<h;c++)l=w[c]*m,void 0===y[g.set]&&(y[g.set]=[]),y[g.set].push(new THREE.UV(k.data[l],1-k.data[l+1]))}if(0==A.length&&(g=this.vertices.input.COLOR)){k=sa[g.source];m=k.accessor.params.length;c=0;for(h=w.length;c<h;c++)l=w[c]*m,A.push((new THREE.Color).setRGB(k.data[l],k.data[l+1],k.data[l+2]))}d=null;g=[];
if(3===q)g.push(new THREE.Face3(w[0],w[1],w[2],x,A.length?A:new THREE.Color));else if(4===q)g.push(new THREE.Face4(w[0],w[1],w[2],w[3],x,A.length?A:new THREE.Color));else if(4<q&&Ka.subdivideFaces){A=A.length?A:new THREE.Color;for(d=1;d<q-1;)g.push(new THREE.Face3(w[0],w[d],w[d+1],[x[0],x[d++],x[d]],A))}if(g.length){c=0;for(h=g.length;c<h;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<s.length;d++)w=y[s[d]],w=4<q?[w[0],w[c+1],w[c+2]]:4===q?[w[0],w[1],w[2],w[3]]:[w[0],w[1],w[2]],b.faceVertexUvs[d]||
(b.faceVertexUvs[d]=[]),b.faceVertexUvs[d].push(w)}}else console.log("dropped face with vcount "+q+" for geometry with id: "+b.id);v+=r*q}};y.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)this.inputs[b].source==a.id&&(this.inputs[b].source=a.input.POSITION.source)};y.prototype.parse=function(a){this.material=a.getAttribute("material");this.count=Fa(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new A).parse(a.childNodes[b]));
break;case "vcount":this.vcount=K(c.textContent);break;case "p":this.p.push(K(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};x.prototype=Object.create(y.prototype);w.prototype=Object.create(y.prototype);G.prototype.parse=function(a){this.params=[];this.source=a.getAttribute("source");this.count=Fa(a,"count",0);this.stride=Fa(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if("param"==c.nodeName){var d={};d.name=c.getAttribute("name");
d.type=c.getAttribute("type");this.params.push(d)}}return this};E.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if("input"==a.childNodes[b].nodeName){var c=(new A).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};A.prototype.parse=function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=Fa(a,"set",-1);this.offset=Fa(a,"offset",0);"TEXCOORD"==this.semantic&&0>this.set&&(this.set=
0);return this};D.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=qa(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push("true"==d[f]||"1"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;break;case "float_array":this.data=la(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=K(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=qa(c.textContent);
this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if("accessor"==c.childNodes[d].nodeName){this.accessor=(new G).parse(c.childNodes[d]);break}}}return this};D.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=Q(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+
b.type+".")}return a};C.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if("instance_effect"==a.childNodes[b].nodeName){this.instance_effect=(new S).parse(a.childNodes[b]);break}return this};M.prototype.isColor=function(){return null==this.texture};M.prototype.isTexture=function(){return null!=this.texture};M.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "color":c=
la(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};M.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&"extra"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&"technique"===a.childNodes[1].nodeName&&
(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=c.textContent}}return this};H.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=
(new M).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=na.evaluate(".//dae:float",c,aa,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};H.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=
this[c];if(d instanceof M)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid){var e=ya[this.effect.surface.init_from];e&&(e=THREE.ImageUtils.loadTexture(Ba+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e,"emission"===
c&&(a.emissive=16777215))}}else if("diffuse"===c||!b)"emission"===c?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];0<a[c]&&(a.envMap=Ka.defaultEnvMap);a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=this[c];1!==this[c]&&(a.envMap=Ka.defaultEnvMap);break;case "transparency":b&&(a.transparent=!0,a.opacity=this[c],b=!0)}a.shading=ib;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;
switch(this.type){case "constant":a.color=a.emission;this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":a.color=a.diffuse;this.material=new THREE.MeshPhongMaterial(a);break;default:a.color=a.diffuse,this.material=new THREE.MeshLambertMaterial(a)}return this.material};L.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;
break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};O.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+
c.nodeName)}}return this};R.prototype.create=function(){if(null==this.shader)return null};R.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");Z(this,a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};R.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];
if(1==d.nodeType)switch(d.nodeName){case "surface":this.surface=(new L(this)).parse(d);this.surface.sid=b;break;case "sampler2D":this.sampler=(new O(this)).parse(d);this.sampler.sid=b;break;case "extra":break;default:console.log(d.nodeName)}}};R.prototype.parseProfileCOMMON=function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);
break;case "image":d=(new g).parse(d);ya[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};R.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=(new H(c.nodeName,this)).parse(c)}}};S.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};P.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "animation":var c=(new P).parse(c),d;for(d in c.source)this.source[d]=c.source[d];for(var e=0;e<c.channel.length;e++)this.channel.push(c.channel[e]),this.sampler.push(c.sampler[e]);break;case "source":d=(new D).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new I(this)).parse(c));break;case "channel":this.channel.push((new F(this)).parse(c))}}return this};
F.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();a=b.shift();var c=0<=a.indexOf("."),d=0<=a.indexOf("(");if(c)b=a.split("."),this.sid=b.shift(),this.member=b.shift();else if(d){b=a.split("(");this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};I.prototype.parse=function(a){this.id=
a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "input":this.inputs.push((new A).parse(c))}}return this};I.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;
case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),this.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};I.prototype.getData=function(a,b){var c;if("matrix"===a&&16===this.strideOut)c=this.output[b];else if(1<this.strideOut){c=[];b*=this.strideOut;
for(var d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case "rotate":case "translate":Y(c,-1);break;case "scale":Y(c,1)}else 4===this.strideOut&&"matrix"===a&&Y(c,-1)}else c=this.output[b];return c};ba.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,member:c,transform:b,data:d})};ba.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};ba.prototype.getTarget=function(a){for(var b=
0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};ba.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};ba.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=this.targets[c],e=a.getTarget(d.sid);if("matrix"!==d.transform.type&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,h=d.data;if(0>f||1<f)console.log("Key.interpolate: Warning! Scale out of bounds:"+f),f=
0>f?0:1;if(h.length)for(var e=[],k=0;k<h.length;++k)e[k]=h[k]+(g[k]-h[k])*f;else e=h+(g-h)*f}else e=d.data;d.transform.update(e,d.member)}};ca.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};ca.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if("technique_common"==a.childNodes[b].nodeName)for(var c=
a.childNodes[b],d=0;d<c.childNodes.length;d++)if(this.technique=c.childNodes[d].nodeName,"perspective"==this.technique)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if("orthographic"==this.technique){e=c.childNodes[d];for(f=
0;f<e.childNodes.length;f++)switch(g=e.childNodes[f],g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}return this};ia.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=
new XMLHttpRequest;f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)if(f.responseXML)ua=c,a(f.responseXML,void 0,b);else if(f.responseText){ua=c;var g=(new DOMParser).parseFromString(f.responseText,"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+b+")")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader("Content-Length")),d({total:e,loaded:f.responseText.length}))};f.open("GET",b,!0);f.send(null)}else alert("Don't know how to parse XML!")},
parse:a,setPreferredShading:function(a){ib=a},applySkin:e,geometries:Sa,options:Ka}};THREE.Mesh.prototype._NAME="THREE.Mesh";THREE.Mesh.prototype.bakeTransformsIntoGeometry=function(){this.updateMatrix();var a=THREE.GeometryUtils.clone(this.geometry);a.applyMatrix(this.matrix);this.geometry=a;this.geometry.computeBoundingSphere();this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.quaternion=new THREE.Quaternion};
THREE.Mesh.prototype.cloneEx=function(a,b){var c;c=b?THREE.GeometryUtils.clone(this.geometry):this.geometry;c=new THREE.Mesh(c,this.material);this.cloneBuilder_(c);if(a)for(var d=this.children.length,e=0;e<d;e++){var f=this.children[e].cloneEx(a,b);c.add(f)}return c};THREE.Mesh.prototype.clone=function(){return this.cloneEx(!1,!1)};THREE.Mesh.prototype.getBoundingBox=function(){var a;void 0!=this.geometry&&(a=this.geometry.getBoundingBoxObject());return a};
THREE.Mesh.prototype.extractPositionFromGeometry=function(){var a=THREE.GeometryUtils.clone(this.geometry),b=a.getDimensions();a.mergeVertices();for(var c=-1*b.x/2-a.boundingBox.x[0],d=-1*b.y/2-a.boundingBox.y[0],b=-1*b.z/2-a.boundingBox.z[0],e=a.vertices.length,f=0;f<e;f++)a.vertices[f].position.x+=c,a.vertices[f].position.y+=d,a.vertices[f].position.z+=b;a.computeBoundingBox();a.computeBoundingSphere();this.geometry=a;this.position.x-=c;this.position.y-=d;this.position.z-=b};
THREE.Object3D.prototype._NAME="THREE.Object3D";THREE.Object3D.prototype.removeAllChildren=function(){for(var a=this.children.length,b=[],c=0;c<a;c++){var d=this.children[c];b.push(d)}for(c=0;c<a;c++)d=b.pop(),this.remove(d)};THREE.Object3D.prototype.getDescendantsBoundingBox=function(){for(var a=this.getDescendants(),b=a.length,c=new THREE.BoundingBox,d=0;d<b;d++){var e=a[d];if("THREE.Mesh"==e._NAME){var f=e.getBoundingBox();f.addSelf(e.position);c.mergeSelf(f)}}return c};
THREE.Object3D.prototype.cloneBuilder_=function(a){a.name=this.name;a.properties=this.properties;a.parent=this.parent;a.up=this.up.clone();a.position=this.position.clone();a.rotation=this.rotation.clone();a.eulerOrder=this.eulerOrder;a.scale=this.scale.clone();a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.renderDepth=this.renderDepth;a.matrix=this.matrix.clone();a.matrixWorld=this.matrixWorld.clone();a.matrixRotationWorld=this.matrixRotationWorld.clone();a.matrixAutoUpdate=
this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion=this.quaternion.clone();a.useQuaternion=this.useQuaternion;a.boundRadius=this.boundRadius;a.boundRadiusScale=this.boundRadiusScale;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;a._vector=this._vector.clone()};
THREE.Object3D.prototype.cloneEx=function(a,b){var c=new THREE.Object3D;this.cloneBuilder_(c);if(a)for(var d=this.children.length,e=0;e<d;e++){var f=this.children[e].cloneEx(a,b);c.add(f)}return c};THREE.Object3D.prototype.addChildren=function(a){if(void 0===a||null==a)throw"you passed an invalid object3d as an argument";this.addArray(a.children)};THREE.Object3D.prototype.cloneArray=function(a){var b=a.length;if(1>b)throw"Array is empty";for(var c=0;c<b;c++){var d=a[c].cloneEx();this.add(d)}};
THREE.Object3D.prototype.addArray=function(a){var b=a.length;if(1>b)throw"Array is empty";for(var c=0;c<b;c++){var d=a.pop();this.add(d)}};THREE.Geometry.prototype.getDimensions=function(){this.computeBoundingBox();var a=this.boundingBox;return new THREE.Vector3(a.max.x-a.min.x,a.max.y-a.min.y,a.max.z-a.min.z)};THREE.Geometry.prototype.getBoundingBoxPoints=function(){this.computeBoundingBox();return[this.boundingBox.min,this.boundingBox.max]};
THREE.Geometry.prototype.getBoundingBoxObject=function(){this.computeBoundingBox();return new THREE.BoundingBox(this.boundingBox.min,this.boundingBox.max)};
THREE.TrackballControlsEx=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68,84];this.target=
new THREE.Vector3(0,0,0);var d=!1,e=this.STATE.NONE,f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,l=new THREE.Vector2,k=new THREE.Vector2,m=new THREE.Vector2,q=new THREE.Vector2;this.isDirty=!0;this.zoomNow=function(a){a=-1*a/40;l=new THREE.Vector2(0,0);k=new THREE.Vector2(0,a);this.isDirty=!0};this.resetZoom=function(){l=new THREE.Vector2;k=new THREE.Vector2;this.isDirty=!0};this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,
b){return new THREE.Vector2(0.5*((a-this.screen.offsetLeft)/this.radius),0.5*((b-this.screen.offsetTop)/this.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*this.screen.width-this.screen.offsetLeft)/this.radius,(0.5*this.screen.height+this.screen.offsetTop-b)/this.radius,0),d=c.length();1<d?c.normalize():c.z=Math.sqrt(1-d*d);f.copy(this.object.position).subSelf(this.target);d=this.object.up.clone().setLength(c.y);d.addSelf(this.object.up.clone().crossSelf(f).setLength(c.x));
d.addSelf(f.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(g.dot(h)/g.length()/h.length());if(a){var b=(new THREE.Vector3).cross(g,h).normalize(),c=new THREE.Quaternion,a=a*this.rotateSpeed;c.setFromAxisAngle(b,-a);c.multiplyVector3(f);c.multiplyVector3(this.object.up);c.multiplyVector3(h);this.staticMoving?g=h:(c.setFromAxisAngle(b,a*(this.dynamicDampingFactor-1)),c.multiplyVector3(g))}};this.zoomCamera=function(){var a=1+(k.y-l.y)*this.zoomSpeed;1!==a&&0<a&&(f.multiplyScalar(a),
this.staticMoving?l=k:l.y+=(k.y-l.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=q.clone().subSelf(m);if(a.lengthSq()){a.multiplyScalar(f.length()*this.panSpeed);var b=f.clone().crossSelf(this.object.up).setLength(a.x);b.addSelf(this.object.up.clone().setLength(a.y));this.object.position.addSelf(b);this.target.addSelf(b);this.staticMoving?m=q:m.addSelf(a.sub(q,m).multiplyScalar(this.dynamicDampingFactor))}};this.checkDistances=function(){if(!this.noZoom||!this.noPan)this.object.position.lengthSq()>
this.maxDistance*this.maxDistance&&this.object.position.setLength(this.maxDistance),f.lengthSq()<this.minDistance*this.minDistance&&this.object.position.add(this.target,f.setLength(this.minDistance))};this.update=function(){this.isDirty&&(this.isDirty=!1,f.copy(this.object.position).subSelf(this.target),this.rotateCamera(),this.noZoom||this.zoomCamera(),this.noPan||this.panCamera(),this.object.position.add(this.target,f),this.checkDistances(),this.object.lookAt(this.target))};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,function(a){d&&(g=h=this.getMouseProjectionOnBall(a.clientX,a.clientY),l=k=this.getMouseOnScreen(a.clientX,a.clientY),m=q=this.getMouseOnScreen(a.clientX,a.clientY),d=!1);e!==this.STATE.NONE&&(e===this.STATE.ROTATE?h=this.getMouseProjectionOnBall(a.clientX,a.clientY):e===this.STATE.ZOOM&&!this.noZoom?k=this.getMouseOnScreen(a.clientX,a.clientY):e===this.STATE.PAN&&!this.noPan&&(q=this.getMouseOnScreen(a.clientX,
a.clientY)),this.isDirty=!0)}),!1);this.domElement.addEventListener("mousedown",c(this,function(a){this.isDirty=!0;a.preventDefault();e===this.STATE.NONE&&(e=a.button,e===this.STATE.ROTATE?g=h=this.getMouseProjectionOnBall(a.clientX,a.clientY):e===this.STATE.ZOOM&&!this.noZoom?l=k=this.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(m=q=this.getMouseOnScreen(a.clientX,a.clientY)))}),!1);this.domElement.addEventListener("mouseup",c(this,function(a){this.isDirty=!0;a.preventDefault();e=this.STATE.NONE}),
!1);window.addEventListener("keydown",c(this,function(a){this.isDirty=!0;e===this.STATE.NONE&&(a.keyCode===this.keys[this.STATE.ROTATE]?e=this.STATE.ROTATE:a.keyCode===this.keys[this.STATE.ZOOM]&&!this.noZoom?e=this.STATE.ZOOM:a.keyCode===this.keys[this.STATE.DEBUG]?(console.log("position: "+this.object.matrixWorld.getPosition().toString()),console.log("rotation: "+this.object.rotation.toString())):a.keyCode===this.keys[this.STATE.PAN]&&!this.noPan&&(e=this.STATE.PAN),e!==this.STATE.NONE&&(d=!0))}),
!1);window.addEventListener("keyup",c(this,function(a){this.isDirty=!0;e!==this.STATE.NONE&&(e=this.STATE.NONE)}),!1)};THREE.TrackballControlsEx.prototype.STATE={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,DEBUG:3};THREE.BoundingBox=function(a,b){this.min=a||new THREE.Vector3;this.max=b||new THREE.Vector3};
THREE.BoundingBox.prototype={constructor:THREE.BoundingBox,set:function(a,b){this.min=a;this.max=b;return this},setMin:function(a){this.min=a;return this},setMax:function(a){this.max=a;return this},copy:function(a){this.min=a.min.clone();this.max=a.max.clone();return this},mergeSelf:function(a){this.min.x=Math.min(this.min.x,a.min.x);this.min.y=Math.min(this.min.y,a.min.y);this.min.z=Math.min(this.min.z,a.min.z);this.max.x=Math.max(this.max.x,a.max.x);this.max.y=Math.max(this.max.y,a.max.y);this.max.z=
Math.max(this.max.z,a.max.z)},addSelf:function(a){this.min.addSelf(a);this.max.addSelf(a)},clone:function(){return new THREE.BoundingBox(this.min.clone(),this.max.clone())}};THREE.BinaryLoader.prototype.load=function(a,b,c){var d=c.texturePath?c.texturePath:this.extractUrlBase(a);c=c.binaryPath?c.binaryPath:this.extractUrlBase(a);var e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,d,c,e)};
