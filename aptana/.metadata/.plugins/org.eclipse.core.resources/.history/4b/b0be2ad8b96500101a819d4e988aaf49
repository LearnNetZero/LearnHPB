
		function returnKey(evt)
		{
			var evt  = (evt) ? evt : ((event) ? event : null);
		 
			if (evt.keyCode == 13) 
			{
				var vd = new hemi.view.ViewData();
				vd.eye = [16.6,25.3,-23.6];
				
				hemi.world.camera.moveToView(vd,40);
				
			}
		}
		
		function onSceneLoaded() {

			var transformList = lgb.loader.theModel.getTransforms('Mesh_033');
			var transform = transformList[0];
			var theMaterial = transform.shapes[0].elements[0].material;
			
			var drawList = theMaterial.getParam('o3d.drawList').value;
			var zdrawList = hemi.view.viewInfo.zOrderedDrawList;
			theMaterial.getParam('o3d.drawList').value = zdrawList;
			var theMaterialOpacity = hemi.fx.addOpacity(theMaterial);
			theMaterialOpacity.value = 1.0;
			
			/* Create a transform-level opacity paramater that will override the
			 * material-level opacity parameter. That way, we can make this wall
			 * fade without fading every object that uses the wall material.
			 */
			this.opacity = transform.createParam('opacity','ParamFloat');
			this.opacity.value = 1.0;
			/* On any keyDown, begin the fading. Reverse the direction each time */
			/* Fade the wall a little more on each frame, between 1 and 0.4 */
			//hemi.view.addRenderListener(this);
			
			var vp = new hemi.view.Viewpoint();		// Create a new Viewpoint
			vp.eye = [-56,61,39];					// Set viewpoint eye
			vp.target = [0,10,0];					// Set viewpoint target

			//hemi.console.addToPage();
			console.log("kuda version: " + hemi.version);
			
			hemi.world.camera.enableControl();	// Enable camera mouse control
			hemi.model.modelRoot.rotateX(4.72);
			
			
			this.subscriberCameraStopped = hemi.world.camera.subscribe(
					hemi.msg.stop,
					this,
					'onCameraMoved');
			
			hemi.world.camera.moveToView(vp,40);
		}
		
		
		function onCameraMoved(msg) {
			var result = hemi.world.camera.unsubscribe(this.subscriberCameraStopped, hemi.msg.stop);
			lgb.gui.showHud();
			document.onkeypress = returnKey;
			lgb.utils.preload('icon_exterior_envelope_over.png,icon_lighting_over.png,icon_general_over.png,icon_exterior_envelope_over.png');
		}
	
			
		function onRender (msg) {
			if (this.count > 0) {
				this.opacity.value += this.dir*0.02;
				this.count--;
			}
		}