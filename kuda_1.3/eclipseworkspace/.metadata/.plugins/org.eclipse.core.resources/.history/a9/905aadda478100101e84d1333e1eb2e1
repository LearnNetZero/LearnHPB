
/**
 * @namespace A module for running unit tests
 * @author Raj Dye
 */
var test = (function(test) {


	/**
	 * An MVC controller class for unit tests
	 * @author Raj Dye
	 */
	test.Controller = function(){
		
		/**
		 * The lists of unit test to run
		 * @type Array of Objects
		 */
		this.testList = null;
	
		/**
		 * The number of tests to run
		 * @type int
		 */
		this.testCount = 0;
		
		/**
		 * Index of the current test that we are running
		 * @type int
		 */
		this.testIdx = 0;
		
		/**
		 * This is a delegate that is passed to each unit test in
		 * turn as we run them
		 * @type jQuery proxy
		 */
		this.onFinshedHandler = $.proxy(this.onTestFinished, this);
		
		/**
		 * The unit test that we are running
		 * @type Object (unit test)
		 */
		this.theCurrentTest = null;
		
		
	};
	
	test.Controller.prototype = {
		/**
		 * runs all the specified unit tests
		 * @param Array of unit tests
		 */
		run : function(testList) {
			
			this.testList = testList;
			this.testCount = this.testList.length;
			
			if (this.testCount < 1) {
				throw ('There are no objects in the test list');
				return;	
			}
			
			this.runOne();
			
		},
		/**
		 * Starts a unit test
		 */
		runOne : function() {
			this.theCurrentTest = this.testList[this.testIdx];
			this.theCurrentTest.start(this.onFinshedHandler);

		},
		/**
		 * This is called after each unit test is completed
		 */
		onTestFinished : function (event) {
			
			this.testIdx++;
			if (this.testIdx <  this.testCount) {
				this.theCurrentTest.cleanup();
				this.runOne();
			} else {
				this.finished();
			}
		},
		/**
		 * This is needed because JqUnit doesnt really tell us that we are done
		 * running tests
		 */
		finished : function () {
			
			jqUnit.start();
			jqUnit.module(''); 
			jqUnit.test("FINISHED", function(){});
			
		}
		
		
	};

	
	return test;
	
})(test || {});











