/**
 * 
 */
//o3djs.base.o3d = o3d;
//o3djs.require('o3djs.webgl');


var lgb = (function(lgb) {
	

	/**
	 * @namespace A module for managing 3D models and their assets.
	 */
	lgb.loader = lgb.loader || {};
	
	
	lgb.loader.init = function(callbackObj, callbackFuncName) {
		this.callbackObj = callbackObj;
		this.callbackFuncName = callbackFuncName;
		
		this.theModel = null;
		this.msgHandler = null;
		this.count = 0; // Counter to keep track of wall opacity
		this.dir = 1; // Whether wall is becoming more or less opaque
		this.subscriberWorldReady = null;
		this.subscriberCameraStopped = null;
		this.opacity = null;
		this.filePath = 'scene.json';
		var that = this;
		
		this.init2 = function(clientElements) {
			hemi.core.init(clientElements[0]);
			that.init3();
		}
		
		o3djs.webgl.makeClients(this.init2);
	}

	lgb.loader.init3 = function() {
		
		hemi.view.setBGColor([0.8, 0.8, 0.8, 1]);
			
		this.theModel = new hemi.model.Model();	// Create a new Model
		
		this.subscriberWorldReady = hemi.world.subscribe(
				hemi.msg.ready,
				this.callbackObj ,
				this.callbackFuncName
			);
		
		this.theModel.setFileName(this.filePath); // Set the model file
		hemi.world.ready();   // Indicate that we are ready to start our script
	}

		
		
	
	lgb.loader.onCameraMoved = function(msg) {
			

				var result = hemi.world.camera.unsubscribe(this.subscriberCameraStopped, hemi.msg.stop);
				onWorldSetup();
	}
	
	lgb.loader.leftNavClick = function(buttonNumber) {
				switch(buttonNumber)
				{
					case 0:
						
						if (this.count == 0) {
							this.count = 40;
							this.dir = -this.dir;
						} 
						
					  break;
					case 1:
			
					  break;
					default:
			
					}
		
		}
			

	
	return lgb;
	
})(lgb || {});

